{
    "paths": {
        "/user/{userID}/monetary-account/{monetary-accountID}/share-invite-bank-inquiry/{share-invite-bank-inquiryID}/amount-used/{itemId}": {
            "delete": {
                "tags": [
                    "amount-used"
                ],
                "summary": "",
                "description": "Reset the available budget for a bank account share. To be called without any ID at the end of the path.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "share-invite-bank-inquiryID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "When you have connected your monetary account bank to a user, and given this user a (for example) daily budget of 10 EUR. If this users has used his entire budget or part of it, this call can be used to reset the amount he used to 0. The user can then spend the daily budget of 10 EUR again.",
                        "schema": {
                            "$ref": "#/definitions/ShareInviteBankAmountUsed"
                        }
                    }
                }
            }
        },
        "/tab/{tabUUID}/attachment/{itemId}": {
            "get": {
                "tags": [
                    "attachment"
                ],
                "summary": "",
                "description": "Get a specific attachment. The header of the response contains the content-type of the attachment.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tabUUID",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "This call is used to view an attachment that is linked to a tab.",
                        "schema": {
                            "$ref": "#/definitions/TabAttachmentTab"
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account/{monetary-accountID}/attachment": {
            "post": {
                "tags": [
                    "attachment"
                ],
                "summary": "",
                "description": "Create a new monetary account attachment. Create a POST request with a payload that contains the binary representation of the file, without any JSON wrapping. Make sure you define the MIME type (i.e. image/jpeg) in the Content-Type header. You are required to provide a description of the attachment using the X-Bunq-Attachment-Description header.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AttachmentMonetaryAccount"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "This call is used to upload an attachment that can be referenced to in payment requests and payments sent from a specific monetary account. Attachments supported are png, jpg and gif.",
                        "schema": {
                            "$ref": "#/definitions/AttachmentMonetaryAccount"
                        }
                    }
                }
            }
        },
        "/attachment-public/{itemId}": {
            "get": {
                "tags": [
                    "attachment-public"
                ],
                "summary": "",
                "description": "Get a specific attachment's metadata through its UUID. The Content-Type header of the response will describe the MIME type of the attachment file.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "This call is used to upload an attachment that can be referenced to as an avatar (through the Avatar endpoint) or in a tab sent. Attachments supported are png, jpg and gif.",
                        "schema": {
                            "$ref": "#/definitions/AttachmentPublic"
                        }
                    }
                }
            }
        },
        "/attachment-public": {
            "post": {
                "tags": [
                    "attachment-public"
                ],
                "summary": "",
                "description": "Create a new public attachment. Create a POST request with a payload that contains a binary representation of the file, without any JSON wrapping. Make sure you define the MIME type (i.e. image/jpeg, or image/png) in the Content-Type header. You are required to provide a description of the attachment using the X-Bunq-Attachment-Description header.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AttachmentPublic"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "This call is used to upload an attachment that can be referenced to as an avatar (through the Avatar endpoint) or in a tab sent. Attachments supported are png, jpg and gif.",
                        "schema": {
                            "$ref": "#/definitions/AttachmentPublic"
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account/{monetary-accountID}/attachment-tab/{itemId}": {
            "get": {
                "tags": [
                    "attachment-tab"
                ],
                "summary": "",
                "description": "Get a specific attachment. The header of the response contains the content-type of the attachment.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "This call is used to upload an attachment that will be accessible only through tabs. This can be used for example to upload special promotions or other attachments. Attachments supported are png, jpg and gif.",
                        "schema": {
                            "$ref": "#/definitions/AttachmentTab"
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account/{monetary-accountID}/attachment-tab": {
            "post": {
                "tags": [
                    "attachment-tab"
                ],
                "summary": "",
                "description": "Upload a new attachment to use with a tab, and to read its metadata. Create a POST request with a payload that contains the binary representation of the file, without any JSON wrapping. Make sure you define the MIME type (i.e. image/jpeg) in the Content-Type header. You are required to provide a description of the attachment using the X-Bunq-Attachment-Description header.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AttachmentTab"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "This call is used to upload an attachment that will be accessible only through tabs. This can be used for example to upload special promotions or other attachments. Attachments supported are png, jpg and gif.",
                        "schema": {
                            "$ref": "#/definitions/AttachmentTab"
                        }
                    }
                }
            }
        },
        "/avatar": {
            "post": {
                "tags": [
                    "avatar"
                ],
                "summary": "",
                "description": "Avatars are public images used to represent you or your company. Avatars are used to represent users, monetary accounts and cash registers. Avatars cannot be deleted, only replaced. Avatars can be updated after uploading the image you would like to use through AttachmentPublic. Using the attachment_public_uuid which is returned you can update your Avatar. Avatars used for cash registers and company accounts will be reviewed by bunq.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Avatar"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Avatars are public images used to represent you or your company. Avatars are used to represent users, monetary accounts and cash registers. Avatars cannot be deleted, only replaced. Avatars can be updated after uploading the image you would like to use through AttachmentPublic. Using the attachment_public_uuid which is returned you can update your Avatar. Avatars used for cash registers and company accounts will be reviewed by bunq.",
                        "schema": {
                            "$ref": "#/definitions/Avatar"
                        }
                    }
                }
            }
        },
        "/avatar/{itemId}": {
            "get": {
                "tags": [
                    "avatar"
                ],
                "summary": "",
                "description": "Avatars are public images used to represent you or your company. Avatars are used to represent users, monetary accounts and cash registers. Avatars cannot be deleted, only replaced. Avatars can be updated after uploading the image you would like to use through AttachmentPublic. Using the attachment_public_uuid which is returned you can update your Avatar. Avatars used for cash registers and company accounts will be reviewed by bunq.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Avatars are public images used to represent you or your company. Avatars are used to represent users, monetary accounts and cash registers. Avatars cannot be deleted, only replaced. Avatars can be updated after uploading the image you would like to use through AttachmentPublic. Using the attachment_public_uuid which is returned you can update your Avatar. Avatars used for cash registers and company accounts will be reviewed by bunq.",
                        "schema": {
                            "$ref": "#/definitions/Avatar"
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account/{monetary-accountID}/bunqme-tab/{itemId}": {
            "put": {
                "tags": [
                    "bunqme-tab"
                ],
                "summary": "",
                "description": "bunq.me tabs allows you to create a payment request and share the link through e-mail, chat, etc. Multiple persons are able to respond to the payment request and pay through bunq, iDeal or SOFORT.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BunqMeTab"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "bunq.me tabs allows you to create a payment request and share the link through e-mail, chat, etc. Multiple persons are able to respond to the payment request and pay through bunq, iDeal or SOFORT.",
                        "schema": {
                            "$ref": "#/definitions/BunqMeTab"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "bunqme-tab"
                ],
                "summary": "",
                "description": "bunq.me tabs allows you to create a payment request and share the link through e-mail, chat, etc. Multiple persons are able to respond to the payment request and pay through bunq, iDeal or SOFORT.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "bunq.me tabs allows you to create a payment request and share the link through e-mail, chat, etc. Multiple persons are able to respond to the payment request and pay through bunq, iDeal or SOFORT.",
                        "schema": {
                            "$ref": "#/definitions/BunqMeTab"
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account/{monetary-accountID}/bunqme-tab": {
            "post": {
                "tags": [
                    "bunqme-tab"
                ],
                "summary": "",
                "description": "bunq.me tabs allows you to create a payment request and share the link through e-mail, chat, etc. Multiple persons are able to respond to the payment request and pay through bunq, iDeal or SOFORT.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BunqMeTab"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "bunq.me tabs allows you to create a payment request and share the link through e-mail, chat, etc. Multiple persons are able to respond to the payment request and pay through bunq, iDeal or SOFORT.",
                        "schema": {
                            "$ref": "#/definitions/BunqMeTab"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "bunqme-tab"
                ],
                "summary": "",
                "description": "bunq.me tabs allows you to create a payment request and share the link through e-mail, chat, etc. Multiple persons are able to respond to the payment request and pay through bunq, iDeal or SOFORT.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "bunq.me tabs allows you to create a payment request and share the link through e-mail, chat, etc. Multiple persons are able to respond to the payment request and pay through bunq, iDeal or SOFORT.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BunqMeTab"
                            }
                        }
                    }
                }
            }
        },
        "/user/{userID}/card/{itemId}": {
            "put": {
                "tags": [
                    "card"
                ],
                "summary": "",
                "description": "Update the card details. Allow to change pin code, status, limits, country permissions and the monetary account connected to the card. When the card has been received, it can be also activated through this endpoint.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Card"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Endpoint for retrieving details for the cards the user has access to.",
                        "schema": {
                            "$ref": "#/definitions/Card"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "card"
                ],
                "summary": "",
                "description": "Return the details of a specific card.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Endpoint for retrieving details for the cards the user has access to.",
                        "schema": {
                            "$ref": "#/definitions/Card"
                        }
                    }
                }
            }
        },
        "/user/{userID}/card": {
            "get": {
                "tags": [
                    "card"
                ],
                "summary": "",
                "description": "Return all the cards available to the user.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Endpoint for retrieving details for the cards the user has access to.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Card"
                            }
                        }
                    }
                }
            }
        },
        "/user/{userID}/card-debit": {
            "post": {
                "tags": [
                    "card-debit"
                ],
                "summary": "",
                "description": "Create a new debit card request.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CardDebit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "With bunq it is possible to order debit cards that can then be connected with each one of the monetary accounts the user has access to (including connected accounts).",
                        "schema": {
                            "$ref": "#/definitions/CardDebit"
                        }
                    }
                }
            }
        },
        "/user/{userID}/card-name": {
            "get": {
                "tags": [
                    "card-name"
                ],
                "summary": "",
                "description": "Return all the accepted card names for a specific user.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Endpoint for getting all the accepted card names for a user. As bunq do not allow total freedom in choosing the name that is going to be printed on the card, the following formats are accepted: Name Surname, N. Surname, N Surname or Surname.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CardName"
                            }
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account/{monetary-accountID}/cash-register": {
            "post": {
                "tags": [
                    "cash-register"
                ],
                "summary": "",
                "description": "Create a new CashRegister. Only an UserCompany can create a CashRegisters. They need to be created with status PENDING_APPROVAL, an bunq admin has to approve your CashRegister before you can use it. In the sandbox testing environment an CashRegister will be automatically approved immediately after creation.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CashRegister"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CashRegisters are virtual points of sale. They have a specific name and avatar, and optionally, a location.<br/>With a CashRegister you can create a Tab and then use a QR code to receive payments.<br/>Check out our Quickstart example to learn how you can easily <a href=\"/api/1/page/usecase-tab-payment\">create Tab payments</a>.<br/><br/>Notification filters can be set on a CashRegister to receive callbacks. For more information check the <a href=\"/api/1/page/callbacks\">dedicated callbacks page</a>.",
                        "schema": {
                            "$ref": "#/definitions/CashRegister"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "cash-register"
                ],
                "summary": "",
                "description": "Get a collection of CashRegister for a given user and monetary account.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CashRegisters are virtual points of sale. They have a specific name and avatar, and optionally, a location.<br/>With a CashRegister you can create a Tab and then use a QR code to receive payments.<br/>Check out our Quickstart example to learn how you can easily <a href=\"/api/1/page/usecase-tab-payment\">create Tab payments</a>.<br/><br/>Notification filters can be set on a CashRegister to receive callbacks. For more information check the <a href=\"/api/1/page/callbacks\">dedicated callbacks page</a>.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CashRegister"
                            }
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account/{monetary-accountID}/cash-register/{itemId}": {
            "get": {
                "tags": [
                    "cash-register"
                ],
                "summary": "",
                "description": "Get a specific CashRegister.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CashRegisters are virtual points of sale. They have a specific name and avatar, and optionally, a location.<br/>With a CashRegister you can create a Tab and then use a QR code to receive payments.<br/>Check out our Quickstart example to learn how you can easily <a href=\"/api/1/page/usecase-tab-payment\">create Tab payments</a>.<br/><br/>Notification filters can be set on a CashRegister to receive callbacks. For more information check the <a href=\"/api/1/page/callbacks\">dedicated callbacks page</a>.",
                        "schema": {
                            "$ref": "#/definitions/CashRegister"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "cash-register"
                ],
                "summary": "",
                "description": "Modify or close an existing CashRegister. You must set the status back to PENDING_APPROVAL if you modify the name, avatar or location of a CashRegister. To close a cash register put its status to CLOSED.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CashRegister"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CashRegisters are virtual points of sale. They have a specific name and avatar, and optionally, a location.<br/>With a CashRegister you can create a Tab and then use a QR code to receive payments.<br/>Check out our Quickstart example to learn how you can easily <a href=\"/api/1/page/usecase-tab-payment\">create Tab payments</a>.<br/><br/>Notification filters can be set on a CashRegister to receive callbacks. For more information check the <a href=\"/api/1/page/callbacks\">dedicated callbacks page</a>.",
                        "schema": {
                            "$ref": "#/definitions/CashRegister"
                        }
                    }
                }
            }
        },
        "/user/{userID}/certificate-pinned/{itemId}": {
            "delete": {
                "tags": [
                    "certificate-pinned"
                ],
                "summary": "",
                "description": "Remove the pinned certificate chain with the specific ID.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "This endpoint allow you to pin the certificate chains to your account. These certificate chains are used for SSL validation whenever a callback is initiated to one of your https callback urls.",
                        "schema": {
                            "$ref": "#/definitions/CertificatePinned"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "certificate-pinned"
                ],
                "summary": "",
                "description": "Get the pinned certificate chain with the specified ID.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "This endpoint allow you to pin the certificate chains to your account. These certificate chains are used for SSL validation whenever a callback is initiated to one of your https callback urls.",
                        "schema": {
                            "$ref": "#/definitions/CertificatePinned"
                        }
                    }
                }
            }
        },
        "/user/{userID}/certificate-pinned": {
            "post": {
                "tags": [
                    "certificate-pinned"
                ],
                "summary": "",
                "description": "Pin the certificate chain.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CertificatePinned"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "This endpoint allow you to pin the certificate chains to your account. These certificate chains are used for SSL validation whenever a callback is initiated to one of your https callback urls.",
                        "schema": {
                            "$ref": "#/definitions/CertificatePinned"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "certificate-pinned"
                ],
                "summary": "",
                "description": "List all the pinned certificate chain for the given user.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "This endpoint allow you to pin the certificate chains to your account. These certificate chains are used for SSL validation whenever a callback is initiated to one of your https callback urls.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CertificatePinned"
                            }
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account/{monetary-accountID}/payment/{paymentID}/chat/{itemId}": {
            "put": {
                "tags": [
                    "chat"
                ],
                "summary": "",
                "description": "Update the last read message in the chat of a specific payment.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "paymentID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PaymentChat"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Manage the chat connected to a payment.",
                        "schema": {
                            "$ref": "#/definitions/PaymentChat"
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account/{monetary-accountID}/request-inquiry/{request-inquiryID}/chat/{itemId}": {
            "put": {
                "tags": [
                    "chat"
                ],
                "summary": "",
                "description": "Update the last read message in the chat of a specific request inquiry.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "request-inquiryID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RequestInquiryChat"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Manage the chat connected to a request inquiry. In the same way a request inquiry and a request response are created together, so that each side of the interaction can work on a different object, also a request inquiry chat and a request response chat are created at the same time. See 'request-response-chat' for the chat endpoint for the responding user.",
                        "schema": {
                            "$ref": "#/definitions/RequestInquiryChat"
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account/{monetary-accountID}/request-response/{request-responseID}/chat": {
            "post": {
                "tags": [
                    "chat"
                ],
                "summary": "",
                "description": "Create a chat for a specific request response.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "request-responseID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RequestResponseChat"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Manage the chat connected to a request response. In the same way a request inquiry and a request response are created together, so that each side of the interaction can work on a different object, also a request inquiry chat and a request response chat are created at the same time. See 'request-inquiry-chat' for the chat endpoint for the inquiring user.",
                        "schema": {
                            "$ref": "#/definitions/RequestResponseChat"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "chat"
                ],
                "summary": "",
                "description": "Get the chat for a specific request response.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "request-responseID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Manage the chat connected to a request response. In the same way a request inquiry and a request response are created together, so that each side of the interaction can work on a different object, also a request inquiry chat and a request response chat are created at the same time. See 'request-inquiry-chat' for the chat endpoint for the inquiring user.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RequestResponseChat"
                            }
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account/{monetary-accountID}/payment/{paymentID}/chat": {
            "post": {
                "tags": [
                    "chat"
                ],
                "summary": "",
                "description": "Create a chat for a specific payment.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "paymentID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PaymentChat"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Manage the chat connected to a payment.",
                        "schema": {
                            "$ref": "#/definitions/PaymentChat"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "chat"
                ],
                "summary": "",
                "description": "Get the chat for a specific payment.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "paymentID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Manage the chat connected to a payment.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PaymentChat"
                            }
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account/{monetary-accountID}/request-response/{request-responseID}/chat/{itemId}": {
            "put": {
                "tags": [
                    "chat"
                ],
                "summary": "",
                "description": "Update the last read message in the chat of a specific request response.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "request-responseID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RequestResponseChat"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Manage the chat connected to a request response. In the same way a request inquiry and a request response are created together, so that each side of the interaction can work on a different object, also a request inquiry chat and a request response chat are created at the same time. See 'request-inquiry-chat' for the chat endpoint for the inquiring user.",
                        "schema": {
                            "$ref": "#/definitions/RequestResponseChat"
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account/{monetary-accountID}/request-inquiry/{request-inquiryID}/chat": {
            "post": {
                "tags": [
                    "chat"
                ],
                "summary": "",
                "description": "Create a chat for a specific request inquiry.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "request-inquiryID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RequestInquiryChat"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Manage the chat connected to a request inquiry. In the same way a request inquiry and a request response are created together, so that each side of the interaction can work on a different object, also a request inquiry chat and a request response chat are created at the same time. See 'request-response-chat' for the chat endpoint for the responding user.",
                        "schema": {
                            "$ref": "#/definitions/RequestInquiryChat"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "chat"
                ],
                "summary": "",
                "description": "Get the chat for a specific request inquiry.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "request-inquiryID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Manage the chat connected to a request inquiry. In the same way a request inquiry and a request response are created together, so that each side of the interaction can work on a different object, also a request inquiry chat and a request response chat are created at the same time. See 'request-response-chat' for the chat endpoint for the responding user.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RequestInquiryChat"
                            }
                        }
                    }
                }
            }
        },
        "/user/{userID}/chat-conversation/{itemId}": {
            "get": {
                "tags": [
                    "chat-conversation"
                ],
                "summary": "",
                "description": "Manages user's conversations.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Manages user's conversations.",
                        "schema": {
                            "$ref": "#/definitions/ChatConversation"
                        }
                    }
                }
            }
        },
        "/user/{userID}/chat-conversation": {
            "get": {
                "tags": [
                    "chat-conversation"
                ],
                "summary": "",
                "description": "Manages user's conversations.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Manages user's conversations.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ChatConversation"
                            }
                        }
                    }
                }
            }
        },
        "/user/{userID}/export-annual-overview/{export-annual-overviewID}/content": {
            "get": {
                "tags": [
                    "content"
                ],
                "summary": "",
                "description": "Used to retrieve the raw content of an annual overview.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "export-annual-overviewID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetch the raw content of an annual overview. The annual overview is always in PDF format. Doc won't display the response of a request to get the content of an annual overview.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ExportAnnualOverviewContent"
                            }
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account/{monetary-accountID}/attachment-tab/{attachment-tabID}/content": {
            "get": {
                "tags": [
                    "content"
                ],
                "summary": "",
                "description": "Get the raw content of a specific attachment.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "attachment-tabID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetch the raw content of a tab attachment with given ID. The raw content is the binary representation of a file, without any JSON wrapping.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AttachmentTabContent"
                            }
                        }
                    }
                }
            }
        },
        "/tab/{tabUUID}/attachment/{attachmentID}/content": {
            "get": {
                "tags": [
                    "content"
                ],
                "summary": "",
                "description": "Get the raw content of a specific attachment.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tabUUID",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "attachmentID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetch the raw content of a tab attachment with given ID. The raw content is the binary representation of a file, without any JSON wrapping.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TabAttachmentTabContent"
                            }
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account/{monetary-accountID}/cash-register/{cash-registerID}/qr-code/{qr-codeID}/content": {
            "get": {
                "tags": [
                    "content"
                ],
                "summary": "",
                "description": "Show the raw contents of a QR code",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "cash-registerID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "qr-codeID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show the raw contents of a QR code. First you need to created a QR code using ../cash-register/{id}/qr-code.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CashRegisterQrCodeContent"
                            }
                        }
                    }
                }
            }
        },
        "/user/{userID}/chat-conversation/{chat-conversationID}/attachment/{attachmentID}/content": {
            "get": {
                "tags": [
                    "content"
                ],
                "summary": "",
                "description": "Get the raw content of a specific attachment.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "chat-conversationID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "attachmentID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetch the raw content of an attachment with given ID. The raw content is the base64 of a file, without any JSON wrapping.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AttachmentConversationContent"
                            }
                        }
                    }
                }
            }
        },
        "/attachment-public/{attachment-publicUUID}/content": {
            "get": {
                "tags": [
                    "content"
                ],
                "summary": "",
                "description": "Get the raw content of a specific attachment.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "attachment-publicUUID",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetch the raw content of a public attachment with given ID. The raw content is the binary representation of a file, without any JSON wrapping.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AttachmentPublicContent"
                            }
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account/{monetary-accountID}/customer-statement/{customer-statementID}/content": {
            "get": {
                "tags": [
                    "content"
                ],
                "summary": "",
                "description": "Fetch the raw content of a statement export. The returned file format could be MT940, CSV or PDF depending on the statement format specified during the statement creation. The doc won't display the response of a request to get the content of a statement export.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "customer-statementID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetch the raw content of a statement export. The returned file format could be MT940, CSV or PDF depending on the statement format specified during the statement creation. The doc won't display the response of a request to get the content of a statement export.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CustomerStatementExportContent"
                            }
                        }
                    }
                }
            }
        },
        "/user/{userID}/credential-password-ip": {
            "get": {
                "tags": [
                    "credential-password-ip"
                ],
                "summary": "",
                "description": "Create a credential of a user for server authentication, or delete the credential of a user for server authentication.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a credential of a user for server authentication, or delete the credential of a user for server authentication.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserCredentialPasswordIp"
                            }
                        }
                    }
                }
            }
        },
        "/user/{userID}/credential-password-ip/{itemId}": {
            "get": {
                "tags": [
                    "credential-password-ip"
                ],
                "summary": "",
                "description": "Create a credential of a user for server authentication, or delete the credential of a user for server authentication.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a credential of a user for server authentication, or delete the credential of a user for server authentication.",
                        "schema": {
                            "$ref": "#/definitions/UserCredentialPasswordIp"
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account/{monetary-accountID}/customer-statement/{itemId}": {
            "get": {
                "tags": [
                    "customer-statement"
                ],
                "summary": "",
                "description": "Used to create new and read existing statement exports. Statement exports can be created in either CSV, MT940 or PDF file format.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Used to create new and read existing statement exports. Statement exports can be created in either CSV, MT940 or PDF file format.",
                        "schema": {
                            "$ref": "#/definitions/CustomerStatementExport"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "customer-statement"
                ],
                "summary": "",
                "description": "Used to create new and read existing statement exports. Statement exports can be created in either CSV, MT940 or PDF file format.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Used to create new and read existing statement exports. Statement exports can be created in either CSV, MT940 or PDF file format.",
                        "schema": {
                            "$ref": "#/definitions/CustomerStatementExport"
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account/{monetary-accountID}/customer-statement": {
            "post": {
                "tags": [
                    "customer-statement"
                ],
                "summary": "",
                "description": "Used to create new and read existing statement exports. Statement exports can be created in either CSV, MT940 or PDF file format.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CustomerStatementExport"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Used to create new and read existing statement exports. Statement exports can be created in either CSV, MT940 or PDF file format.",
                        "schema": {
                            "$ref": "#/definitions/CustomerStatementExport"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "customer-statement"
                ],
                "summary": "",
                "description": "Used to create new and read existing statement exports. Statement exports can be created in either CSV, MT940 or PDF file format.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Used to create new and read existing statement exports. Statement exports can be created in either CSV, MT940 or PDF file format.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CustomerStatementExport"
                            }
                        }
                    }
                }
            }
        },
        "/device/{itemId}": {
            "get": {
                "tags": [
                    "device"
                ],
                "summary": "",
                "description": "Get a single Device. A Device is either a DevicePhone or a DeviceServer.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Used to get a Device or a listing of Devices. Creating a DeviceServer should happen via /device-server",
                        "schema": {
                            "$ref": "#/definitions/Device"
                        }
                    }
                }
            }
        },
        "/device": {
            "get": {
                "tags": [
                    "device"
                ],
                "summary": "",
                "description": "Get a collection of Devices. A Device is either a DevicePhone or a DeviceServer.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Used to get a Device or a listing of Devices. Creating a DeviceServer should happen via /device-server",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Device"
                            }
                        }
                    }
                }
            }
        },
        "/device-server": {
            "post": {
                "tags": [
                    "device-server"
                ],
                "summary": "",
                "description": "Create a new DeviceServer providing the installation token in the header and signing the request with the private part of the key you used to create the installation. The API Key that you are using will be bound to the IP address of the DeviceServer which you have created.<br/><br/>Using a Wildcard API Key gives you the freedom to make API calls even if the IP address has changed after the POST device-server.<br/><br/>Find out more at this link <a href=\"https:/bunq.com/en/apikey-dynamic-ip\" target=\"_blank\">https:/bunq.com/en/apikey-dynamic-ip</a>.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DeviceServer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "After having created an Installation you can now create a DeviceServer. A DeviceServer is needed to do a login call with session-server.",
                        "schema": {
                            "$ref": "#/definitions/DeviceServer"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "device-server"
                ],
                "summary": "",
                "description": "Get a collection of all the DeviceServers you have created.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "After having created an Installation you can now create a DeviceServer. A DeviceServer is needed to do a login call with session-server.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DeviceServer"
                            }
                        }
                    }
                }
            }
        },
        "/device-server/{itemId}": {
            "get": {
                "tags": [
                    "device-server"
                ],
                "summary": "",
                "description": "Get one of your DeviceServers.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "After having created an Installation you can now create a DeviceServer. A DeviceServer is needed to do a login call with session-server.",
                        "schema": {
                            "$ref": "#/definitions/DeviceServer"
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account/{monetary-accountID}/draft-payment": {
            "post": {
                "tags": [
                    "draft-payment"
                ],
                "summary": "",
                "description": "Create a new DraftPayment.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DraftPayment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A DraftPayment is like a regular Payment, but it needs to be accepted by the sending party before the actual Payment is done.",
                        "schema": {
                            "$ref": "#/definitions/DraftPayment"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "draft-payment"
                ],
                "summary": "",
                "description": "Get a listing of all DraftPayments from a given MonetaryAccount.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A DraftPayment is like a regular Payment, but it needs to be accepted by the sending party before the actual Payment is done.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DraftPayment"
                            }
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account/{monetary-accountID}/draft-payment/{itemId}": {
            "put": {
                "tags": [
                    "draft-payment"
                ],
                "summary": "",
                "description": "Update a DraftPayment.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DraftPayment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A DraftPayment is like a regular Payment, but it needs to be accepted by the sending party before the actual Payment is done.",
                        "schema": {
                            "$ref": "#/definitions/DraftPayment"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "draft-payment"
                ],
                "summary": "",
                "description": "Get a specific DraftPayment.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A DraftPayment is like a regular Payment, but it needs to be accepted by the sending party before the actual Payment is done.",
                        "schema": {
                            "$ref": "#/definitions/DraftPayment"
                        }
                    }
                }
            }
        },
        "/user/{userID}/draft-share-invite-api-key": {
            "post": {
                "tags": [
                    "draft-share-invite-api-key"
                ],
                "summary": "",
                "description": "Used to create a draft share invite for a user with another bunq user. The user that accepts the invite can share his MAs with the user that created the invite.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DraftShareInviteApiKey"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Used to create a draft share invite for a user with another bunq user. The user that accepts the invite can share his MAs with the user that created the invite.",
                        "schema": {
                            "$ref": "#/definitions/DraftShareInviteApiKey"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "draft-share-invite-api-key"
                ],
                "summary": "",
                "description": "Used to create a draft share invite for a user with another bunq user. The user that accepts the invite can share his MAs with the user that created the invite.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Used to create a draft share invite for a user with another bunq user. The user that accepts the invite can share his MAs with the user that created the invite.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DraftShareInviteApiKey"
                            }
                        }
                    }
                }
            }
        },
        "/user/{userID}/draft-share-invite-api-key/{itemId}": {
            "get": {
                "tags": [
                    "draft-share-invite-api-key"
                ],
                "summary": "",
                "description": "Get the details of a specific draft of a share invite.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Used to create a draft share invite for a user with another bunq user. The user that accepts the invite can share his MAs with the user that created the invite.",
                        "schema": {
                            "$ref": "#/definitions/DraftShareInviteApiKey"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "draft-share-invite-api-key"
                ],
                "summary": "",
                "description": "Update a draft share invite. When sending status CANCELLED it is possible to cancel the draft share invite.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DraftShareInviteApiKey"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Used to create a draft share invite for a user with another bunq user. The user that accepts the invite can share his MAs with the user that created the invite.",
                        "schema": {
                            "$ref": "#/definitions/DraftShareInviteApiKey"
                        }
                    }
                }
            }
        },
        "/user/{userID}/draft-share-invite-bank": {
            "post": {
                "tags": [
                    "draft-share-invite-bank"
                ],
                "summary": "",
                "description": "Used to create a draft share invite for a monetary account with another bunq user, as in the 'Connect' feature in the bunq app. The user that accepts the invite can share one of their MonetaryAccounts with the user that created the invite.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DraftShareInviteBank"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Used to create a draft share invite for a monetary account with another bunq user, as in the 'Connect' feature in the bunq app. The user that accepts the invite can share one of their MonetaryAccounts with the user that created the invite.",
                        "schema": {
                            "$ref": "#/definitions/DraftShareInviteBank"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "draft-share-invite-bank"
                ],
                "summary": "",
                "description": "Used to create a draft share invite for a monetary account with another bunq user, as in the 'Connect' feature in the bunq app. The user that accepts the invite can share one of their MonetaryAccounts with the user that created the invite.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Used to create a draft share invite for a monetary account with another bunq user, as in the 'Connect' feature in the bunq app. The user that accepts the invite can share one of their MonetaryAccounts with the user that created the invite.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DraftShareInviteBank"
                            }
                        }
                    }
                }
            }
        },
        "/user/{userID}/draft-share-invite-bank/{itemId}": {
            "get": {
                "tags": [
                    "draft-share-invite-bank"
                ],
                "summary": "",
                "description": "Get the details of a specific draft of a share invite.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Used to create a draft share invite for a monetary account with another bunq user, as in the 'Connect' feature in the bunq app. The user that accepts the invite can share one of their MonetaryAccounts with the user that created the invite.",
                        "schema": {
                            "$ref": "#/definitions/DraftShareInviteBank"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "draft-share-invite-bank"
                ],
                "summary": "",
                "description": "Update a draft share invite. When sending status CANCELLED it is possible to cancel the draft share invite.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DraftShareInviteBank"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Used to create a draft share invite for a monetary account with another bunq user, as in the 'Connect' feature in the bunq app. The user that accepts the invite can share one of their MonetaryAccounts with the user that created the invite.",
                        "schema": {
                            "$ref": "#/definitions/DraftShareInviteBank"
                        }
                    }
                }
            }
        },
        "/user/{userID}/export-annual-overview": {
            "post": {
                "tags": [
                    "export-annual-overview"
                ],
                "summary": "",
                "description": "Create a new annual overview for a specific year. An overview can be generated only for a past year.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ExportAnnualOverview"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Used to create new and read existing annual overviews of all the user's monetary accounts. Once created, annual overviews can be downloaded in PDF format via the 'export-annual-overview/{id}/content' endpoint.",
                        "schema": {
                            "$ref": "#/definitions/ExportAnnualOverview"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "export-annual-overview"
                ],
                "summary": "",
                "description": "List all the annual overviews for a user.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Used to create new and read existing annual overviews of all the user's monetary accounts. Once created, annual overviews can be downloaded in PDF format via the 'export-annual-overview/{id}/content' endpoint.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ExportAnnualOverview"
                            }
                        }
                    }
                }
            }
        },
        "/user/{userID}/export-annual-overview/{itemId}": {
            "get": {
                "tags": [
                    "export-annual-overview"
                ],
                "summary": "",
                "description": "Get an annual overview for a user by its id.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Used to create new and read existing annual overviews of all the user's monetary accounts. Once created, annual overviews can be downloaded in PDF format via the 'export-annual-overview/{id}/content' endpoint.",
                        "schema": {
                            "$ref": "#/definitions/ExportAnnualOverview"
                        }
                    }
                }
            }
        },
        "/user/{userID}/card/{cardID}/generated-cvc2": {
            "post": {
                "tags": [
                    "generated-cvc2"
                ],
                "summary": "",
                "description": "Generate a new CVC2 code for a card.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "cardID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CardGeneratedCvc2"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Endpoint for generating and retrieving a new CVC2 code.",
                        "schema": {
                            "$ref": "#/definitions/CardGeneratedCvc2"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "generated-cvc2"
                ],
                "summary": "",
                "description": "Get all generated CVC2 codes for a card.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "cardID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Endpoint for generating and retrieving a new CVC2 code.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CardGeneratedCvc2"
                            }
                        }
                    }
                }
            }
        },
        "/user/{userID}/card/{cardID}/generated-cvc2/{itemId}": {
            "get": {
                "tags": [
                    "generated-cvc2"
                ],
                "summary": "",
                "description": "Get the details for a specific generated CVC2 code.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "cardID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Endpoint for generating and retrieving a new CVC2 code.",
                        "schema": {
                            "$ref": "#/definitions/CardGeneratedCvc2"
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account/{monetary-accountID}/invoice/{itemId}": {
            "get": {
                "tags": [
                    "invoice"
                ],
                "summary": "",
                "description": "Used to view a bunq invoice.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Used to view a bunq invoice.",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account/{monetary-accountID}/invoice": {
            "get": {
                "tags": [
                    "invoice"
                ],
                "summary": "",
                "description": "Used to view a bunq invoice.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Used to view a bunq invoice.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Invoice"
                            }
                        }
                    }
                }
            }
        },
        "/user/{userID}/invoice": {
            "get": {
                "tags": [
                    "invoice"
                ],
                "summary": "",
                "description": "Used to list bunq invoices by user.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Used to list bunq invoices by user.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InvoiceByUser"
                            }
                        }
                    }
                }
            }
        },
        "/user/{userID}/invoice/{itemId}": {
            "get": {
                "tags": [
                    "invoice"
                ],
                "summary": "",
                "description": "Used to list bunq invoices by user.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Used to list bunq invoices by user.",
                        "schema": {
                            "$ref": "#/definitions/InvoiceByUser"
                        }
                    }
                }
            }
        },
        "/user/{userID}/credential-password-ip/{credential-password-ipID}/ip/{itemId}": {
            "get": {
                "tags": [
                    "ip"
                ],
                "summary": "",
                "description": "Manage the IPs which may be used for a credential of a user for server authentication.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "credential-password-ipID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Manage the IPs which may be used for a credential of a user for server authentication.",
                        "schema": {
                            "$ref": "#/definitions/PermittedIp"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ip"
                ],
                "summary": "",
                "description": "Manage the IPs which may be used for a credential of a user for server authentication.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "credential-password-ipID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PermittedIp"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Manage the IPs which may be used for a credential of a user for server authentication.",
                        "schema": {
                            "$ref": "#/definitions/PermittedIp"
                        }
                    }
                }
            }
        },
        "/user/{userID}/credential-password-ip/{credential-password-ipID}/ip": {
            "post": {
                "tags": [
                    "ip"
                ],
                "summary": "",
                "description": "Manage the IPs which may be used for a credential of a user for server authentication.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "credential-password-ipID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PermittedIp"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Manage the IPs which may be used for a credential of a user for server authentication.",
                        "schema": {
                            "$ref": "#/definitions/PermittedIp"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "ip"
                ],
                "summary": "",
                "description": "Manage the IPs which may be used for a credential of a user for server authentication.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "credential-password-ipID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Manage the IPs which may be used for a credential of a user for server authentication.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PermittedIp"
                            }
                        }
                    }
                }
            }
        },
        "/user/{userID}/chat-conversation/{chat-conversationID}/message": {
            "get": {
                "tags": [
                    "message"
                ],
                "summary": "",
                "description": "Get all the messages that are part of a specific conversation.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "chat-conversationID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Endpoint for retrieving the messages that are part of a conversation.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ChatMessage"
                            }
                        }
                    }
                }
            }
        },
        "/user/{userID}/chat-conversation/{chat-conversationID}/message-attachment": {
            "post": {
                "tags": [
                    "message-attachment"
                ],
                "summary": "",
                "description": "Create a new message holding a file attachment to a specific conversation.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "chat-conversationID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChatMessageAttachment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create new messages holding file attachments.",
                        "schema": {
                            "$ref": "#/definitions/ChatMessageAttachment"
                        }
                    }
                }
            }
        },
        "/user/{userID}/chat-conversation/{chat-conversationID}/message-text": {
            "post": {
                "tags": [
                    "message-text"
                ],
                "summary": "",
                "description": "Add a new text message to a specific conversation.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "chat-conversationID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChatMessageText"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Endpoint for the type of chat message that carries text.",
                        "schema": {
                            "$ref": "#/definitions/ChatMessageText"
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account/{itemId}": {
            "get": {
                "tags": [
                    "monetary-account"
                ],
                "summary": "",
                "description": "Get a specific MonetaryAccount.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Used to show the MonetaryAccounts that you can access. Currently the only MonetaryAccount type is MonetaryAccountBank. See also: monetary-account-bank.<br/><br/>Notification filters can be set on a monetary account level to receive callbacks. For more information check the <a href=\"/api/2/page/callbacks\">dedicated callbacks page</a>.",
                        "schema": {
                            "$ref": "#/definitions/MonetaryAccount"
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account": {
            "get": {
                "tags": [
                    "monetary-account"
                ],
                "summary": "",
                "description": "Get a collection of all your MonetaryAccounts.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Used to show the MonetaryAccounts that you can access. Currently the only MonetaryAccount type is MonetaryAccountBank. See also: monetary-account-bank.<br/><br/>Notification filters can be set on a monetary account level to receive callbacks. For more information check the <a href=\"/api/2/page/callbacks\">dedicated callbacks page</a>.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MonetaryAccount"
                            }
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account-bank/{itemId}": {
            "get": {
                "tags": [
                    "monetary-account-bank"
                ],
                "summary": "",
                "description": "Get a specific MonetaryAccountBank.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "With MonetaryAccountBank you can create a new bank account, retrieve information regarding your existing MonetaryAccountBanks and update specific fields of an existing MonetaryAccountBank. Examples of fields that can be updated are the description, the daily limit and the avatar of the account.<br/><br/>Notification filters can be set on a monetary account level to receive callbacks. For more information check the <a href=\"/api/1/page/callbacks\">dedicated callbacks page</a>.",
                        "schema": {
                            "$ref": "#/definitions/MonetaryAccountBank"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "monetary-account-bank"
                ],
                "summary": "",
                "description": "Update a specific existing MonetaryAccountBank.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MonetaryAccountBank"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "With MonetaryAccountBank you can create a new bank account, retrieve information regarding your existing MonetaryAccountBanks and update specific fields of an existing MonetaryAccountBank. Examples of fields that can be updated are the description, the daily limit and the avatar of the account.<br/><br/>Notification filters can be set on a monetary account level to receive callbacks. For more information check the <a href=\"/api/1/page/callbacks\">dedicated callbacks page</a>.",
                        "schema": {
                            "$ref": "#/definitions/MonetaryAccountBank"
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account-bank": {
            "post": {
                "tags": [
                    "monetary-account-bank"
                ],
                "summary": "",
                "description": "Create new MonetaryAccountBank.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MonetaryAccountBank"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "With MonetaryAccountBank you can create a new bank account, retrieve information regarding your existing MonetaryAccountBanks and update specific fields of an existing MonetaryAccountBank. Examples of fields that can be updated are the description, the daily limit and the avatar of the account.<br/><br/>Notification filters can be set on a monetary account level to receive callbacks. For more information check the <a href=\"/api/1/page/callbacks\">dedicated callbacks page</a>.",
                        "schema": {
                            "$ref": "#/definitions/MonetaryAccountBank"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "monetary-account-bank"
                ],
                "summary": "",
                "description": "Gets a listing of all MonetaryAccountBanks of a given user.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "With MonetaryAccountBank you can create a new bank account, retrieve information regarding your existing MonetaryAccountBanks and update specific fields of an existing MonetaryAccountBank. Examples of fields that can be updated are the description, the daily limit and the avatar of the account.<br/><br/>Notification filters can be set on a monetary account level to receive callbacks. For more information check the <a href=\"/api/1/page/callbacks\">dedicated callbacks page</a>.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MonetaryAccountBank"
                            }
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account/{monetary-accountID}/payment": {
            "post": {
                "tags": [
                    "payment"
                ],
                "summary": "",
                "description": "Create a new Payment.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Payment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Using Payment, you can send payments to bunq and non-bunq users from your bunq MonetaryAccounts. This can be done using bunq Aliases or IBAN Aliases. When transferring money to other bunq MonetaryAccounts you can also refer to Attachments. These will be received by the counter-party as part of the Payment. You can also retrieve a single Payment or all executed Payments of a specific monetary account.",
                        "schema": {
                            "$ref": "#/definitions/Payment"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "payment"
                ],
                "summary": "",
                "description": "Get a listing of all Payments performed on a given MonetaryAccount (incoming and outgoing).",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Using Payment, you can send payments to bunq and non-bunq users from your bunq MonetaryAccounts. This can be done using bunq Aliases or IBAN Aliases. When transferring money to other bunq MonetaryAccounts you can also refer to Attachments. These will be received by the counter-party as part of the Payment. You can also retrieve a single Payment or all executed Payments of a specific monetary account.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Payment"
                            }
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account/{monetary-accountID}/payment/{itemId}": {
            "get": {
                "tags": [
                    "payment"
                ],
                "summary": "",
                "description": "Get a specific previous Payment.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Using Payment, you can send payments to bunq and non-bunq users from your bunq MonetaryAccounts. This can be done using bunq Aliases or IBAN Aliases. When transferring money to other bunq MonetaryAccounts you can also refer to Attachments. These will be received by the counter-party as part of the Payment. You can also retrieve a single Payment or all executed Payments of a specific monetary account.",
                        "schema": {
                            "$ref": "#/definitions/Payment"
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account/{monetary-accountID}/payment-batch": {
            "post": {
                "tags": [
                    "payment-batch"
                ],
                "summary": "",
                "description": "Create a payment batch by sending an array of single payment objects, that will become part of the batch.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PaymentBatch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a payment batch, or show the payment batches of a monetary account.",
                        "schema": {
                            "$ref": "#/definitions/PaymentBatch"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "payment-batch"
                ],
                "summary": "",
                "description": "Return all the payment batches for a monetary account.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a payment batch, or show the payment batches of a monetary account.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PaymentBatch"
                            }
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account/{monetary-accountID}/payment-batch/{itemId}": {
            "put": {
                "tags": [
                    "payment-batch"
                ],
                "summary": "",
                "description": "Revoke a bunq.to payment batch. The status of all the payments will be set to REVOKED.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PaymentBatch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a payment batch, or show the payment batches of a monetary account.",
                        "schema": {
                            "$ref": "#/definitions/PaymentBatch"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "payment-batch"
                ],
                "summary": "",
                "description": "Return the details of a specific payment batch.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a payment batch, or show the payment batches of a monetary account.",
                        "schema": {
                            "$ref": "#/definitions/PaymentBatch"
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account/{monetary-accountID}/cash-register/{cash-registerID}/qr-code/{itemId}": {
            "put": {
                "tags": [
                    "qr-code"
                ],
                "summary": "",
                "description": "Modify a QR code in a given CashRegister. You can only have one ACTIVE CashRegister QR code at the time.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "cash-registerID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CashRegisterQrCode"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Once your CashRegister has been activated you can create a QR code for it. The visibility of a tab can be modified to be linked to this QR code. If a user of the bunq app scans this QR code, the linked tab will be shown on his device.",
                        "schema": {
                            "$ref": "#/definitions/CashRegisterQrCode"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "qr-code"
                ],
                "summary": "",
                "description": "Get the information of a specific QR code. To get the RAW content of the QR code use ../qr-code/{id}/content",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "cash-registerID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Once your CashRegister has been activated you can create a QR code for it. The visibility of a tab can be modified to be linked to this QR code. If a user of the bunq app scans this QR code, the linked tab will be shown on his device.",
                        "schema": {
                            "$ref": "#/definitions/CashRegisterQrCode"
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account/{monetary-accountID}/cash-register/{cash-registerID}/qr-code": {
            "post": {
                "tags": [
                    "qr-code"
                ],
                "summary": "",
                "description": "Create a new QR code for this CashRegister. You can only have one ACTIVE CashRegister QR code at the time.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "cash-registerID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CashRegisterQrCode"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Once your CashRegister has been activated you can create a QR code for it. The visibility of a tab can be modified to be linked to this QR code. If a user of the bunq app scans this QR code, the linked tab will be shown on his device.",
                        "schema": {
                            "$ref": "#/definitions/CashRegisterQrCode"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "qr-code"
                ],
                "summary": "",
                "description": "Get a collection of QR code information from a given CashRegister",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "cash-registerID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Once your CashRegister has been activated you can create a QR code for it. The visibility of a tab can be modified to be linked to this QR code. If a user of the bunq app scans this QR code, the linked tab will be shown on his device.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CashRegisterQrCode"
                            }
                        }
                    }
                }
            }
        },
        "/user/{userID}/draft-share-invite-bank/{draft-share-invite-bankID}/qr-code-content": {
            "get": {
                "tags": [
                    "qr-code-content"
                ],
                "summary": "",
                "description": "Returns the raw content of the QR code that links to this draft share invite. The raw content is the binary representation of a file, without any JSON wrapping.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "draft-share-invite-bankID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "This call returns the raw content of the QR code that links to this draft share invite. When a bunq user scans this QR code with the bunq app the draft share invite will be shown on his/her device.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DraftShareInviteBankQrCodeContent"
                            }
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account/{monetary-accountID}/cash-register/{cash-registerID}/tab/{tabUUID}/qr-code-content": {
            "get": {
                "tags": [
                    "qr-code-content"
                ],
                "summary": "",
                "description": "Returns the raw content of the QR code that links to this Tab. The raw content is the binary representation of a file, without any JSON wrapping.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "cash-registerID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "tabUUID",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "This call returns the raw content of the QR code that links to this Tab. When a bunq user scans this QR code with the bunq app the Tab will be shown on his/her device.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TabQrCodeContent"
                            }
                        }
                    }
                }
            }
        },
        "/user/{userID}/draft-share-invite-api-key/{draft-share-invite-api-keyID}/qr-code-content": {
            "get": {
                "tags": [
                    "qr-code-content"
                ],
                "summary": "",
                "description": "Returns the raw content of the QR code that links to this draft share invite. The raw content is the binary representation of a file, without any JSON wrapping.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "draft-share-invite-api-keyID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "This call returns the raw content of the QR code that links to this draft share invite. When a bunq user scans this QR code with the bunq app the draft share invite will be shown on his/her device.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DraftShareInviteApiKeyQrCodeContent"
                            }
                        }
                    }
                }
            }
        },
        "/user/{userID}/card/{cardID}/replace": {
            "post": {
                "tags": [
                    "replace"
                ],
                "summary": "",
                "description": "Request a card replacement.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "cardID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CardReplace"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "It is possible to order a card replacement with the bunq API.<br/><br/>You can order up to one free card replacement per year. Additional replacement requests will be billed.<br/><br/>The card replacement will have the same expiry date and the same pricing as the old card, but it will have a new card number. You can change the description and optional the PIN through the card replacement endpoint.",
                        "schema": {
                            "$ref": "#/definitions/CardReplace"
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account/{monetary-accountID}/request-inquiry": {
            "post": {
                "tags": [
                    "request-inquiry"
                ],
                "summary": "",
                "description": "Create a new payment request.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RequestInquiry"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "RequestInquiry, aka 'RFP' (Request for Payment), is one of the innovative features that bunq offers. To request payment from another bunq account a new Request Inquiry is created. As with payments you can add attachments to a RFP. Requests for Payment are the foundation for a number of consumer features like 'Split the bill' and 'Request forwarding'. We invite you to invent your own based on the bunq api!",
                        "schema": {
                            "$ref": "#/definitions/RequestInquiry"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "request-inquiry"
                ],
                "summary": "",
                "description": "Get all payment requests for a user's monetary account.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "RequestInquiry, aka 'RFP' (Request for Payment), is one of the innovative features that bunq offers. To request payment from another bunq account a new Request Inquiry is created. As with payments you can add attachments to a RFP. Requests for Payment are the foundation for a number of consumer features like 'Split the bill' and 'Request forwarding'. We invite you to invent your own based on the bunq api!",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RequestInquiry"
                            }
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account/{monetary-accountID}/request-inquiry/{itemId}": {
            "put": {
                "tags": [
                    "request-inquiry"
                ],
                "summary": "",
                "description": "Revoke a request for payment, by updating the status to REVOKED.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RequestInquiry"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "RequestInquiry, aka 'RFP' (Request for Payment), is one of the innovative features that bunq offers. To request payment from another bunq account a new Request Inquiry is created. As with payments you can add attachments to a RFP. Requests for Payment are the foundation for a number of consumer features like 'Split the bill' and 'Request forwarding'. We invite you to invent your own based on the bunq api!",
                        "schema": {
                            "$ref": "#/definitions/RequestInquiry"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "request-inquiry"
                ],
                "summary": "",
                "description": "Get the details of a specific payment request, including its status.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "RequestInquiry, aka 'RFP' (Request for Payment), is one of the innovative features that bunq offers. To request payment from another bunq account a new Request Inquiry is created. As with payments you can add attachments to a RFP. Requests for Payment are the foundation for a number of consumer features like 'Split the bill' and 'Request forwarding'. We invite you to invent your own based on the bunq api!",
                        "schema": {
                            "$ref": "#/definitions/RequestInquiry"
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account/{monetary-accountID}/request-inquiry-batch/{itemId}": {
            "put": {
                "tags": [
                    "request-inquiry-batch"
                ],
                "summary": "",
                "description": "Revoke a request batch. The status of all the requests will be set to REVOKED.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RequestInquiryBatch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a batch of requests for payment, or show the request batches of a monetary account.",
                        "schema": {
                            "$ref": "#/definitions/RequestInquiryBatch"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "request-inquiry-batch"
                ],
                "summary": "",
                "description": "Return the details of a specific request batch.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a batch of requests for payment, or show the request batches of a monetary account.",
                        "schema": {
                            "$ref": "#/definitions/RequestInquiryBatch"
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account/{monetary-accountID}/request-inquiry-batch": {
            "post": {
                "tags": [
                    "request-inquiry-batch"
                ],
                "summary": "",
                "description": "Create a request batch by sending an array of single request objects, that will become part of the batch.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RequestInquiryBatch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a batch of requests for payment, or show the request batches of a monetary account.",
                        "schema": {
                            "$ref": "#/definitions/RequestInquiryBatch"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "request-inquiry-batch"
                ],
                "summary": "",
                "description": "Return all the request batches for a monetary account.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a batch of requests for payment, or show the request batches of a monetary account.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RequestInquiryBatch"
                            }
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account/{monetary-accountID}/request-response/{itemId}": {
            "put": {
                "tags": [
                    "request-response"
                ],
                "summary": "",
                "description": "Update the status to accept or reject the RequestResponse.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RequestResponse"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A RequestResponse is what a user on the other side of a RequestInquiry gets when he is sent one. So a RequestInquiry is the initiator and visible for the user that sent it and that wants to receive the money. A RequestResponse is what the other side sees, i.e. the user that pays the money to accept the request. The content is almost identical.",
                        "schema": {
                            "$ref": "#/definitions/RequestResponse"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "request-response"
                ],
                "summary": "",
                "description": "Get the details for a specific existing RequestResponse.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A RequestResponse is what a user on the other side of a RequestInquiry gets when he is sent one. So a RequestInquiry is the initiator and visible for the user that sent it and that wants to receive the money. A RequestResponse is what the other side sees, i.e. the user that pays the money to accept the request. The content is almost identical.",
                        "schema": {
                            "$ref": "#/definitions/RequestResponse"
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account/{monetary-accountID}/request-response": {
            "get": {
                "tags": [
                    "request-response"
                ],
                "summary": "",
                "description": "Get all RequestResponses for a MonetaryAccount.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A RequestResponse is what a user on the other side of a RequestInquiry gets when he is sent one. So a RequestInquiry is the initiator and visible for the user that sent it and that wants to receive the money. A RequestResponse is what the other side sees, i.e. the user that pays the money to accept the request. The content is almost identical.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RequestResponse"
                            }
                        }
                    }
                }
            }
        },
        "/sandbox-user": {
            "post": {
                "tags": [
                    "sandbox-user"
                ],
                "summary": "",
                "description": "Used to create a sandbox user.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SandboxUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Used to create a sandbox user.",
                        "schema": {
                            "$ref": "#/definitions/SandboxUser"
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account/{monetary-accountID}/schedule/{itemId}": {
            "get": {
                "tags": [
                    "schedule"
                ],
                "summary": "",
                "description": "Get a specific schedule definition for a given monetary account.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "view for reading the scheduled definitions.",
                        "schema": {
                            "$ref": "#/definitions/Schedule"
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account/{monetary-accountID}/schedule": {
            "get": {
                "tags": [
                    "schedule"
                ],
                "summary": "",
                "description": "Get a collection of scheduled definition for a given monetary account. You can add the parameter type to filter the response. When type={SCHEDULE_DEFINITION_PAYMENT,SCHEDULE_DEFINITION_PAYMENT_BATCH} is provided only schedule definition object that relate to these definitions are returned.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "view for reading the scheduled definitions.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Schedule"
                            }
                        }
                    }
                }
            }
        },
        "/user/{userID}/schedule": {
            "get": {
                "tags": [
                    "schedule"
                ],
                "summary": "",
                "description": "Get a collection of scheduled definition for all accessible monetary accounts of the user. You can add the parameter type to filter the response. When type={SCHEDULE_DEFINITION_PAYMENT,SCHEDULE_DEFINITION_PAYMENT_BATCH} is provided only schedule definition object that relate to these definitions are returned.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "view for reading the scheduled definitions.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ScheduleUser"
                            }
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account/{monetary-accountID}/schedule/{scheduleID}/schedule-instance/{itemId}": {
            "get": {
                "tags": [
                    "schedule-instance"
                ],
                "summary": "",
                "description": "view for reading, updating and listing the scheduled instance.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "scheduleID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "view for reading, updating and listing the scheduled instance.",
                        "schema": {
                            "$ref": "#/definitions/ScheduleInstance"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "schedule-instance"
                ],
                "summary": "",
                "description": "view for reading, updating and listing the scheduled instance.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "scheduleID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ScheduleInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "view for reading, updating and listing the scheduled instance.",
                        "schema": {
                            "$ref": "#/definitions/ScheduleInstance"
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account/{monetary-accountID}/schedule/{scheduleID}/schedule-instance": {
            "get": {
                "tags": [
                    "schedule-instance"
                ],
                "summary": "",
                "description": "view for reading, updating and listing the scheduled instance.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "scheduleID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "view for reading, updating and listing the scheduled instance.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ScheduleInstance"
                            }
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account/{monetary-accountID}/schedule-payment": {
            "post": {
                "tags": [
                    "schedule-payment"
                ],
                "summary": "",
                "description": "Endpoint for schedule payments.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SchedulePayment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Endpoint for schedule payments.",
                        "schema": {
                            "$ref": "#/definitions/SchedulePayment"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "schedule-payment"
                ],
                "summary": "",
                "description": "Endpoint for schedule payments.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Endpoint for schedule payments.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SchedulePayment"
                            }
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account/{monetary-accountID}/schedule-payment/{itemId}": {
            "delete": {
                "tags": [
                    "schedule-payment"
                ],
                "summary": "",
                "description": "Endpoint for schedule payments.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Endpoint for schedule payments.",
                        "schema": {
                            "$ref": "#/definitions/SchedulePayment"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "schedule-payment"
                ],
                "summary": "",
                "description": "Endpoint for schedule payments.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Endpoint for schedule payments.",
                        "schema": {
                            "$ref": "#/definitions/SchedulePayment"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "schedule-payment"
                ],
                "summary": "",
                "description": "Endpoint for schedule payments.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SchedulePayment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Endpoint for schedule payments.",
                        "schema": {
                            "$ref": "#/definitions/SchedulePayment"
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account/{monetary-accountID}/schedule-payment-batch": {
            "post": {
                "tags": [
                    "schedule-payment-batch"
                ],
                "summary": "",
                "description": "Endpoint for schedule payment batches.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SchedulePaymentBatch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Endpoint for schedule payment batches.",
                        "schema": {
                            "$ref": "#/definitions/SchedulePaymentBatch"
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account/{monetary-accountID}/schedule-payment-batch/{itemId}": {
            "put": {
                "tags": [
                    "schedule-payment-batch"
                ],
                "summary": "",
                "description": "Endpoint for schedule payment batches.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SchedulePaymentBatch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Endpoint for schedule payment batches.",
                        "schema": {
                            "$ref": "#/definitions/SchedulePaymentBatch"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "schedule-payment-batch"
                ],
                "summary": "",
                "description": "Endpoint for schedule payment batches.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Endpoint for schedule payment batches.",
                        "schema": {
                            "$ref": "#/definitions/SchedulePaymentBatch"
                        }
                    }
                }
            }
        },
        "/installation/{installationID}/server-public-key": {
            "get": {
                "tags": [
                    "server-public-key"
                ],
                "summary": "",
                "description": "Show the ServerPublicKey for this Installation.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "installationID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Using /installation/_/server-public-key you can request the ServerPublicKey again. This is done by referring to the id of the Installation.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InstallationServerPublicKey"
                            }
                        }
                    }
                }
            }
        },
        "/session/{itemId}": {
            "delete": {
                "tags": [
                    "session"
                ],
                "summary": "",
                "description": "Deletes the current session.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Endpoint for operations over the current session.",
                        "schema": {
                            "$ref": "#/definitions/Session"
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account/{monetary-accountID}/share-invite-bank-inquiry/{itemId}": {
            "get": {
                "tags": [
                    "share-invite-bank-inquiry"
                ],
                "summary": "",
                "description": "Get the details of a specific share inquiry.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Used to share a monetary account with another bunq user, as in the 'Connect' feature in the bunq app. Allow the creation of share inquiries that, in the same way as request inquiries, can be revoked by the user creating them or accepted/rejected by the other party.",
                        "schema": {
                            "$ref": "#/definitions/ShareInviteBankInquiry"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "share-invite-bank-inquiry"
                ],
                "summary": "",
                "description": "Update the details of a share. This includes updating status (revoking or cancelling it), granted permission and validity period of this share.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ShareInviteBankInquiry"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Used to share a monetary account with another bunq user, as in the 'Connect' feature in the bunq app. Allow the creation of share inquiries that, in the same way as request inquiries, can be revoked by the user creating them or accepted/rejected by the other party.",
                        "schema": {
                            "$ref": "#/definitions/ShareInviteBankInquiry"
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account/{monetary-accountID}/share-invite-bank-inquiry": {
            "post": {
                "tags": [
                    "share-invite-bank-inquiry"
                ],
                "summary": "",
                "description": "Create a new share inquiry for a monetary account, specifying the permission the other bunq user will have on it.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ShareInviteBankInquiry"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Used to share a monetary account with another bunq user, as in the 'Connect' feature in the bunq app. Allow the creation of share inquiries that, in the same way as request inquiries, can be revoked by the user creating them or accepted/rejected by the other party.",
                        "schema": {
                            "$ref": "#/definitions/ShareInviteBankInquiry"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "share-invite-bank-inquiry"
                ],
                "summary": "",
                "description": "Get a list with all the share inquiries for a monetary account, only if the requesting user has permission to change the details of the various ones.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Used to share a monetary account with another bunq user, as in the 'Connect' feature in the bunq app. Allow the creation of share inquiries that, in the same way as request inquiries, can be revoked by the user creating them or accepted/rejected by the other party.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ShareInviteBankInquiry"
                            }
                        }
                    }
                }
            }
        },
        "/user/{userID}/share-invite-bank-response": {
            "get": {
                "tags": [
                    "share-invite-bank-response"
                ],
                "summary": "",
                "description": "Return all the shares a user was invited to.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Used to view or respond to shares a user was invited to. See 'share-invite-bank-inquiry' for more information about the inquiring endpoint.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ShareInviteBankResponse"
                            }
                        }
                    }
                }
            }
        },
        "/user/{userID}/share-invite-bank-response/{itemId}": {
            "get": {
                "tags": [
                    "share-invite-bank-response"
                ],
                "summary": "",
                "description": "Return the details of a specific share a user was invited to.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Used to view or respond to shares a user was invited to. See 'share-invite-bank-inquiry' for more information about the inquiring endpoint.",
                        "schema": {
                            "$ref": "#/definitions/ShareInviteBankResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "share-invite-bank-response"
                ],
                "summary": "",
                "description": "Accept or reject a share a user was invited to.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ShareInviteBankResponse"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Used to view or respond to shares a user was invited to. See 'share-invite-bank-inquiry' for more information about the inquiring endpoint.",
                        "schema": {
                            "$ref": "#/definitions/ShareInviteBankResponse"
                        }
                    }
                }
            }
        },
        "/tab/{itemId}": {
            "get": {
                "tags": [
                    "tab"
                ],
                "summary": "",
                "description": "Get a publicly visible tab.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Used to read a single publicly visible tab.",
                        "schema": {
                            "$ref": "#/definitions/Tab"
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account/{monetary-accountID}/cash-register/{cash-registerID}/tab/{itemId}": {
            "get": {
                "tags": [
                    "tab"
                ],
                "summary": "",
                "description": "Get a specific tab. This returns a TabUsageSingle or TabUsageMultiple.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "cash-registerID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Once your CashRegister has been activated you can use it to create Tabs. A Tab is a template for a payment. In contrast to requests a Tab is not pointed towards a specific user. Any user can pay the Tab as long as it is made visible by you. The creation of a Tab happens with /tab-usage-single or /tab-usage-multiple. A TabUsageSingle is a Tab that can be paid once. A TabUsageMultiple is a Tab that can be paid multiple times by different users.",
                        "schema": {
                            "$ref": "#/definitions/Tab"
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account/{monetary-accountID}/cash-register/{cash-registerID}/tab": {
            "get": {
                "tags": [
                    "tab"
                ],
                "summary": "",
                "description": "Get a collection of tabs.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "cash-registerID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Once your CashRegister has been activated you can use it to create Tabs. A Tab is a template for a payment. In contrast to requests a Tab is not pointed towards a specific user. Any user can pay the Tab as long as it is made visible by you. The creation of a Tab happens with /tab-usage-single or /tab-usage-multiple. A TabUsageSingle is a Tab that can be paid once. A TabUsageMultiple is a Tab that can be paid multiple times by different users.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Tab"
                            }
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account/{monetary-accountID}/cash-register/{cash-registerID}/tab/{tabUUID}/tab-item/{itemId}": {
            "put": {
                "tags": [
                    "tab-item"
                ],
                "summary": "",
                "description": "Modify a TabItem from a given Tab.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "cash-registerID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "tabUUID",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TabItemShop"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "After you\u2019ve created a Tab using /tab-usage-single or /tab-usage-multiple you can add items and attachments using tab-item. You can only add or modify TabItems of a Tab which status is OPEN. The amount of the TabItems will not influence the total_amount of the corresponding Tab. However, if you've created any TabItems for a Tab the sum of the amounts of these items must be equal to the total_amount of the Tab when you change its status to PAYABLE/WAITING_FOR_PAYMENT.",
                        "schema": {
                            "$ref": "#/definitions/TabItemShop"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "tab-item"
                ],
                "summary": "",
                "description": "Delete a specific TabItem from a Tab.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "cash-registerID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "tabUUID",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "After you\u2019ve created a Tab using /tab-usage-single or /tab-usage-multiple you can add items and attachments using tab-item. You can only add or modify TabItems of a Tab which status is OPEN. The amount of the TabItems will not influence the total_amount of the corresponding Tab. However, if you've created any TabItems for a Tab the sum of the amounts of these items must be equal to the total_amount of the Tab when you change its status to PAYABLE/WAITING_FOR_PAYMENT.",
                        "schema": {
                            "$ref": "#/definitions/TabItemShop"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "tab-item"
                ],
                "summary": "",
                "description": "Get a specific TabItem from a given Tab.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "cash-registerID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "tabUUID",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "After you\u2019ve created a Tab using /tab-usage-single or /tab-usage-multiple you can add items and attachments using tab-item. You can only add or modify TabItems of a Tab which status is OPEN. The amount of the TabItems will not influence the total_amount of the corresponding Tab. However, if you've created any TabItems for a Tab the sum of the amounts of these items must be equal to the total_amount of the Tab when you change its status to PAYABLE/WAITING_FOR_PAYMENT.",
                        "schema": {
                            "$ref": "#/definitions/TabItemShop"
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account/{monetary-accountID}/cash-register/{cash-registerID}/tab/{tabUUID}/tab-item": {
            "post": {
                "tags": [
                    "tab-item"
                ],
                "summary": "",
                "description": "Create a new TabItem for a given Tab.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "cash-registerID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "tabUUID",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TabItemShop"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "After you\u2019ve created a Tab using /tab-usage-single or /tab-usage-multiple you can add items and attachments using tab-item. You can only add or modify TabItems of a Tab which status is OPEN. The amount of the TabItems will not influence the total_amount of the corresponding Tab. However, if you've created any TabItems for a Tab the sum of the amounts of these items must be equal to the total_amount of the Tab when you change its status to PAYABLE/WAITING_FOR_PAYMENT.",
                        "schema": {
                            "$ref": "#/definitions/TabItemShop"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "tab-item"
                ],
                "summary": "",
                "description": "Get a collection of TabItems from a given Tab.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "cash-registerID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "tabUUID",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "After you\u2019ve created a Tab using /tab-usage-single or /tab-usage-multiple you can add items and attachments using tab-item. You can only add or modify TabItems of a Tab which status is OPEN. The amount of the TabItems will not influence the total_amount of the corresponding Tab. However, if you've created any TabItems for a Tab the sum of the amounts of these items must be equal to the total_amount of the Tab when you change its status to PAYABLE/WAITING_FOR_PAYMENT.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TabItemShop"
                            }
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account/{monetary-accountID}/cash-register/{cash-registerID}/tab/{tabUUID}/tab-item-batch": {
            "post": {
                "tags": [
                    "tab-item-batch"
                ],
                "summary": "",
                "description": "Create tab items as a batch.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "cash-registerID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "tabUUID",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TabItemShopBatch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a batch of tab items.",
                        "schema": {
                            "$ref": "#/definitions/TabItemShopBatch"
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account/{monetary-accountID}/cash-register/{cash-registerID}/tab/{tabUUID}/tab-result-inquiry/{itemId}": {
            "get": {
                "tags": [
                    "tab-result-inquiry"
                ],
                "summary": "",
                "description": "Used to view a single TabResultInquiry belonging to a tab.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "cash-registerID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "tabUUID",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Used to view TabResultInquiry objects belonging to a tab. A TabResultInquiry is an object that holds details on both the tab and a single payment made for that tab.",
                        "schema": {
                            "$ref": "#/definitions/TabResultInquiry"
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account/{monetary-accountID}/cash-register/{cash-registerID}/tab/{tabUUID}/tab-result-inquiry": {
            "get": {
                "tags": [
                    "tab-result-inquiry"
                ],
                "summary": "",
                "description": "Used to view a list of TabResultInquiry objects belonging to a tab.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "cash-registerID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "tabUUID",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Used to view TabResultInquiry objects belonging to a tab. A TabResultInquiry is an object that holds details on both the tab and a single payment made for that tab.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TabResultInquiry"
                            }
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account/{monetary-accountID}/tab-result-response/{itemId}": {
            "get": {
                "tags": [
                    "tab-result-response"
                ],
                "summary": "",
                "description": "Used to view a single TabResultResponse belonging to a tab.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Used to view TabResultResponse objects belonging to a tab. A TabResultResponse is an object that holds details on a tab which has been paid from the provided monetary account.",
                        "schema": {
                            "$ref": "#/definitions/TabResultResponse"
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account/{monetary-accountID}/tab-result-response": {
            "get": {
                "tags": [
                    "tab-result-response"
                ],
                "summary": "",
                "description": "Used to view a list of TabResultResponse objects belonging to a tab.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Used to view TabResultResponse objects belonging to a tab. A TabResultResponse is an object that holds details on a tab which has been paid from the provided monetary account.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TabResultResponse"
                            }
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account/{monetary-accountID}/cash-register/{cash-registerID}/tab-usage-multiple/{itemId}": {
            "put": {
                "tags": [
                    "tab-usage-multiple"
                ],
                "summary": "",
                "description": "Modify a specific TabUsageMultiple. You can change the amount_total, status and visibility. Once you change the status to PAYABLE the TabUsageMultiple will expire after a year (default). If you've created any TabItems for a Tab the sum of the amounts of these items must be equal to the total_amount of the Tab when you change its status to PAYABLE.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "cash-registerID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TabUsageMultiple"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TabUsageMultiple is a Tab that can be paid by multiple users. Just like the TabUsageSingle it is created with the status OPEN, the visibility can be defined in the visibility object and TabItems can be added as long as the status is OPEN. When you change the status to PAYABLE any bunq user can use the tab to make a payment to your account. After an user has paid your TabUsageMultiple the status will not change, it will stay PAYABLE. For example: you can create a TabUsageMultiple with require_address set to true. Now show the QR code of this Tab on your webshop, and any bunq user can instantly pay and order something from your webshop.",
                        "schema": {
                            "$ref": "#/definitions/TabUsageMultiple"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "tab-usage-multiple"
                ],
                "summary": "",
                "description": "Close a specific TabUsageMultiple.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "cash-registerID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TabUsageMultiple is a Tab that can be paid by multiple users. Just like the TabUsageSingle it is created with the status OPEN, the visibility can be defined in the visibility object and TabItems can be added as long as the status is OPEN. When you change the status to PAYABLE any bunq user can use the tab to make a payment to your account. After an user has paid your TabUsageMultiple the status will not change, it will stay PAYABLE. For example: you can create a TabUsageMultiple with require_address set to true. Now show the QR code of this Tab on your webshop, and any bunq user can instantly pay and order something from your webshop.",
                        "schema": {
                            "$ref": "#/definitions/TabUsageMultiple"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "tab-usage-multiple"
                ],
                "summary": "",
                "description": "Get a specific TabUsageMultiple.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "cash-registerID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TabUsageMultiple is a Tab that can be paid by multiple users. Just like the TabUsageSingle it is created with the status OPEN, the visibility can be defined in the visibility object and TabItems can be added as long as the status is OPEN. When you change the status to PAYABLE any bunq user can use the tab to make a payment to your account. After an user has paid your TabUsageMultiple the status will not change, it will stay PAYABLE. For example: you can create a TabUsageMultiple with require_address set to true. Now show the QR code of this Tab on your webshop, and any bunq user can instantly pay and order something from your webshop.",
                        "schema": {
                            "$ref": "#/definitions/TabUsageMultiple"
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account/{monetary-accountID}/cash-register/{cash-registerID}/tab-usage-multiple": {
            "post": {
                "tags": [
                    "tab-usage-multiple"
                ],
                "summary": "",
                "description": "Create a TabUsageMultiple. On creation the status must be set to OPEN",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "cash-registerID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TabUsageMultiple"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TabUsageMultiple is a Tab that can be paid by multiple users. Just like the TabUsageSingle it is created with the status OPEN, the visibility can be defined in the visibility object and TabItems can be added as long as the status is OPEN. When you change the status to PAYABLE any bunq user can use the tab to make a payment to your account. After an user has paid your TabUsageMultiple the status will not change, it will stay PAYABLE. For example: you can create a TabUsageMultiple with require_address set to true. Now show the QR code of this Tab on your webshop, and any bunq user can instantly pay and order something from your webshop.",
                        "schema": {
                            "$ref": "#/definitions/TabUsageMultiple"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "tab-usage-multiple"
                ],
                "summary": "",
                "description": "Get a collection of TabUsageMultiple.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "cash-registerID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TabUsageMultiple is a Tab that can be paid by multiple users. Just like the TabUsageSingle it is created with the status OPEN, the visibility can be defined in the visibility object and TabItems can be added as long as the status is OPEN. When you change the status to PAYABLE any bunq user can use the tab to make a payment to your account. After an user has paid your TabUsageMultiple the status will not change, it will stay PAYABLE. For example: you can create a TabUsageMultiple with require_address set to true. Now show the QR code of this Tab on your webshop, and any bunq user can instantly pay and order something from your webshop.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TabUsageMultiple"
                            }
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account/{monetary-accountID}/cash-register/{cash-registerID}/tab-usage-single/{itemId}": {
            "put": {
                "tags": [
                    "tab-usage-single"
                ],
                "summary": "",
                "description": "Modify a specific TabUsageSingle. You can change the amount_total, status and visibility. Once you change the status to WAITING_FOR_PAYMENT the TabUsageSingle will expire after 5 minutes (default) or up to 1 hour if a different expiration is provided.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "cash-registerID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TabUsageSingle"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TabUsageSingle is a Tab that can be paid once. The TabUsageSingle is created with the status OPEN. Optionally you can add TabItems to the tab using /tab/_/tab-item, TabItems don't affect the total amount of the Tab. However, if you've created any TabItems for a Tab the sum of the amounts of these items must be equal to the total_amount of the Tab when you change its status to WAITING_FOR_PAYMENT. By setting the visibility object a TabUsageSingle with the status OPEN or WAITING_FOR_PAYMENT can be made visible to customers. As soon as a customer pays the TabUsageSingle its status changes to PAID, and it can't be paid again.",
                        "schema": {
                            "$ref": "#/definitions/TabUsageSingle"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "tab-usage-single"
                ],
                "summary": "",
                "description": "Cancel a specific TabUsageSingle.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "cash-registerID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TabUsageSingle is a Tab that can be paid once. The TabUsageSingle is created with the status OPEN. Optionally you can add TabItems to the tab using /tab/_/tab-item, TabItems don't affect the total amount of the Tab. However, if you've created any TabItems for a Tab the sum of the amounts of these items must be equal to the total_amount of the Tab when you change its status to WAITING_FOR_PAYMENT. By setting the visibility object a TabUsageSingle with the status OPEN or WAITING_FOR_PAYMENT can be made visible to customers. As soon as a customer pays the TabUsageSingle its status changes to PAID, and it can't be paid again.",
                        "schema": {
                            "$ref": "#/definitions/TabUsageSingle"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "tab-usage-single"
                ],
                "summary": "",
                "description": "Get a specific TabUsageSingle.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "cash-registerID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TabUsageSingle is a Tab that can be paid once. The TabUsageSingle is created with the status OPEN. Optionally you can add TabItems to the tab using /tab/_/tab-item, TabItems don't affect the total amount of the Tab. However, if you've created any TabItems for a Tab the sum of the amounts of these items must be equal to the total_amount of the Tab when you change its status to WAITING_FOR_PAYMENT. By setting the visibility object a TabUsageSingle with the status OPEN or WAITING_FOR_PAYMENT can be made visible to customers. As soon as a customer pays the TabUsageSingle its status changes to PAID, and it can't be paid again.",
                        "schema": {
                            "$ref": "#/definitions/TabUsageSingle"
                        }
                    }
                }
            }
        },
        "/user/{userID}/monetary-account/{monetary-accountID}/cash-register/{cash-registerID}/tab-usage-single": {
            "post": {
                "tags": [
                    "tab-usage-single"
                ],
                "summary": "",
                "description": "Create a TabUsageSingle. The initial status must be OPEN",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "cash-registerID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TabUsageSingle"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TabUsageSingle is a Tab that can be paid once. The TabUsageSingle is created with the status OPEN. Optionally you can add TabItems to the tab using /tab/_/tab-item, TabItems don't affect the total amount of the Tab. However, if you've created any TabItems for a Tab the sum of the amounts of these items must be equal to the total_amount of the Tab when you change its status to WAITING_FOR_PAYMENT. By setting the visibility object a TabUsageSingle with the status OPEN or WAITING_FOR_PAYMENT can be made visible to customers. As soon as a customer pays the TabUsageSingle its status changes to PAID, and it can't be paid again.",
                        "schema": {
                            "$ref": "#/definitions/TabUsageSingle"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "tab-usage-single"
                ],
                "summary": "",
                "description": "Get a collection of TabUsageSingle.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "monetary-accountID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "cash-registerID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TabUsageSingle is a Tab that can be paid once. The TabUsageSingle is created with the status OPEN. Optionally you can add TabItems to the tab using /tab/_/tab-item, TabItems don't affect the total amount of the Tab. However, if you've created any TabItems for a Tab the sum of the amounts of these items must be equal to the total_amount of the Tab when you change its status to WAITING_FOR_PAYMENT. By setting the visibility object a TabUsageSingle with the status OPEN or WAITING_FOR_PAYMENT can be made visible to customers. As soon as a customer pays the TabUsageSingle its status changes to PAID, and it can't be paid again.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TabUsageSingle"
                            }
                        }
                    }
                }
            }
        },
        "/user/{userID}/token-qr-request-ideal": {
            "post": {
                "tags": [
                    "token-qr-request-ideal"
                ],
                "summary": "",
                "description": "Create a request from an ideal transaction.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TokenQrRequestIdeal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Using this call you create a request for payment from an external token provided with an ideal transaction. Make sure your iDEAL payments are compliant with the iDEAL standards, by following the following manual: <a href=\"https:/www.bunq.com/files/media/legal/en/20170315_ideal_standards_en.pdf\">https:/www.bunq.com/files/media/legal/en/20170315_ideal_standards_en.pdf</a>. It's very important to keep these points in mind when you are using the endpoint to make iDEAL payments from your application.",
                        "schema": {
                            "$ref": "#/definitions/TokenQrRequestIdeal"
                        }
                    }
                }
            }
        },
        "/user/{userID}/token-qr-request-sofort": {
            "post": {
                "tags": [
                    "token-qr-request-sofort"
                ],
                "summary": "",
                "description": "Create a request from an SOFORT transaction.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TokenQrRequestSofort"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Using this call you can create a SOFORT Request assigned to your User by providing the Token of the request.",
                        "schema": {
                            "$ref": "#/definitions/TokenQrRequestSofort"
                        }
                    }
                }
            }
        },
        "/user/{itemId}": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "",
                "description": "Get a specific user.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Using this call you can retrieve information of the user you are logged in as. This includes your user id, which is referred to in endpoints.",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "",
                "description": "Get a collection of all available users.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Using this call you can retrieve information of the user you are logged in as. This includes your user id, which is referred to in endpoints.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    }
                }
            }
        },
        "/user-company/{itemId}": {
            "get": {
                "tags": [
                    "user-company"
                ],
                "summary": "",
                "description": "Get a specific company.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "With UserCompany you can retrieve information regarding the authenticated UserCompany and update specific fields.<br/><br/>Notification filters can be set on a UserCompany level to receive callbacks. For more information check the <a href=\"/api/1/page/callbacks\">dedicated callbacks page</a>.",
                        "schema": {
                            "$ref": "#/definitions/UserCompany"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "user-company"
                ],
                "summary": "",
                "description": "Modify a specific company's data.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserCompany"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "With UserCompany you can retrieve information regarding the authenticated UserCompany and update specific fields.<br/><br/>Notification filters can be set on a UserCompany level to receive callbacks. For more information check the <a href=\"/api/1/page/callbacks\">dedicated callbacks page</a>.",
                        "schema": {
                            "$ref": "#/definitions/UserCompany"
                        }
                    }
                }
            }
        },
        "/user-person/{itemId}": {
            "get": {
                "tags": [
                    "user-person"
                ],
                "summary": "",
                "description": "Get a specific person.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "With UserPerson you can retrieve information regarding the authenticated UserPerson and update specific fields.<br/><br/>Notification filters can be set on a UserPerson level to receive callbacks. For more information check the <a href=\"/api/1/page/callbacks\">dedicated callbacks page</a>.",
                        "schema": {
                            "$ref": "#/definitions/UserPerson"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "user-person"
                ],
                "summary": "",
                "description": "Modify a specific person object's data.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "itemId",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserPerson"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "With UserPerson you can retrieve information regarding the authenticated UserPerson and update specific fields.<br/><br/>Notification filters can be set on a UserPerson level to receive callbacks. For more information check the <a href=\"/api/1/page/callbacks\">dedicated callbacks page</a>.",
                        "schema": {
                            "$ref": "#/definitions/UserPerson"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Address": {
            "type": "object",
            "properties": {
                "street": {
                    "type": "string",
                    "description": "The street.",
                    "readOnly": false
                },
                "house_number": {
                    "type": "string",
                    "description": "The house number.",
                    "readOnly": false
                },
                "po_box": {
                    "type": "string",
                    "description": "The PO box.",
                    "readOnly": false
                },
                "postal_code": {
                    "type": "string",
                    "description": "The postal code.",
                    "readOnly": false
                },
                "city": {
                    "type": "string",
                    "description": "The city.",
                    "readOnly": false
                },
                "country": {
                    "type": "string",
                    "description": "The country as an ISO 3166-1 alpha-2 country code..",
                    "readOnly": false
                },
                "province": {
                    "type": "string",
                    "description": "The province according to local standard.",
                    "readOnly": true
                }
            }
        },
        "Amount": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string",
                    "description": "The amount formatted to two decimal places.",
                    "readOnly": false
                },
                "currency": {
                    "type": "string",
                    "description": "The currency of the amount. It is an ISO 4217 formatted currency code.",
                    "readOnly": false
                }
            }
        },
        "AnchoredObject": {
            "type": "object",
            "properties": {
                "CardDebit": {
                    "type": "object",
                    "description": "",
                    "readOnly": true,
                    "$ref": "#/definitions/CardDebit"
                },
                "CardPinChange": {
                    "type": "object",
                    "description": "",
                    "readOnly": true,
                    "$ref": "#/definitions/CardPinChange"
                },
                "CardResult": {
                    "type": "object",
                    "description": "",
                    "readOnly": true,
                    "$ref": "#/definitions/CardResult"
                },
                "DraftPayment": {
                    "type": "object",
                    "description": "",
                    "readOnly": true,
                    "$ref": "#/definitions/DraftPayment"
                },
                "IdealMerchantTransaction": {
                    "type": "object",
                    "description": "",
                    "readOnly": true,
                    "$ref": "#/definitions/IdealMerchantTransaction"
                },
                "Invoice": {
                    "type": "object",
                    "description": "",
                    "readOnly": true,
                    "$ref": "#/definitions/Invoice"
                },
                "Payment": {
                    "type": "object",
                    "description": "",
                    "readOnly": true,
                    "$ref": "#/definitions/Payment"
                },
                "PaymentBatch": {
                    "type": "object",
                    "description": "",
                    "readOnly": true,
                    "$ref": "#/definitions/PaymentBatch"
                },
                "PromotionDisplay": {
                    "type": "object",
                    "description": "",
                    "readOnly": true,
                    "$ref": "#/definitions/PromotionDisplay"
                },
                "RequestInquiryBatch": {
                    "type": "object",
                    "description": "",
                    "readOnly": true,
                    "$ref": "#/definitions/RequestInquiryBatch"
                },
                "RequestInquiry": {
                    "type": "object",
                    "description": "",
                    "readOnly": true,
                    "$ref": "#/definitions/RequestInquiry"
                },
                "RequestResponse": {
                    "type": "object",
                    "description": "",
                    "readOnly": true,
                    "$ref": "#/definitions/RequestResponse"
                },
                "ScheduledPaymentBatch": {
                    "type": "object",
                    "description": "",
                    "readOnly": true,
                    "$ref": "#/definitions/SchedulePaymentBatch"
                },
                "ScheduledPayment": {
                    "type": "object",
                    "description": "",
                    "readOnly": true,
                    "$ref": "#/definitions/SchedulePayment"
                },
                "ScheduledInstance": {
                    "type": "object",
                    "description": "",
                    "readOnly": true,
                    "$ref": "#/definitions/ScheduleInstance"
                },
                "ShareInviteBankInquiry": {
                    "type": "object",
                    "description": "",
                    "readOnly": true,
                    "$ref": "#/definitions/ShareInviteBankInquiry"
                },
                "ShareInviteBankResponse": {
                    "type": "object",
                    "description": "",
                    "readOnly": true,
                    "$ref": "#/definitions/ShareInviteBankResponse"
                },
                "UserCredentialPasswordIp": {
                    "type": "object",
                    "description": "",
                    "readOnly": true,
                    "$ref": "#/definitions/UserCredentialPasswordIp"
                }
            }
        },
        "Attachment": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the attachment.",
                    "readOnly": true
                },
                "content_type": {
                    "type": "string",
                    "description": "The content type of the attachment's file.",
                    "readOnly": true
                }
            }
        },
        "AttachmentConversationContent": {
            "type": "object",
            "properties": {}
        },
        "AttachmentMonetaryAccount": {
            "type": "object",
            "properties": {
                "attachment": {
                    "type": "object",
                    "description": "The attachment.",
                    "readOnly": true,
                    "$ref": "#/definitions/Attachment"
                },
                "id": {
                    "type": "integer",
                    "description": "The ID of the attachment created.",
                    "readOnly": true
                }
            }
        },
        "AttachmentMonetaryAccountPayment": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The id of the attached Attachment.",
                    "readOnly": false
                },
                "monetary_account_id": {
                    "type": "integer",
                    "description": "The id of the MonetaryAccount this Attachment is attached from.",
                    "readOnly": true
                }
            }
        },
        "AttachmentPublic": {
            "type": "object",
            "properties": {
                "uuid": {
                    "type": "string",
                    "description": "The uuid of the attachment.",
                    "readOnly": true
                },
                "description": {
                    "type": "string",
                    "description": "The description of the attachment.",
                    "readOnly": true
                },
                "content_type": {
                    "type": "string",
                    "description": "The content type of the attachment's file.",
                    "readOnly": true
                }
            }
        },
        "AttachmentPublicContent": {
            "type": "object",
            "properties": {}
        },
        "AttachmentTab": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The id of the attachment.",
                    "readOnly": true
                },
                "description": {
                    "type": "string",
                    "description": "The description of the attachment.",
                    "readOnly": true
                },
                "content_type": {
                    "type": "string",
                    "description": "The content type of the attachment's file.",
                    "readOnly": true
                }
            }
        },
        "AttachmentTabContent": {
            "type": "object",
            "properties": {}
        },
        "Avatar": {
            "type": "object",
            "properties": {
                "uuid": {
                    "type": "string",
                    "description": "The public UUID of the avatar.",
                    "readOnly": false
                },
                "anchor_uuid": {
                    "type": "string",
                    "description": "The public UUID of object this avatar is anchored to.",
                    "readOnly": true
                },
                "image": {
                    "type": "array",
                    "description": "The actual image information of this avatar.",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Image"
                    }
                }
            }
        },
        "BillingContractSubscription": {
            "type": "object",
            "properties": {
                "subscription_type": {
                    "type": "string",
                    "description": "The subscription type of the user. Can be one of PERSON_SUPER_LIGHT_V1, PERSON_LIGHT_V1, PERSON_MORE_V1, PERSON_FREE_V1, PERSON_PREMIUM_V1, COMPANY_V1, or COMPANY_V2.",
                    "readOnly": false
                },
                "id": {
                    "type": "integer",
                    "description": "The id of the billing contract.",
                    "readOnly": true
                },
                "created": {
                    "type": "string",
                    "description": "The timestamp when the billing contract was made.",
                    "readOnly": true
                },
                "updated": {
                    "type": "string",
                    "description": "The timestamp when the billing contract was last updated.",
                    "readOnly": true
                },
                "contract_date_start": {
                    "type": "string",
                    "description": "The date from when the billing contract is valid.",
                    "readOnly": true
                },
                "contract_date_end": {
                    "type": "string",
                    "description": "The date until when the billing contract is valid.",
                    "readOnly": true
                },
                "contract_version": {
                    "type": "integer",
                    "description": "The version of the billing contract.",
                    "readOnly": true
                }
            }
        },
        "BudgetRestriction": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "object",
                    "description": "The amount of the budget given to the invited user.",
                    "readOnly": false,
                    "$ref": "#/definitions/Amount"
                },
                "frequency": {
                    "type": "string",
                    "description": "The duration for a budget restriction. Valid values are DAILY, WEEKLY, MONTHLY, YEARLY.",
                    "readOnly": false
                }
            }
        },
        "BunqId": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "An integer ID of an object. Unique per object type.",
                    "readOnly": false
                }
            }
        },
        "BunqMeMerchantAvailable": {
            "type": "object",
            "properties": {
                "merchant_type": {
                    "type": "string",
                    "description": "A merchant type supported by bunq.me.",
                    "readOnly": true
                },
                "available": {
                    "type": "boolean",
                    "description": "Whether or not the merchant is available for the user.",
                    "readOnly": true
                }
            }
        },
        "BunqMeTab": {
            "type": "object",
            "properties": {
                "bunqme_tab_entry": {
                    "type": "object",
                    "description": "The bunq.me entry containing the payment information.",
                    "readOnly": false,
                    "$ref": "#/definitions/BunqMeTabEntry"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the bunq.me. Can be WAITING_FOR_PAYMENT, CANCELLED or EXPIRED.",
                    "readOnly": false
                },
                "id": {
                    "type": "integer",
                    "description": "The id of the created bunq.me.",
                    "readOnly": true
                },
                "created": {
                    "type": "string",
                    "description": "The timestamp when the bunq.me was created.",
                    "readOnly": true
                },
                "updated": {
                    "type": "string",
                    "description": "The timestamp when the bunq.me was last updated.",
                    "readOnly": true
                },
                "time_expiry": {
                    "type": "string",
                    "description": "The timestamp of when the bunq.me expired or will expire.",
                    "readOnly": true
                },
                "monetary_account_id": {
                    "type": "integer",
                    "description": "The id of the MonetaryAccount the bunq.me was sent from.",
                    "readOnly": true
                },
                "bunqme_tab_share_url": {
                    "type": "string",
                    "description": "The url that points to the bunq.me page.",
                    "readOnly": true
                },
                "result_inquiries": {
                    "type": "array",
                    "description": "The list of bunq.me result Inquiries successfully made and paid.",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/BunqMeTabResultInquiry"
                    }
                }
            }
        },
        "BunqMeTabEntry": {
            "type": "object",
            "properties": {
                "amount_inquired": {
                    "type": "object",
                    "description": "The requested Amount.",
                    "readOnly": false,
                    "$ref": "#/definitions/Amount"
                },
                "description": {
                    "type": "string",
                    "description": "The description for the bunq.me. Maximum 9000 characters.",
                    "readOnly": false
                },
                "redirect_url": {
                    "type": "string",
                    "description": "The URL which the user is sent to when a payment is completed.",
                    "readOnly": false
                },
                "uuid": {
                    "type": "string",
                    "description": "The uuid of the bunq.me.",
                    "readOnly": true
                },
                "alias": {
                    "type": "object",
                    "description": "The LabelMonetaryAccount with the public information of the User and the MonetaryAccount that created the bunq.me link.",
                    "readOnly": true,
                    "$ref": "#/definitions/LabelMonetaryAccount"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the bunq.me. Can be WAITING_FOR_PAYMENT, CANCELLED or EXPIRED.",
                    "readOnly": true
                },
                "merchant_available": {
                    "type": "array",
                    "description": "List of available merchants.",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/BunqMeMerchantAvailable"
                    }
                }
            }
        },
        "BunqMeTabResultInquiry": {
            "type": "object",
            "properties": {
                "payment": {
                    "type": "object",
                    "description": "The payment made for the Tab.",
                    "readOnly": true,
                    "$ref": "#/definitions/Payment"
                },
                "bunq_me_tab_id": {
                    "type": "integer",
                    "description": "The Id of the bunq.me tab that this BunqMeTabResultInquiry belongs to.",
                    "readOnly": true
                }
            }
        },
        "Card": {
            "type": "object",
            "properties": {
                "pin_code": {
                    "type": "string",
                    "description": "The plaintext pin code. Requests require encryption to be enabled.",
                    "readOnly": false
                },
                "activation_code": {
                    "type": "string",
                    "description": "The activation code required to set status to ACTIVE initially. Can only set status to ACTIVE using activation code when order_status is ACCEPTED_FOR_PRODUCTION and status is DEACTIVATED.",
                    "readOnly": false
                },
                "status": {
                    "type": "string",
                    "description": "The status to set for the card. Can be ACTIVE, DEACTIVATED, LOST, STOLEN, CANCELLED, EXPIRED or PIN_TRIES_EXCEEDED.",
                    "readOnly": false
                },
                "limit": {
                    "type": "array",
                    "description": "The limits to define for the card, among CARD_LIMIT_CONTACTLESS, CARD_LIMIT_ATM, CARD_LIMIT_DIPPING and CARD_LIMIT_POS_ICC (e.g. 25 EUR for CARD_LIMIT_CONTACTLESS)",
                    "readOnly": false,
                    "items": {
                        "$ref": "#/definitions/CardLimit"
                    }
                },
                "mag_stripe_permission": {
                    "type": "object",
                    "description": "The countries for which to grant (temporary) permissions to use the card.",
                    "readOnly": false,
                    "$ref": "#/definitions/CardMagStripePermission"
                },
                "country_permission": {
                    "type": "array",
                    "description": "The countries for which to grant (temporary) permissions to use the card.",
                    "readOnly": false,
                    "items": {
                        "$ref": "#/definitions/CardCountryPermission"
                    }
                },
                "monetary_account_current_id": {
                    "type": "integer",
                    "description": "The ID of the monetary account that card transactions will use.",
                    "readOnly": false
                },
                "pin_code_assignment": {
                    "type": "array",
                    "description": "Array of Types, PINs, account IDs assigned to the card.",
                    "readOnly": false,
                    "items": {
                        "$ref": "#/definitions/CardPinAssignment"
                    }
                },
                "monetary_account_id_fallback": {
                    "type": "integer",
                    "description": "ID of the MA to be used as fallback for this card if insufficient balance. Fallback account is removed if not supplied.",
                    "readOnly": false
                },
                "id": {
                    "type": "integer",
                    "description": "The id of the card.",
                    "readOnly": true
                },
                "created": {
                    "type": "string",
                    "description": "The timestamp of the card's creation.",
                    "readOnly": true
                },
                "updated": {
                    "type": "string",
                    "description": "The timestamp of the card's last update.",
                    "readOnly": true
                },
                "public_uuid": {
                    "type": "string",
                    "description": "The public UUID of the card.",
                    "readOnly": true
                },
                "type": {
                    "type": "string",
                    "description": "The type of the card. Can be MAESTRO, MASTERCARD.",
                    "readOnly": true
                },
                "sub_type": {
                    "type": "string",
                    "description": "The sub-type of the card.",
                    "readOnly": true
                },
                "second_line": {
                    "type": "string",
                    "description": "The second line of text on the card",
                    "readOnly": true
                },
                "sub_status": {
                    "type": "string",
                    "description": "The sub-status of the card. Can be NONE or REPLACED.",
                    "readOnly": true
                },
                "order_status": {
                    "type": "string",
                    "description": "The order status of the card. Can be CARD_UPDATE_REQUESTED, CARD_UPDATE_SENT, CARD_UPDATE_ACCEPTED, ACCEPTED_FOR_PRODUCTION or DELIVERED_TO_CUSTOMER.",
                    "readOnly": true
                },
                "expiry_date": {
                    "type": "string",
                    "description": "Expiry date of the card.",
                    "readOnly": true
                },
                "name_on_card": {
                    "type": "string",
                    "description": "The user's name on the card.",
                    "readOnly": true
                },
                "primary_account_number_four_digit": {
                    "type": "string",
                    "description": "The last 4 digits of the PAN of the card.",
                    "readOnly": true
                },
                "label_monetary_account_ordered": {
                    "type": "object",
                    "description": "The monetary account this card was ordered on and the label user that owns the card.",
                    "readOnly": true,
                    "$ref": "#/definitions/LabelMonetaryAccount"
                },
                "label_monetary_account_current": {
                    "type": "object",
                    "description": "The monetary account that this card is currently linked to and the label user viewing it.",
                    "readOnly": true,
                    "$ref": "#/definitions/LabelMonetaryAccount"
                },
                "country": {
                    "type": "string",
                    "description": "The country that is domestic to the card. Defaults to country of residence of user.",
                    "readOnly": true
                }
            }
        },
        "CardCountryPermission": {
            "type": "object",
            "properties": {
                "country": {
                    "type": "string",
                    "description": "The country to allow transactions in (e.g. NL, DE).",
                    "readOnly": false
                },
                "expiry_time": {
                    "type": "string",
                    "description": "Expiry time of this rule.",
                    "readOnly": false
                },
                "id": {
                    "type": "integer",
                    "description": "The id of the card country permission entry.",
                    "readOnly": true
                }
            }
        },
        "CardDebit": {
            "type": "object",
            "properties": {
                "second_line": {
                    "type": "string",
                    "description": "The second line of text on the card",
                    "readOnly": false
                },
                "name_on_card": {
                    "type": "string",
                    "description": "The user's name as will be on the card",
                    "readOnly": false
                },
                "alias": {
                    "type": "object",
                    "description": "The label for the user who requested the card.",
                    "readOnly": false,
                    "$ref": "#/definitions/LabelUser"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the card. Can be MAESTRO, MASTERCARD.",
                    "readOnly": false
                },
                "pin_code_assignment": {
                    "type": "array",
                    "description": "Array of Types, PINs, account IDs assigned to the card.",
                    "readOnly": false,
                    "items": {
                        "$ref": "#/definitions/CardPinAssignment"
                    }
                },
                "monetary_account_id_fallback": {
                    "type": "integer",
                    "description": "ID of the MA to be used as fallback for this card if insufficient balance. Fallback account is removed if not supplied.",
                    "readOnly": false
                },
                "id": {
                    "type": "integer",
                    "description": "The id of the card.",
                    "readOnly": true
                },
                "created": {
                    "type": "string",
                    "description": "The timestamp when the card was crated.",
                    "readOnly": true
                },
                "updated": {
                    "type": "string",
                    "description": "The timestamp when the card was last updated.",
                    "readOnly": true
                },
                "public_uuid": {
                    "type": "string",
                    "description": "The public UUID of the card.",
                    "readOnly": true
                },
                "sub_type": {
                    "type": "string",
                    "description": "The sub_type of card.",
                    "readOnly": true
                },
                "primary_account_number_four_digit": {
                    "type": "string",
                    "description": "The last 4 digits of the PAN of the card.",
                    "readOnly": true
                },
                "status": {
                    "type": "string",
                    "description": "The status to set for the card. After ordering the card it will be DEACTIVATED.",
                    "readOnly": true
                },
                "order_status": {
                    "type": "string",
                    "description": "The order status of the card. After ordering the card it will be NEW_CARD_REQUEST_RECEIVED.",
                    "readOnly": true
                },
                "expiry_date": {
                    "type": "string",
                    "description": "The expiry date of the card.",
                    "readOnly": true
                },
                "limit": {
                    "type": "array",
                    "description": "The limits to define for the card (e.g. 25 EUR for CARD_LIMIT_CONTACTLESS).",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/CardLimit"
                    }
                },
                "country_permission": {
                    "type": "array",
                    "description": "The countries for which to grant (temporary) permissions to use the card.",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/CardCountryPermission"
                    }
                },
                "label_monetary_account_ordered": {
                    "type": "object",
                    "description": "The monetary account this card was ordered on and the label user that owns the card.",
                    "readOnly": true,
                    "$ref": "#/definitions/LabelMonetaryAccount"
                },
                "label_monetary_account_current": {
                    "type": "object",
                    "description": "The monetary account that this card is currently linked to and the label user viewing it.",
                    "readOnly": true,
                    "$ref": "#/definitions/LabelMonetaryAccount"
                },
                "country": {
                    "type": "string",
                    "description": "The country that is domestic to the card. Defaults to country of residence of user.",
                    "readOnly": true
                }
            }
        },
        "CardGeneratedCvc2": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The id of the cvc code.",
                    "readOnly": true
                },
                "created": {
                    "type": "string",
                    "description": "The timestamp of the cvc code's creation.",
                    "readOnly": true
                },
                "updated": {
                    "type": "string",
                    "description": "The timestamp of the cvc code's last update.",
                    "readOnly": true
                },
                "cvc2": {
                    "type": "string",
                    "description": "The cvc2 code.",
                    "readOnly": true
                },
                "status": {
                    "type": "string",
                    "description": "The status of the cvc2. Can be AVAILABLE, USED, EXPIRED, BLOCKED.",
                    "readOnly": true
                },
                "expiry_time": {
                    "type": "string",
                    "description": "Expiry time of the cvc2.",
                    "readOnly": true
                }
            }
        },
        "CardLimit": {
            "type": "object",
            "properties": {
                "daily_limit": {
                    "type": "string",
                    "description": "The daily limit amount.",
                    "readOnly": false
                },
                "currency": {
                    "type": "string",
                    "description": "Currency for the daily limit.",
                    "readOnly": false
                },
                "type": {
                    "type": "string",
                    "description": "The type of transaction for the limit. Can be CARD_LIMIT_ATM, CARD_LIMIT_CONTACTLESS, CARD_LIMIT_DIPPING or CARD_LIMIT_POS_ICC.",
                    "readOnly": false
                },
                "id": {
                    "type": "integer",
                    "description": "The id of the card limit entry.",
                    "readOnly": true
                }
            }
        },
        "CardMagStripePermission": {
            "type": "object",
            "properties": {
                "expiry_time": {
                    "type": "string",
                    "description": "Expiry time of this rule.",
                    "readOnly": false
                }
            }
        },
        "CardName": {
            "type": "object",
            "properties": {
                "possible_card_name_array": {
                    "type": "array",
                    "description": "All possible variations (of suitable length) of user's legal name for the debit card.",
                    "readOnly": true,
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "CardPinAssignment": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "PIN type. Can be PRIMARY, SECONDARY or TERTIARY",
                    "readOnly": false
                },
                "pin_code": {
                    "type": "string",
                    "description": "The 4 digit PIN to be assigned to this account.",
                    "readOnly": false
                },
                "monetary_account_id": {
                    "type": "integer",
                    "description": "The ID of the monetary account to assign to this pin for the card.",
                    "readOnly": false
                }
            }
        },
        "CardPinChange": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The id of the pin change.",
                    "readOnly": true
                },
                "label_card": {
                    "type": "object",
                    "description": "The label of the card.",
                    "readOnly": true,
                    "$ref": "#/definitions/LabelCard"
                },
                "label_monetary_account_current": {
                    "type": "object",
                    "description": "The monetary account this card was ordered on and the label user that owns the card.",
                    "readOnly": true,
                    "$ref": "#/definitions/LabelMonetaryAccount"
                },
                "time_request": {
                    "type": "string",
                    "description": "The request date of the pin change.",
                    "readOnly": true
                },
                "time_accept": {
                    "type": "string",
                    "description": "The acceptance date of the pin change.",
                    "readOnly": true
                },
                "status": {
                    "type": "string",
                    "description": "The status of the pin change request, PIN_UPDATE_REQUESTED or PIN_UPDATE_ACCEPTED",
                    "readOnly": true
                }
            }
        },
        "CardReplace": {
            "type": "object",
            "properties": {
                "pin_code": {
                    "type": "string",
                    "description": "The plaintext pin code. Requests require encryption to be enabled.",
                    "readOnly": false
                },
                "second_line": {
                    "type": "string",
                    "description": "The second line on the card.",
                    "readOnly": false
                },
                "id": {
                    "type": "integer",
                    "description": "The id of the new card.",
                    "readOnly": true
                }
            }
        },
        "CardResult": {
            "type": "object",
            "properties": {
                "monetary_account_id": {
                    "type": "integer",
                    "description": "The id of the monetary account this card result links to.",
                    "readOnly": true
                },
                "card_id": {
                    "type": "integer",
                    "description": "The id of the card this card result links to.",
                    "readOnly": true
                },
                "amount_original": {
                    "type": "object",
                    "description": "The original amount of the message.",
                    "readOnly": true,
                    "$ref": "#/definitions/Amount"
                },
                "amount_final": {
                    "type": "object",
                    "description": "The final amount of the message to be booked to the account.",
                    "readOnly": true,
                    "$ref": "#/definitions/Amount"
                },
                "decision": {
                    "type": "string",
                    "description": "Why the transaction was denied, if it was denied, or just ALLOWED.",
                    "readOnly": true
                },
                "decision_description": {
                    "type": "string",
                    "description": "Empty if allowed, otherwise a textual explanation of why it was denied.",
                    "readOnly": true
                },
                "decision_description_translated": {
                    "type": "string",
                    "description": "Empty if allowed, otherwise a textual explanation of why it was denied in user's language.",
                    "readOnly": true
                },
                "description": {
                    "type": "string",
                    "description": "The description for this transaction to display.",
                    "readOnly": true
                },
                "message_type": {
                    "type": "string",
                    "description": "The type of message that this card result is created for.",
                    "readOnly": true
                },
                "authorisation_type": {
                    "type": "string",
                    "description": "The way the cardholder was authorised to the POS or ATM.",
                    "readOnly": true
                },
                "city": {
                    "type": "string",
                    "description": "The city where the message originates from.",
                    "readOnly": true
                },
                "alias": {
                    "type": "object",
                    "description": "The monetary account label of the account that this result is created for.",
                    "readOnly": true,
                    "$ref": "#/definitions/LabelMonetaryAccount"
                },
                "counterparty_alias": {
                    "type": "object",
                    "description": "The monetary account label of the counterparty.",
                    "readOnly": true,
                    "$ref": "#/definitions/LabelMonetaryAccount"
                },
                "label_card": {
                    "type": "object",
                    "description": "The label of the card.",
                    "readOnly": true,
                    "$ref": "#/definitions/LabelCard"
                },
                "reservation_status": {
                    "type": "string",
                    "description": "The status of the reservation if the transaction is a reservation.",
                    "readOnly": true
                },
                "reservation_expiry_time": {
                    "type": "string",
                    "description": "The moment the reservation will expire.",
                    "readOnly": true
                }
            }
        },
        "CashRegister": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the CashRegister.",
                    "readOnly": false
                },
                "status": {
                    "type": "string",
                    "description": "The status of the CashRegister. Can be PENDING_APPROVAL, ACTIVE, DENIED or CLOSED.",
                    "readOnly": false
                },
                "avatar_uuid": {
                    "type": "string",
                    "description": "The UUID of the avatar of the CashRegister. Use the calls /attachment-public and /avatar to create a new Avatar and get its UUID.",
                    "readOnly": false
                },
                "location": {
                    "type": "object",
                    "description": "The geolocation of the CashRegister. Can be null.",
                    "readOnly": false,
                    "$ref": "#/definitions/Geolocation"
                },
                "notification_filters": {
                    "type": "array",
                    "description": "The types of notifications that will result in a push notification or URL callback for this CashRegister.",
                    "readOnly": false,
                    "items": {
                        "$ref": "#/definitions/NotificationFilter"
                    }
                },
                "tab_text_waiting_screen": {
                    "type": "array",
                    "description": "The tab text for waiting screen of CashRegister.",
                    "readOnly": false,
                    "items": {
                        "$ref": "#/definitions/TabTextWaitingScreen"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "The id of the created CashRegister.",
                    "readOnly": true
                },
                "created": {
                    "type": "string",
                    "description": "The timestamp of the CashRegister's creation.",
                    "readOnly": true
                },
                "updated": {
                    "type": "string",
                    "description": "The timestamp of the CashRegister's last update.",
                    "readOnly": true
                },
                "avatar": {
                    "type": "object",
                    "description": "The Avatar of the CashRegister.",
                    "readOnly": true,
                    "$ref": "#/definitions/Avatar"
                }
            }
        },
        "CashRegisterQrCode": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "description": "The status of this QR code. If the status is \"ACTIVE\" the QR code can be scanned to see the linked CashRegister and tab. If the status is \"INACTIVE\" the QR code does not link to a anything.",
                    "readOnly": false
                },
                "id": {
                    "type": "integer",
                    "description": "The id of the created QR code. Use this id to get the RAW content of the QR code with: ../qr-code/{id}/content",
                    "readOnly": true
                },
                "created": {
                    "type": "string",
                    "description": "The timestamp of the QR code's creation.",
                    "readOnly": true
                },
                "updated": {
                    "type": "string",
                    "description": "The timestamp of the TokenQrCashRegister's last update.",
                    "readOnly": true
                },
                "cash_register": {
                    "type": "object",
                    "description": "The CashRegister that is linked to the token.",
                    "readOnly": true,
                    "$ref": "#/definitions/CashRegister"
                },
                "tab_object": {
                    "type": "object",
                    "description": "Holds the Tab object. Can be TabUsageSingle, TabUsageMultiple or null",
                    "readOnly": true,
                    "$ref": "#/definitions/Tab"
                }
            }
        },
        "CashRegisterQrCodeContent": {
            "type": "object",
            "properties": {}
        },
        "Certificate": {
            "type": "object",
            "properties": {
                "certificate": {
                    "type": "string",
                    "description": "A single certificate in the chain in .PEM format.",
                    "readOnly": false
                }
            }
        },
        "CertificatePinned": {
            "type": "object",
            "properties": {
                "certificate_chain": {
                    "type": "string",
                    "description": "The certificate chain in .PEM format. Certificates are glued with newline characters.",
                    "readOnly": false
                },
                "id": {
                    "type": "integer",
                    "description": "The id generated for the pinned certificate chain.",
                    "readOnly": true
                }
            }
        },
        "ChatConversation": {
            "type": "object",
            "properties": {
                "SupportConversationExternal": {
                    "type": "object",
                    "description": "",
                    "readOnly": true,
                    "$ref": "#/definitions/ChatConversationSupportExternal"
                },
                "ChatConversationReference": {
                    "type": "object",
                    "description": "",
                    "readOnly": true,
                    "$ref": "#/definitions/ChatConversationReference"
                }
            }
        },
        "ChatConversationReference": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The id of this conversation.",
                    "readOnly": true
                },
                "created": {
                    "type": "string",
                    "description": "The timestamp the conversation reference was created.",
                    "readOnly": true
                },
                "updated": {
                    "type": "string",
                    "description": "The timestamp the conversation reference was last updated.",
                    "readOnly": true
                }
            }
        },
        "ChatConversationSupportExternal": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The id of this conversation.",
                    "readOnly": true
                },
                "created": {
                    "type": "string",
                    "description": "The timestamp of the support conversation's creation.",
                    "readOnly": true
                },
                "updated": {
                    "type": "string",
                    "description": "The timestamp of the support conversation's last update.",
                    "readOnly": true
                },
                "last_message": {
                    "type": "object",
                    "description": "The last message posted to this conversation if any.",
                    "readOnly": true,
                    "$ref": "#/definitions/ChatMessage"
                }
            }
        },
        "ChatMessage": {
            "type": "object",
            "properties": {
                "ChatMessageAnnouncement": {
                    "type": "object",
                    "description": "",
                    "readOnly": true,
                    "$ref": "#/definitions/ChatMessageAnnouncement"
                },
                "ChatMessageStatus": {
                    "type": "object",
                    "description": "",
                    "readOnly": true,
                    "$ref": "#/definitions/ChatMessageStatus"
                },
                "ChatMessageUser": {
                    "type": "object",
                    "description": "",
                    "readOnly": true,
                    "$ref": "#/definitions/ChatMessageUser"
                }
            }
        },
        "ChatMessageAnnouncement": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The id of the message.",
                    "readOnly": true
                },
                "created": {
                    "type": "string",
                    "description": "The timestamp when the message was created.",
                    "readOnly": true
                },
                "updated": {
                    "type": "string",
                    "description": "The timestamp when the message was last updated.",
                    "readOnly": true
                },
                "conversation_id": {
                    "type": "integer",
                    "description": "The id of the conversation this message belongs to.",
                    "readOnly": true
                },
                "creator": {
                    "type": "object",
                    "description": "The user who initiated the action that caused this message to appear.",
                    "readOnly": true,
                    "$ref": "#/definitions/LabelUser"
                },
                "content": {
                    "type": "object",
                    "description": "The content of this message.",
                    "readOnly": true,
                    "$ref": "#/definitions/ChatMessageContent"
                }
            }
        },
        "ChatMessageAttachment": {
            "type": "object",
            "properties": {
                "attachment": {
                    "type": "object",
                    "description": "The attachment contained in this message.",
                    "readOnly": false,
                    "$ref": "#/definitions/BunqId"
                },
                "id": {
                    "type": "integer",
                    "description": "The id of the newly created chat message.",
                    "readOnly": true
                }
            }
        },
        "ChatMessageContent": {
            "type": "object",
            "properties": {
                "ChatMessageContentAnchorEvent": {
                    "type": "object",
                    "description": "",
                    "readOnly": true,
                    "$ref": "#/definitions/ChatMessageContentAnchorEvent"
                },
                "ChatMessageContentAttachment": {
                    "type": "object",
                    "description": "",
                    "readOnly": true,
                    "$ref": "#/definitions/ChatMessageContentAttachment"
                },
                "ChatMessageContentGeolocation": {
                    "type": "object",
                    "description": "",
                    "readOnly": true,
                    "$ref": "#/definitions/ChatMessageContentGeolocation"
                },
                "ChatMessageContentStatusConversationTitle": {
                    "type": "object",
                    "description": "",
                    "readOnly": true,
                    "$ref": "#/definitions/ChatMessageContentStatusConversationTitle"
                },
                "ChatMessageContentStatusConversation": {
                    "type": "object",
                    "description": "",
                    "readOnly": true,
                    "$ref": "#/definitions/ChatMessageContentStatusConversation"
                },
                "ChatMessageContentStatusMembership": {
                    "type": "object",
                    "description": "",
                    "readOnly": true,
                    "$ref": "#/definitions/ChatMessageContentStatusMembership"
                },
                "ChatMessageContentText": {
                    "type": "object",
                    "description": "",
                    "readOnly": true,
                    "$ref": "#/definitions/ChatMessageContentText"
                }
            }
        },
        "ChatMessageContentAnchorEvent": {
            "type": "object",
            "properties": {
                "anchored_object": {
                    "type": "object",
                    "description": "An anchored object. Can be one of: CardDebit, CardPinChange, CardResult, DraftPayment, IdealMerchantTransaction, Invoice, Payment, PaymentBatch, PromotionDisplay, RequestInquiryBatch, RequestInquiry, RequestResponse, ScheduledPaymentBatch, ScheduledPayment, ScheduledRequestInquiryBatch, ScheduledRequestInquiry, ScheduledInstance, ShareInviteBankInquiry, ShareInviteBankResponse, UserCredentialPasswordIp",
                    "readOnly": true,
                    "$ref": "#/definitions/AnchoredObject"
                }
            }
        },
        "ChatMessageContentAttachment": {
            "type": "object",
            "properties": {
                "attachment": {
                    "type": "object",
                    "description": "An attachment.",
                    "readOnly": true,
                    "$ref": "#/definitions/Attachment"
                }
            }
        },
        "ChatMessageContentGeolocation": {
            "type": "object",
            "properties": {
                "geolocation": {
                    "type": "object",
                    "description": "A geolocation, using WGS 84 coordinates.",
                    "readOnly": true,
                    "$ref": "#/definitions/Geolocation"
                }
            }
        },
        "ChatMessageContentStatusConversation": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Action which occurred over a conversation. Always CONVERSATION_CREATED",
                    "readOnly": true
                }
            }
        },
        "ChatMessageContentStatusConversationTitle": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string",
                    "description": "The new title of a conversation.",
                    "readOnly": true
                }
            }
        },
        "ChatMessageContentStatusMembership": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Action which occurred over a member. Could be MEMBER_ADDED or MEMBER_REMOVED",
                    "readOnly": true
                },
                "member": {
                    "type": "object",
                    "description": "The member over which the action has occurred.",
                    "readOnly": true,
                    "$ref": "#/definitions/LabelUser"
                }
            }
        },
        "ChatMessageContentText": {
            "type": "object",
            "properties": {
                "text": {
                    "type": "string",
                    "description": "The text of the message.",
                    "readOnly": true
                }
            }
        },
        "ChatMessageStatus": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The id of the message.",
                    "readOnly": true
                },
                "created": {
                    "type": "string",
                    "description": "The timestamp when the message was created.",
                    "readOnly": true
                },
                "updated": {
                    "type": "string",
                    "description": "The timestamp when the message was last updated.",
                    "readOnly": true
                },
                "conversation_id": {
                    "type": "integer",
                    "description": "The id of the conversation this message belongs to.",
                    "readOnly": true
                },
                "creator": {
                    "type": "object",
                    "description": "The user who initiated the action that caused this message to appear.",
                    "readOnly": true,
                    "$ref": "#/definitions/LabelUser"
                },
                "content": {
                    "type": "object",
                    "description": "The content of this message.",
                    "readOnly": true,
                    "$ref": "#/definitions/ChatMessageContent"
                }
            }
        },
        "ChatMessageText": {
            "type": "object",
            "properties": {
                "text": {
                    "type": "string",
                    "description": "The textual content of this message. Cannot be empty.",
                    "readOnly": false
                },
                "id": {
                    "type": "integer",
                    "description": "The id of the newly created chat message.",
                    "readOnly": true
                }
            }
        },
        "ChatMessageUser": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The id of the message.",
                    "readOnly": true
                },
                "created": {
                    "type": "string",
                    "description": "The timestamp when the message was created.",
                    "readOnly": true
                },
                "updated": {
                    "type": "string",
                    "description": "The timestamp when the message was last updated.",
                    "readOnly": true
                },
                "conversation_id": {
                    "type": "integer",
                    "description": "The id of the conversation this message belongs to.",
                    "readOnly": true
                },
                "creator": {
                    "type": "object",
                    "description": "The user who initiated the action that caused this message to appear.",
                    "readOnly": true,
                    "$ref": "#/definitions/LabelUser"
                },
                "displayed_sender": {
                    "type": "object",
                    "description": "The user displayed as the sender of this message.",
                    "readOnly": true,
                    "$ref": "#/definitions/LabelUser"
                },
                "content": {
                    "type": "object",
                    "description": "The content of this message.",
                    "readOnly": true,
                    "$ref": "#/definitions/ChatMessageContent"
                }
            }
        },
        "CoOwner": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "object",
                    "description": "The Alias of the co-owner.",
                    "readOnly": false,
                    "$ref": "#/definitions/LabelUser"
                },
                "status": {
                    "type": "string",
                    "description": "Can be: ACCEPTED, REJECTED, PENDING or REVOKED",
                    "readOnly": true
                }
            }
        },
        "Customer": {
            "type": "object",
            "properties": {
                "billing_account_id": {
                    "type": "string",
                    "description": "The primary billing account account's id.",
                    "readOnly": false
                },
                "id": {
                    "type": "integer",
                    "description": "The id of the customer.",
                    "readOnly": true
                },
                "created": {
                    "type": "string",
                    "description": "The timestamp of the customer object's creation.",
                    "readOnly": true
                },
                "updated": {
                    "type": "string",
                    "description": "The timestamp of the customer object's last update.",
                    "readOnly": true
                }
            }
        },
        "CustomerLimit": {
            "type": "object",
            "properties": {
                "limit_monetary_account": {
                    "type": "integer",
                    "description": "The limit of monetary accounts.",
                    "readOnly": true
                },
                "limit_card_debit_maestro": {
                    "type": "integer",
                    "description": "The limit of Maestro cards.",
                    "readOnly": true
                },
                "limit_card_debit_mastercard": {
                    "type": "integer",
                    "description": "The limit of MasterCard cards.",
                    "readOnly": true
                },
                "limit_card_debit_wildcard": {
                    "type": "integer",
                    "description": "The limit of wildcards, e.g. Maestro or MasterCard cards.",
                    "readOnly": true
                },
                "limit_card_debit_replacement": {
                    "type": "integer",
                    "description": "The limit of free replacement cards.",
                    "readOnly": true
                }
            }
        },
        "CustomerStatementExport": {
            "type": "object",
            "properties": {
                "statement_format": {
                    "type": "string",
                    "description": "The format of statement.",
                    "readOnly": false
                },
                "date_start": {
                    "type": "string",
                    "description": "The date from when this statement shows transactions.",
                    "readOnly": false
                },
                "date_end": {
                    "type": "string",
                    "description": "The date until which statement shows transactions.",
                    "readOnly": false
                },
                "regional_format": {
                    "type": "string",
                    "description": "The regional format of a CSV statement.",
                    "readOnly": false
                },
                "id": {
                    "type": "integer",
                    "description": "The id of the customer statement model.",
                    "readOnly": true
                },
                "created": {
                    "type": "string",
                    "description": "The timestamp of the statement model's creation.",
                    "readOnly": true
                },
                "updated": {
                    "type": "string",
                    "description": "The timestamp of the statement model's last update.",
                    "readOnly": true
                },
                "status": {
                    "type": "string",
                    "description": "The status of the export.",
                    "readOnly": true
                },
                "statement_number": {
                    "type": "integer",
                    "description": "MT940 Statement number. Unique per monetary account.",
                    "readOnly": true
                },
                "alias_monetary_account": {
                    "type": "object",
                    "description": "The monetary account for which this statement was created.",
                    "readOnly": true,
                    "$ref": "#/definitions/LabelMonetaryAccount"
                }
            }
        },
        "CustomerStatementExportContent": {
            "type": "object",
            "properties": {}
        },
        "Device": {
            "type": "object",
            "properties": {
                "DeviceServer": {
                    "type": "object",
                    "description": "",
                    "readOnly": true,
                    "$ref": "#/definitions/DeviceServer"
                }
            }
        },
        "DeviceServer": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the DeviceServer.",
                    "readOnly": false
                },
                "secret": {
                    "type": "string",
                    "description": "The API key. You can request an API key in the bunq app.",
                    "readOnly": false
                },
                "permitted_ips": {
                    "type": "array",
                    "description": "An array of IPs (v4 or v6) this DeviceServer will be able to do calls from. These will be linked to the API key.",
                    "readOnly": false,
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "The id of the DeviceServer as created on the server.",
                    "readOnly": true
                },
                "created": {
                    "type": "string",
                    "description": "The timestamp of the DeviceServer's creation.",
                    "readOnly": true
                },
                "updated": {
                    "type": "string",
                    "description": "The timestamp of the DeviceServer's last update.",
                    "readOnly": true
                },
                "ip": {
                    "type": "string",
                    "description": "The ip address which was used to create the DeviceServer.",
                    "readOnly": true
                },
                "status": {
                    "type": "string",
                    "description": "The status of the DeviceServer. Can be ACTIVE, BLOCKED, NEEDS_CONFIRMATION or OBSOLETE.",
                    "readOnly": true
                }
            }
        },
        "DraftPayment": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "description": "The status of the DraftPayment.",
                    "readOnly": false
                },
                "entries": {
                    "type": "array",
                    "description": "The entries in the DraftPayment.",
                    "readOnly": false,
                    "items": {
                        "$ref": "#/definitions/DraftPaymentEntry"
                    }
                },
                "previous_updated_timestamp": {
                    "type": "string",
                    "description": "The last updated_timestamp that you received for this DraftPayment. This needs to be provided to prevent race conditions.",
                    "readOnly": false
                },
                "number_of_required_accepts": {
                    "type": "integer",
                    "description": "The number of accepts that are required for the draft payment to receive status ACCEPTED. Currently only 1 is valid.",
                    "readOnly": false
                },
                "id": {
                    "type": "integer",
                    "description": "The id of the created DrafPayment.",
                    "readOnly": true
                },
                "monetary_account_id": {
                    "type": "integer",
                    "description": "The id of the MonetaryAccount the DraftPayment applies to.",
                    "readOnly": true
                },
                "user_alias_created": {
                    "type": "object",
                    "description": "The label of the User who created the DraftPayment.",
                    "readOnly": true,
                    "$ref": "#/definitions/LabelUser"
                },
                "responses": {
                    "type": "array",
                    "description": "All responses to this draft payment.",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/DraftPaymentResponse"
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The type of the DraftPayment.",
                    "readOnly": true
                },
                "object": {
                    "type": "object",
                    "description": "The Payment or PaymentBatch. This will only be present after the DraftPayment has been accepted.",
                    "readOnly": true,
                    "$ref": "#/definitions/DraftPaymentAnchorObject"
                },
                "request_reference_split_the_bill": {
                    "type": "array",
                    "description": "The reference to the object used for split the bill. Can be RequestInquiry or RequestInquiryBatch",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/RequestInquiryReference"
                    }
                }
            }
        },
        "DraftPaymentAnchorObject": {
            "type": "object",
            "properties": {
                "Payment": {
                    "type": "object",
                    "description": "",
                    "readOnly": true,
                    "$ref": "#/definitions/Payment"
                },
                "PaymentBatch": {
                    "type": "object",
                    "description": "",
                    "readOnly": true,
                    "$ref": "#/definitions/PaymentBatch"
                }
            }
        },
        "DraftPaymentEntry": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "object",
                    "description": "The amount of the payment.",
                    "readOnly": false,
                    "$ref": "#/definitions/Amount"
                },
                "counterparty_alias": {
                    "type": "object",
                    "description": "The LabelMonetaryAccount containing the public information of the other (counterparty) side of the DraftPayment.",
                    "readOnly": false,
                    "$ref": "#/definitions/LabelMonetaryAccount"
                },
                "description": {
                    "type": "string",
                    "description": "The description for the DraftPayment. Maximum 140 characters for DraftPayments to external IBANs, 9000 characters for DraftPayments to only other bunq MonetaryAccounts.",
                    "readOnly": false
                },
                "merchant_reference": {
                    "type": "string",
                    "description": "Optional data to be included with the Payment specific to the merchant.",
                    "readOnly": false
                },
                "attachment": {
                    "type": "array",
                    "description": "The Attachments attached to the DraftPayment.",
                    "readOnly": false,
                    "items": {
                        "$ref": "#/definitions/AttachmentMonetaryAccountPayment"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "The id of the draft payment entry.",
                    "readOnly": true
                },
                "alias": {
                    "type": "object",
                    "description": "The LabelMonetaryAccount containing the public information of 'this' (party) side of the DraftPayment.",
                    "readOnly": true,
                    "$ref": "#/definitions/LabelMonetaryAccount"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the draft payment entry.",
                    "readOnly": true
                }
            }
        },
        "DraftPaymentResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "description": "The status with which was responded.",
                    "readOnly": true
                },
                "user_alias_created": {
                    "type": "object",
                    "description": "The user that responded to the DraftPayment.",
                    "readOnly": true,
                    "$ref": "#/definitions/LabelUser"
                }
            }
        },
        "DraftShareInviteApiKey": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "description": "The status of the draft share invite. Can be USED, CANCELLED and PENDING.",
                    "readOnly": false
                },
                "sub_status": {
                    "type": "string",
                    "description": "The sub-status of the draft share invite. Can be NONE, ACCEPTED or REJECTED.",
                    "readOnly": false
                },
                "expiration": {
                    "type": "string",
                    "description": "The moment when this draft share invite expires.",
                    "readOnly": false
                },
                "user_alias_created": {
                    "type": "object",
                    "description": "The user who created the draft share invite.",
                    "readOnly": true,
                    "$ref": "#/definitions/LabelUser"
                },
                "draft_share_url": {
                    "type": "string",
                    "description": "The URL redirecting user to the draft share invite in the app. Only works on mobile devices.",
                    "readOnly": true
                },
                "api_key": {
                    "type": "string",
                    "description": "The API key generated for this DraftShareInviteApiKey.",
                    "readOnly": true
                },
                "id": {
                    "type": "integer",
                    "description": "The id of the newly created draft share invite.",
                    "readOnly": true
                }
            }
        },
        "DraftShareInviteApiKeyQrCodeContent": {
            "type": "object",
            "properties": {}
        },
        "DraftShareInviteBank": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "description": "The status of the draft share invite. Can be USED, CANCELLED and PENDING.",
                    "readOnly": false
                },
                "expiration": {
                    "type": "string",
                    "description": "The moment when this draft share invite expires.",
                    "readOnly": false
                },
                "draft_share_settings": {
                    "type": "object",
                    "description": "The draft share invite details.",
                    "readOnly": false,
                    "$ref": "#/definitions/DraftShareInviteEntry"
                },
                "user_alias_created": {
                    "type": "object",
                    "description": "The user who created the draft share invite.",
                    "readOnly": true,
                    "$ref": "#/definitions/LabelUser"
                },
                "share_invite_bank_response_id": {
                    "type": "integer",
                    "description": "The id of the share invite bank response this draft share belongs to.",
                    "readOnly": true
                },
                "draft_share_url": {
                    "type": "string",
                    "description": "The URL redirecting user to the draft share invite in the app. Only works on mobile devices.",
                    "readOnly": true
                },
                "id": {
                    "type": "integer",
                    "description": "The id of the newly created draft share invite.",
                    "readOnly": true
                }
            }
        },
        "DraftShareInviteBankQrCodeContent": {
            "type": "object",
            "properties": {}
        },
        "DraftShareInviteEntry": {
            "type": "object",
            "properties": {
                "share_detail": {
                    "type": "object",
                    "description": "The share details. Only one of these objects is returned.",
                    "readOnly": false,
                    "$ref": "#/definitions/ShareDetail"
                },
                "start_date": {
                    "type": "string",
                    "description": "The start date of this share.",
                    "readOnly": false
                },
                "end_date": {
                    "type": "string",
                    "description": "The expiration date of this share.",
                    "readOnly": false
                }
            }
        },
        "Error": {
            "type": "object",
            "properties": {
                "error_description": {
                    "type": "string",
                    "description": "The error description (in English).",
                    "readOnly": true
                },
                "error_description_translated": {
                    "type": "string",
                    "description": "The error description (in the user language).",
                    "readOnly": true
                }
            }
        },
        "ExportAnnualOverview": {
            "type": "object",
            "properties": {
                "year": {
                    "type": "integer",
                    "description": "The year for which the overview is.",
                    "readOnly": false
                },
                "id": {
                    "type": "integer",
                    "description": "The id of the annual overview as created on the server.",
                    "readOnly": true
                },
                "created": {
                    "type": "string",
                    "description": "The timestamp of the annual overview 's creation.",
                    "readOnly": true
                },
                "updated": {
                    "type": "string",
                    "description": "The timestamp of the annual overview 's last update.",
                    "readOnly": true
                },
                "alias_user": {
                    "type": "object",
                    "description": "The user to which this annual overview belongs.",
                    "readOnly": true,
                    "$ref": "#/definitions/LabelUser"
                }
            }
        },
        "ExportAnnualOverviewContent": {
            "type": "object",
            "properties": {}
        },
        "Geolocation": {
            "type": "object",
            "properties": {
                "latitude": {
                    "type": "integer",
                    "description": "The latitude for a geolocation restriction.",
                    "readOnly": false
                },
                "longitude": {
                    "type": "integer",
                    "description": "The longitude for a geolocation restriction.",
                    "readOnly": false
                },
                "altitude": {
                    "type": "integer",
                    "description": "The altitude for a geolocation restriction.",
                    "readOnly": false
                },
                "radius": {
                    "type": "integer",
                    "description": "The radius for a geolocation restriction.",
                    "readOnly": false
                }
            }
        },
        "IdealMerchantTransaction": {
            "type": "object",
            "properties": {
                "amount_requested": {
                    "type": "object",
                    "description": "The requested amount of money to add.",
                    "readOnly": false,
                    "$ref": "#/definitions/Amount"
                },
                "issuer": {
                    "type": "string",
                    "description": "The BIC of the issuer.",
                    "readOnly": false
                },
                "monetary_account_id": {
                    "type": "integer",
                    "description": "The id of the monetary account this ideal merchant transaction links to.",
                    "readOnly": true
                },
                "alias": {
                    "type": "object",
                    "description": "The alias of the monetary account to add money to.",
                    "readOnly": true,
                    "$ref": "#/definitions/LabelMonetaryAccount"
                },
                "counterparty_alias": {
                    "type": "object",
                    "description": "The alias of the monetary account the money comes from.",
                    "readOnly": true,
                    "$ref": "#/definitions/LabelMonetaryAccount"
                },
                "amount_guaranteed": {
                    "type": "object",
                    "description": "In case of a successful transaction, the amount of money that will be transferred.",
                    "readOnly": true,
                    "$ref": "#/definitions/Amount"
                },
                "expiration": {
                    "type": "string",
                    "description": "When the transaction will expire.",
                    "readOnly": true
                },
                "issuer_name": {
                    "type": "string",
                    "description": "The Name of the issuer.",
                    "readOnly": true
                },
                "issuer_authentication_url": {
                    "type": "string",
                    "description": "The URL to visit to ",
                    "readOnly": true
                },
                "purchase_identifier": {
                    "type": "string",
                    "description": "The 'purchase ID' of the iDEAL transaction.",
                    "readOnly": true
                },
                "status": {
                    "type": "string",
                    "description": "The status of the transaction.",
                    "readOnly": true
                },
                "status_timestamp": {
                    "type": "string",
                    "description": "When the status was last updated.",
                    "readOnly": true
                },
                "transaction_identifier": {
                    "type": "string",
                    "description": "The 'transaction ID' of the iDEAL transaction.",
                    "readOnly": true
                },
                "allow_chat": {
                    "type": "boolean",
                    "description": "Whether or not chat messages are allowed.",
                    "readOnly": true
                }
            }
        },
        "Image": {
            "type": "object",
            "properties": {
                "attachment_public_uuid": {
                    "type": "string",
                    "description": "The public UUID of the public attachment containing the image.",
                    "readOnly": true
                },
                "content_type": {
                    "type": "string",
                    "description": "The content-type as a MIME filetype.",
                    "readOnly": true
                },
                "height": {
                    "type": "integer",
                    "description": "The image height in pixels.",
                    "readOnly": true
                },
                "width": {
                    "type": "integer",
                    "description": "The image width in pixels.",
                    "readOnly": true
                }
            }
        },
        "InstallationServerPublicKey": {
            "type": "object",
            "properties": {
                "server_public_key": {
                    "type": "string",
                    "description": "The server's public key for this Installation.",
                    "readOnly": true
                }
            }
        },
        "Invoice": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "description": "The invoice status.",
                    "readOnly": false
                },
                "description": {
                    "type": "string",
                    "description": "The description provided by the admin.",
                    "readOnly": false
                },
                "external_url": {
                    "type": "string",
                    "description": "The external url provided by the admin.",
                    "readOnly": false
                },
                "id": {
                    "type": "integer",
                    "description": "The id of the invoice object.",
                    "readOnly": true
                },
                "created": {
                    "type": "string",
                    "description": "The timestamp of the invoice object's creation.",
                    "readOnly": true
                },
                "updated": {
                    "type": "string",
                    "description": "The timestamp of the invoice object's last update.",
                    "readOnly": true
                },
                "invoice_date": {
                    "type": "string",
                    "description": "The invoice date.",
                    "readOnly": true
                },
                "invoice_number": {
                    "type": "string",
                    "description": "The invoice number.",
                    "readOnly": true
                },
                "group": {
                    "type": "array",
                    "description": "The invoice item groups.",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/InvoiceItemGroup"
                    }
                },
                "total_vat_inclusive": {
                    "type": "object",
                    "description": "The total discounted item price including VAT.",
                    "readOnly": true,
                    "$ref": "#/definitions/Amount"
                },
                "total_vat_exclusive": {
                    "type": "object",
                    "description": "The total discounted item price excluding VAT.",
                    "readOnly": true,
                    "$ref": "#/definitions/Amount"
                },
                "total_vat": {
                    "type": "object",
                    "description": "The VAT on the total discounted item price.",
                    "readOnly": true,
                    "$ref": "#/definitions/Amount"
                },
                "alias": {
                    "type": "object",
                    "description": "The label that's displayed to the counterparty with the invoice. Includes user.",
                    "readOnly": true,
                    "$ref": "#/definitions/LabelMonetaryAccount"
                },
                "address": {
                    "type": "object",
                    "description": "The customer's address.",
                    "readOnly": true,
                    "$ref": "#/definitions/Address"
                },
                "counterparty_alias": {
                    "type": "object",
                    "description": "The label of the counterparty of the invoice. Includes user.",
                    "readOnly": true,
                    "$ref": "#/definitions/LabelMonetaryAccount"
                },
                "counterparty_address": {
                    "type": "object",
                    "description": "The company's address.",
                    "readOnly": true,
                    "$ref": "#/definitions/Address"
                },
                "chamber_of_commerce_number": {
                    "type": "string",
                    "description": "The company's chamber of commerce number.",
                    "readOnly": true
                },
                "vat_number": {
                    "type": "string",
                    "description": "The company's chamber of commerce number.",
                    "readOnly": true
                },
                "request_reference_split_the_bill": {
                    "type": "array",
                    "description": "The reference to the object used for split the bill. Can be RequestInquiry or RequestInquiryBatch",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/RequestInquiryReference"
                    }
                }
            }
        },
        "InvoiceByUser": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The id of the invoice object.",
                    "readOnly": true
                },
                "created": {
                    "type": "string",
                    "description": "The timestamp of the invoice object's creation.",
                    "readOnly": true
                },
                "updated": {
                    "type": "string",
                    "description": "The timestamp of the invoice object's last update.",
                    "readOnly": true
                },
                "invoice_date": {
                    "type": "string",
                    "description": "The invoice date.",
                    "readOnly": true
                },
                "invoice_number": {
                    "type": "string",
                    "description": "The invoice number.",
                    "readOnly": true
                },
                "status": {
                    "type": "string",
                    "description": "The invoice status.",
                    "readOnly": true
                },
                "group": {
                    "type": "array",
                    "description": "The invoice item groups.",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/InvoiceItemGroup"
                    }
                },
                "total_vat_inclusive": {
                    "type": "object",
                    "description": "The total discounted item price including VAT.",
                    "readOnly": true,
                    "$ref": "#/definitions/Amount"
                },
                "total_vat_exclusive": {
                    "type": "object",
                    "description": "The total discounted item price excluding VAT.",
                    "readOnly": true,
                    "$ref": "#/definitions/Amount"
                },
                "total_vat": {
                    "type": "object",
                    "description": "The VAT on the total discounted item price.",
                    "readOnly": true,
                    "$ref": "#/definitions/Amount"
                },
                "alias": {
                    "type": "object",
                    "description": "The label that's displayed to the counterparty with the invoice. Includes user.",
                    "readOnly": true,
                    "$ref": "#/definitions/LabelMonetaryAccount"
                },
                "address": {
                    "type": "object",
                    "description": "The customer's address.",
                    "readOnly": true,
                    "$ref": "#/definitions/Address"
                },
                "counterparty_alias": {
                    "type": "object",
                    "description": "The label of the counterparty of the invoice. Includes user.",
                    "readOnly": true,
                    "$ref": "#/definitions/LabelMonetaryAccount"
                },
                "counterparty_address": {
                    "type": "object",
                    "description": "The company's address.",
                    "readOnly": true,
                    "$ref": "#/definitions/Address"
                },
                "chamber_of_commerce_number": {
                    "type": "string",
                    "description": "The company's chamber of commerce number.",
                    "readOnly": true
                },
                "vat_number": {
                    "type": "string",
                    "description": "The company's chamber of commerce number.",
                    "readOnly": true
                }
            }
        },
        "InvoiceItem": {
            "type": "object",
            "properties": {
                "billing_date": {
                    "type": "string",
                    "description": "The billing date of the item.",
                    "readOnly": true
                },
                "type_description": {
                    "type": "string",
                    "description": "The price description.",
                    "readOnly": true
                },
                "type_description_translated": {
                    "type": "string",
                    "description": "The translated price description.",
                    "readOnly": true
                },
                "unit_vat_exclusive": {
                    "type": "object",
                    "description": "The unit item price excluding VAT.",
                    "readOnly": true,
                    "$ref": "#/definitions/Amount"
                },
                "unit_vat_inclusive": {
                    "type": "object",
                    "description": "The unit item price including VAT.",
                    "readOnly": true,
                    "$ref": "#/definitions/Amount"
                },
                "vat": {
                    "type": "integer",
                    "description": "The VAT tax fraction.",
                    "readOnly": true
                },
                "quantity": {
                    "type": "integer",
                    "description": "The number of items priced.",
                    "readOnly": true
                },
                "total_vat_exclusive": {
                    "type": "object",
                    "description": "The item price excluding VAT.",
                    "readOnly": true,
                    "$ref": "#/definitions/Amount"
                },
                "total_vat_inclusive": {
                    "type": "object",
                    "description": "The item price including VAT.",
                    "readOnly": true,
                    "$ref": "#/definitions/Amount"
                }
            }
        },
        "InvoiceItemGroup": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "The type of the invoice item group.",
                    "readOnly": true
                },
                "type_description": {
                    "type": "string",
                    "description": "The description of the type of the invoice item group.",
                    "readOnly": true
                },
                "type_description_translated": {
                    "type": "string",
                    "description": "The translated description of the type of the invoice item group.",
                    "readOnly": true
                },
                "instance_description": {
                    "type": "string",
                    "description": "The identifier of the invoice item group.",
                    "readOnly": true
                },
                "product_vat_exclusive": {
                    "type": "object",
                    "description": "The unit item price excluding VAT.",
                    "readOnly": true,
                    "$ref": "#/definitions/Amount"
                },
                "product_vat_inclusive": {
                    "type": "object",
                    "description": "The unit item price including VAT.",
                    "readOnly": true,
                    "$ref": "#/definitions/Amount"
                },
                "item": {
                    "type": "object",
                    "description": "The invoice items in the group.",
                    "readOnly": true,
                    "$ref": "#/definitions/InvoiceItem"
                }
            }
        },
        "Issuer": {
            "type": "object",
            "properties": {
                "bic": {
                    "type": "string",
                    "description": "The BIC code.",
                    "readOnly": false
                },
                "name": {
                    "type": "string",
                    "description": "The name of the bank.",
                    "readOnly": false
                }
            }
        },
        "LabelCard": {
            "type": "object",
            "properties": {
                "uuid": {
                    "type": "string",
                    "description": "The public UUID.",
                    "readOnly": true
                },
                "type": {
                    "type": "string",
                    "description": "The type of the card.",
                    "readOnly": true
                },
                "second_line": {
                    "type": "string",
                    "description": "The second line on the card.",
                    "readOnly": true
                },
                "expiry_date": {
                    "type": "string",
                    "description": "The date this card will expire.",
                    "readOnly": true
                },
                "status": {
                    "type": "string",
                    "description": "The status of the card.",
                    "readOnly": true
                },
                "label_user": {
                    "type": "object",
                    "description": "The owner of this card.",
                    "readOnly": true,
                    "$ref": "#/definitions/LabelUser"
                }
            }
        },
        "LabelMonetaryAccount": {
            "type": "object",
            "properties": {
                "iban": {
                    "type": "string",
                    "description": "The IBAN of the monetary account.",
                    "readOnly": true
                },
                "display_name": {
                    "type": "string",
                    "description": "The name to display with this monetary account.",
                    "readOnly": true
                },
                "avatar": {
                    "type": "object",
                    "description": "The avatar of the monetary account.",
                    "readOnly": true,
                    "$ref": "#/definitions/Avatar"
                },
                "label_user": {
                    "type": "object",
                    "description": "The user this monetary account belongs to.",
                    "readOnly": true,
                    "$ref": "#/definitions/LabelUser"
                },
                "country": {
                    "type": "string",
                    "description": "The country of the user. Formatted as a ISO 3166-1 alpha-2 country code.",
                    "readOnly": true
                },
                "bunq_me": {
                    "type": "object",
                    "description": "Bunq.me pointer with type and value.",
                    "readOnly": true,
                    "$ref": "#/definitions/Pointer"
                },
                "is_light": {
                    "type": "boolean",
                    "description": "Whether or not the monetary account is light.",
                    "readOnly": true
                },
                "swift_bic": {
                    "type": "string",
                    "description": "The BIC used for a SWIFT payment.",
                    "readOnly": true
                },
                "swift_account_number": {
                    "type": "string",
                    "description": "The account number used for a SWIFT payment. May or may not be an IBAN.",
                    "readOnly": true
                }
            }
        },
        "LabelUser": {
            "type": "object",
            "properties": {
                "uuid": {
                    "type": "string",
                    "description": "The public UUID of the label-user.",
                    "readOnly": false
                },
                "display_name": {
                    "type": "string",
                    "description": "The name to be displayed for this user, as it was given on the request.",
                    "readOnly": false
                },
                "country": {
                    "type": "string",
                    "description": "The country of the user. 000 stands for \"unknown\"",
                    "readOnly": false
                },
                "avatar": {
                    "type": "object",
                    "description": "The current avatar of the user.",
                    "readOnly": true,
                    "$ref": "#/definitions/Avatar"
                },
                "public_nick_name": {
                    "type": "string",
                    "description": "The current nickname of the user.",
                    "readOnly": true
                }
            }
        },
        "MasterCardAction": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The id of the MastercardAction.",
                    "readOnly": true
                },
                "monetary_account_id": {
                    "type": "integer",
                    "description": "The id of the monetary account this action links to.",
                    "readOnly": true
                },
                "card_id": {
                    "type": "integer",
                    "description": "The id of the card this action links to.",
                    "readOnly": true
                },
                "amount_local": {
                    "type": "object",
                    "description": "The amount of the transaction in local currency.",
                    "readOnly": true,
                    "$ref": "#/definitions/Amount"
                },
                "amount_billing": {
                    "type": "object",
                    "description": "The amount of the transaction in the monetary account's currency.",
                    "readOnly": true,
                    "$ref": "#/definitions/Amount"
                },
                "amount_original_local": {
                    "type": "object",
                    "description": "The original amount in local currency.",
                    "readOnly": true,
                    "$ref": "#/definitions/Amount"
                },
                "amount_original_billing": {
                    "type": "object",
                    "description": "The original amount in the monetary account's currency.",
                    "readOnly": true,
                    "$ref": "#/definitions/Amount"
                },
                "amount_fee": {
                    "type": "object",
                    "description": "The fee amount as charged by the merchant, if applicable.",
                    "readOnly": true,
                    "$ref": "#/definitions/Amount"
                },
                "decision": {
                    "type": "string",
                    "description": "Why the transaction was denied, if it was denied, or just ALLOWED.",
                    "readOnly": true
                },
                "decision_description": {
                    "type": "string",
                    "description": "Empty if allowed, otherwise a textual explanation of why it was denied.",
                    "readOnly": true
                },
                "decision_description_translated": {
                    "type": "string",
                    "description": "Empty if allowed, otherwise a textual explanation of why it was denied in user's language.",
                    "readOnly": true
                },
                "description": {
                    "type": "string",
                    "description": "The description for this transaction to display.",
                    "readOnly": true
                },
                "authorisation_status": {
                    "type": "string",
                    "description": "The status in the authorisation process.",
                    "readOnly": true
                },
                "authorisation_type": {
                    "type": "string",
                    "description": "The type of transaction that was delivered using the card.",
                    "readOnly": true
                },
                "pan_entry_mode_user": {
                    "type": "string",
                    "description": "The type of entry mode the user used. Can be 'ATM', 'ICC', 'MAGNETIC_STRIPE' or 'E_COMMERCE'.",
                    "readOnly": true
                },
                "city": {
                    "type": "string",
                    "description": "The city where the message originates from as announced by the terminal.",
                    "readOnly": true
                },
                "alias": {
                    "type": "object",
                    "description": "The monetary account label of the account that this action is created for.",
                    "readOnly": true,
                    "$ref": "#/definitions/LabelMonetaryAccount"
                },
                "counterparty_alias": {
                    "type": "object",
                    "description": "The monetary account label of the counterparty.",
                    "readOnly": true,
                    "$ref": "#/definitions/LabelMonetaryAccount"
                },
                "label_card": {
                    "type": "object",
                    "description": "The label of the card.",
                    "readOnly": true,
                    "$ref": "#/definitions/LabelCard"
                },
                "token_status": {
                    "type": "string",
                    "description": "If this is a tokenisation action, this shows the status of the token.",
                    "readOnly": true
                },
                "reservation_expiry_time": {
                    "type": "string",
                    "description": "If this is a reservation, the moment the reservation will expire.",
                    "readOnly": true
                },
                "applied_limit": {
                    "type": "string",
                    "description": "The type of the limit applied to validate if this MasterCardAction was within the spending limits. The returned string matches the limit types as defined in the card endpoint.",
                    "readOnly": true
                },
                "allow_chat": {
                    "type": "boolean",
                    "description": "Whether or not chat messages are allowed.",
                    "readOnly": true
                },
                "eligible_whitelist_id": {
                    "type": "integer",
                    "description": "The whitelist id for this mastercard action or null.",
                    "readOnly": true
                },
                "secure_code_id": {
                    "type": "integer",
                    "description": "The secure code id for this mastercard action or null.",
                    "readOnly": true
                },
                "wallet_provider_id": {
                    "type": "string",
                    "description": "The ID of the wallet provider as defined by MasterCard. 420 = bunq Android app with Tap&Pay; 103 = Apple Pay.",
                    "readOnly": true
                },
                "request_reference_split_the_bill": {
                    "type": "array",
                    "description": "The reference to the object used for split the bill. Can be RequestInquiry or RequestInquiryBatch",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/RequestInquiryReference"
                    }
                }
            }
        },
        "MonetaryAccount": {
            "type": "object",
            "properties": {
                "MonetaryAccountBank": {
                    "type": "object",
                    "description": "",
                    "readOnly": true,
                    "$ref": "#/definitions/MonetaryAccountBank"
                },
                "MonetaryAccountJoint": {
                    "type": "object",
                    "description": "",
                    "readOnly": true,
                    "$ref": "#/definitions/MonetaryAccountJoint"
                },
                "MonetaryAccountLight": {
                    "type": "object",
                    "description": "",
                    "readOnly": true,
                    "$ref": "#/definitions/MonetaryAccountLight"
                }
            }
        },
        "MonetaryAccountBank": {
            "type": "object",
            "properties": {
                "currency": {
                    "type": "string",
                    "description": "The currency of the MonetaryAccountBank as an ISO 4217 formatted currency code.",
                    "readOnly": false
                },
                "description": {
                    "type": "string",
                    "description": "The description of the MonetaryAccountBank. Defaults to 'bunq account'.",
                    "readOnly": false
                },
                "daily_limit": {
                    "type": "object",
                    "description": "The daily spending limit Amount of the MonetaryAccountBank. Defaults to 1000 EUR. Currency must match the MonetaryAccountBank's currency. Limited to 10000 EUR.",
                    "readOnly": false,
                    "$ref": "#/definitions/Amount"
                },
                "avatar_uuid": {
                    "type": "string",
                    "description": "The UUID of the Avatar of the MonetaryAccountBank.",
                    "readOnly": false
                },
                "status": {
                    "type": "string",
                    "description": "The status of the MonetaryAccountBank. Can be: ACTIVE, BLOCKED, CANCELLED or PENDING_REOPEN",
                    "readOnly": false
                },
                "sub_status": {
                    "type": "string",
                    "description": "The sub-status of the MonetaryAccountBank providing extra information regarding the status. Will be NONE for ACTIVE or PENDING_REOPEN, COMPLETELY or ONLY_ACCEPTING_INCOMING for BLOCKED and REDEMPTION_INVOLUNTARY, REDEMPTION_VOLUNTARY or PERMANENT for CANCELLED.",
                    "readOnly": false
                },
                "reason": {
                    "type": "string",
                    "description": "The reason for voluntarily cancelling (closing) the MonetaryAccountBank, can only be OTHER.",
                    "readOnly": false
                },
                "reason_description": {
                    "type": "string",
                    "description": "The optional free-form reason for voluntarily cancelling (closing) the MonetaryAccountBank. Can be any user provided message.",
                    "readOnly": false
                },
                "notification_filters": {
                    "type": "array",
                    "description": "The types of notifications that will result in a push notification or URL callback for this MonetaryAccountBank.",
                    "readOnly": false,
                    "items": {
                        "$ref": "#/definitions/NotificationFilter"
                    }
                },
                "setting": {
                    "type": "object",
                    "description": "The settings of the MonetaryAccountBank.",
                    "readOnly": false,
                    "$ref": "#/definitions/MonetaryAccountSetting"
                },
                "id": {
                    "type": "integer",
                    "description": "The id of the MonetaryAccountBank.",
                    "readOnly": true
                },
                "created": {
                    "type": "string",
                    "description": "The timestamp of the MonetaryAccountBank's creation.",
                    "readOnly": true
                },
                "updated": {
                    "type": "string",
                    "description": "The timestamp of the MonetaryAccountBank's last update.",
                    "readOnly": true
                },
                "avatar": {
                    "type": "object",
                    "description": "The Avatar of the MonetaryAccountBank.",
                    "readOnly": true,
                    "$ref": "#/definitions/Avatar"
                },
                "daily_spent": {
                    "type": "object",
                    "description": "Total Amount of money spent today. Timezone aware.",
                    "readOnly": true,
                    "$ref": "#/definitions/Amount"
                },
                "overdraft_limit": {
                    "type": "object",
                    "description": "The maximum Amount the MonetaryAccountBank can be 'in the red'.",
                    "readOnly": true,
                    "$ref": "#/definitions/Amount"
                },
                "balance": {
                    "type": "object",
                    "description": "The current balance Amount of the MonetaryAccountBank.",
                    "readOnly": true,
                    "$ref": "#/definitions/Amount"
                },
                "alias": {
                    "type": "array",
                    "description": "The Aliases for the MonetaryAccountBank.",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Pointer"
                    }
                },
                "public_uuid": {
                    "type": "string",
                    "description": "The MonetaryAccountBank's public UUID.",
                    "readOnly": true
                },
                "user_id": {
                    "type": "integer",
                    "description": "The id of the User who owns the MonetaryAccountBank.",
                    "readOnly": true
                },
                "monetary_account_profile": {
                    "type": "object",
                    "description": "The profile of the account.",
                    "readOnly": true,
                    "$ref": "#/definitions/MonetaryAccountProfile"
                }
            }
        },
        "MonetaryAccountJoint": {
            "type": "object",
            "properties": {
                "currency": {
                    "type": "string",
                    "description": "The currency of the MonetaryAccountJoint as an ISO 4217 formatted currency code.",
                    "readOnly": false
                },
                "description": {
                    "type": "string",
                    "description": "The description of the MonetaryAccountJoint. Defaults to 'bunq account'.",
                    "readOnly": false
                },
                "daily_limit": {
                    "type": "object",
                    "description": "The daily spending limit Amount of the MonetaryAccountJoint. Defaults to 1000 EUR. Currency must match the MonetaryAccountJoint's currency. Limited to 10000 EUR.",
                    "readOnly": false,
                    "$ref": "#/definitions/Amount"
                },
                "overdraft_limit": {
                    "type": "object",
                    "description": "The maximum Amount the MonetaryAccountJoint can be 'in the red'.",
                    "readOnly": false,
                    "$ref": "#/definitions/Amount"
                },
                "alias": {
                    "type": "array",
                    "description": "The Aliases for the MonetaryAccountJoint.",
                    "readOnly": false,
                    "items": {
                        "$ref": "#/definitions/Pointer"
                    }
                },
                "avatar_uuid": {
                    "type": "string",
                    "description": "The UUID of the Avatar of the MonetaryAccountJoint.",
                    "readOnly": false
                },
                "status": {
                    "type": "string",
                    "description": "The status of the MonetaryAccountJoint. Can be: ACTIVE, BLOCKED, CANCELLED or PENDING_REOPEN",
                    "readOnly": false
                },
                "sub_status": {
                    "type": "string",
                    "description": "The sub-status of the MonetaryAccountJoint providing extra information regarding the status. Will be NONE for ACTIVE or PENDING_REOPEN, COMPLETELY or ONLY_ACCEPTING_INCOMING for BLOCKED and REDEMPTION_INVOLUNTARY, REDEMPTION_VOLUNTARY or PERMANENT for CANCELLED.",
                    "readOnly": false
                },
                "reason": {
                    "type": "string",
                    "description": "The reason for voluntarily cancelling (closing) the MonetaryAccountJoint, can only be OTHER.",
                    "readOnly": false
                },
                "reason_description": {
                    "type": "string",
                    "description": "The optional free-form reason for voluntarily cancelling (closing) the MonetaryAccountJoint. Can be any user provided message.",
                    "readOnly": false
                },
                "all_co_owner": {
                    "type": "array",
                    "description": "The users the account will be joint with.",
                    "readOnly": false,
                    "items": {
                        "$ref": "#/definitions/CoOwner"
                    }
                },
                "notification_filters": {
                    "type": "array",
                    "description": "The types of notifications that will result in a push notification or URL callback for this MonetaryAccountJoint.",
                    "readOnly": false,
                    "items": {
                        "$ref": "#/definitions/NotificationFilter"
                    }
                },
                "setting": {
                    "type": "object",
                    "description": "The settings of the MonetaryAccountJoint.",
                    "readOnly": false,
                    "$ref": "#/definitions/MonetaryAccountSetting"
                },
                "id": {
                    "type": "integer",
                    "description": "The id of the MonetaryAccountJoint.",
                    "readOnly": true
                },
                "created": {
                    "type": "string",
                    "description": "The timestamp of the MonetaryAccountJoint's creation.",
                    "readOnly": true
                },
                "updated": {
                    "type": "string",
                    "description": "The timestamp of the MonetaryAccountJoint's last update.",
                    "readOnly": true
                },
                "avatar": {
                    "type": "object",
                    "description": "The Avatar of the MonetaryAccountJoint.",
                    "readOnly": true,
                    "$ref": "#/definitions/Avatar"
                },
                "daily_spent": {
                    "type": "object",
                    "description": "Total Amount of money spent today. Timezone aware.",
                    "readOnly": true,
                    "$ref": "#/definitions/Amount"
                },
                "balance": {
                    "type": "object",
                    "description": "The current balance Amount of the MonetaryAccountJoint.",
                    "readOnly": true,
                    "$ref": "#/definitions/Amount"
                },
                "public_uuid": {
                    "type": "string",
                    "description": "The MonetaryAccountJoint's public UUID.",
                    "readOnly": true
                },
                "user_id": {
                    "type": "integer",
                    "description": "The id of the User who owns the MonetaryAccountJoint.",
                    "readOnly": true
                },
                "monetary_account_profile": {
                    "type": "object",
                    "description": "The profile of the account.",
                    "readOnly": true,
                    "$ref": "#/definitions/MonetaryAccountProfile"
                }
            }
        },
        "MonetaryAccountLight": {
            "type": "object",
            "properties": {
                "currency": {
                    "type": "string",
                    "description": "The currency of the MonetaryAccountLight as an ISO 4217 formatted currency code.",
                    "readOnly": false
                },
                "description": {
                    "type": "string",
                    "description": "The description of the MonetaryAccountLight. Defaults to 'bunq account'.",
                    "readOnly": false
                },
                "daily_limit": {
                    "type": "object",
                    "description": "The daily spending limit Amount of the MonetaryAccountLight. Defaults to 1000 EUR. Currency must match the MonetaryAccountLight's currency. Limited to 10000 EUR.",
                    "readOnly": false,
                    "$ref": "#/definitions/Amount"
                },
                "avatar_uuid": {
                    "type": "string",
                    "description": "The UUID of the Avatar of the MonetaryAccountLight.",
                    "readOnly": false
                },
                "status": {
                    "type": "string",
                    "description": "The status of the MonetaryAccountLight. Can be: ACTIVE, BLOCKED, CANCELLED or PENDING_REOPEN",
                    "readOnly": false
                },
                "sub_status": {
                    "type": "string",
                    "description": "The sub-status of the MonetaryAccountLight providing extra information regarding the status. Will be NONE for ACTIVE or PENDING_REOPEN, COMPLETELY or ONLY_ACCEPTING_INCOMING for BLOCKED and REDEMPTION_INVOLUNTARY, REDEMPTION_VOLUNTARY or PERMANENT for CANCELLED.",
                    "readOnly": false
                },
                "reason": {
                    "type": "string",
                    "description": "The reason for voluntarily cancelling (closing) the MonetaryAccountBank, can only be OTHER.",
                    "readOnly": false
                },
                "reason_description": {
                    "type": "string",
                    "description": "The optional free-form reason for voluntarily cancelling (closing) the MonetaryAccountBank. Can be any user provided message.",
                    "readOnly": false
                },
                "notification_filters": {
                    "type": "array",
                    "description": "The types of notifications that will result in a push notification or URL callback for this MonetaryAccountLight.",
                    "readOnly": false,
                    "items": {
                        "$ref": "#/definitions/NotificationFilter"
                    }
                },
                "setting": {
                    "type": "object",
                    "description": "The settings of the MonetaryAccountLight.",
                    "readOnly": false,
                    "$ref": "#/definitions/MonetaryAccountSetting"
                },
                "id": {
                    "type": "integer",
                    "description": "The id of the MonetaryAccountLight.",
                    "readOnly": true
                },
                "created": {
                    "type": "string",
                    "description": "The timestamp of the MonetaryAccountLight's creation.",
                    "readOnly": true
                },
                "updated": {
                    "type": "string",
                    "description": "The timestamp of the MonetaryAccountLight's last update.",
                    "readOnly": true
                },
                "avatar": {
                    "type": "object",
                    "description": "The Avatar of the MonetaryAccountLight.",
                    "readOnly": true,
                    "$ref": "#/definitions/Avatar"
                },
                "daily_spent": {
                    "type": "object",
                    "description": "Total Amount of money spent today. Timezone aware.",
                    "readOnly": true,
                    "$ref": "#/definitions/Amount"
                },
                "balance": {
                    "type": "object",
                    "description": "The current balance Amount of the MonetaryAccountLight.",
                    "readOnly": true,
                    "$ref": "#/definitions/Amount"
                },
                "alias": {
                    "type": "array",
                    "description": "The Aliases for the MonetaryAccountLight.",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Pointer"
                    }
                },
                "public_uuid": {
                    "type": "string",
                    "description": "The MonetaryAccountLight's public UUID.",
                    "readOnly": true
                },
                "user_id": {
                    "type": "integer",
                    "description": "The id of the User who owns the MonetaryAccountLight.",
                    "readOnly": true
                },
                "balance_maximum": {
                    "type": "object",
                    "description": "The maximum balance Amount of the MonetaryAccountLight.",
                    "readOnly": true,
                    "$ref": "#/definitions/Amount"
                },
                "budget_month_used": {
                    "type": "object",
                    "description": "The amount of the monthly budget used.",
                    "readOnly": true,
                    "$ref": "#/definitions/Amount"
                },
                "budget_month_maximum": {
                    "type": "object",
                    "description": "The total amount of the monthly budget.",
                    "readOnly": true,
                    "$ref": "#/definitions/Amount"
                },
                "budget_year_used": {
                    "type": "object",
                    "description": "The amount of the yearly budget used.",
                    "readOnly": true,
                    "$ref": "#/definitions/Amount"
                },
                "budget_year_maximum": {
                    "type": "object",
                    "description": "The total amount of the yearly budget.",
                    "readOnly": true,
                    "$ref": "#/definitions/Amount"
                },
                "budget_withdrawal_year_used": {
                    "type": "object",
                    "description": "The amount of the yearly withdrawal budget used.",
                    "readOnly": true,
                    "$ref": "#/definitions/Amount"
                },
                "budget_withdrawal_year_maximum": {
                    "type": "object",
                    "description": "The total amount of the yearly withdrawal budget.",
                    "readOnly": true,
                    "$ref": "#/definitions/Amount"
                }
            }
        },
        "MonetaryAccountProfile": {
            "type": "object",
            "properties": {
                "profile_fill": {
                    "type": "object",
                    "description": "The profile settings for triggering the fill of a monetary account.",
                    "readOnly": false,
                    "$ref": "#/definitions/MonetaryAccountProfileFill"
                },
                "profile_drain": {
                    "type": "object",
                    "description": "The profile settings for moving excesses to a savings account",
                    "readOnly": false,
                    "$ref": "#/definitions/MonetaryAccountProfileDrain"
                }
            }
        },
        "MonetaryAccountProfileDrain": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "description": "The status of the profile.",
                    "readOnly": false
                },
                "balance_preferred": {
                    "type": "object",
                    "description": "The goal balance.",
                    "readOnly": false,
                    "$ref": "#/definitions/Amount"
                },
                "balance_threshold_high": {
                    "type": "object",
                    "description": "The high threshold balance.",
                    "readOnly": false,
                    "$ref": "#/definitions/Amount"
                },
                "savings_account_alias": {
                    "type": "object",
                    "description": "The savings monetary account.",
                    "readOnly": false,
                    "$ref": "#/definitions/LabelMonetaryAccount"
                }
            }
        },
        "MonetaryAccountProfileFill": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "description": "The status of the profile.",
                    "readOnly": false
                },
                "balance_preferred": {
                    "type": "object",
                    "description": "The goal balance.",
                    "readOnly": false,
                    "$ref": "#/definitions/Amount"
                },
                "balance_threshold_low": {
                    "type": "object",
                    "description": "The low threshold balance.",
                    "readOnly": false,
                    "$ref": "#/definitions/Amount"
                },
                "method_fill": {
                    "type": "string",
                    "description": "The method used to fill the monetary account. Currently only iDEAL is supported, and it is the default one.",
                    "readOnly": false
                },
                "issuer": {
                    "type": "object",
                    "description": "The bank the fill is supposed to happen from, with BIC and bank name.",
                    "readOnly": false,
                    "$ref": "#/definitions/Issuer"
                }
            }
        },
        "MonetaryAccountSetting": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "string",
                    "description": "The color chosen for the MonetaryAccount.",
                    "readOnly": false
                },
                "default_avatar_status": {
                    "type": "string",
                    "description": "The status of the avatar. Can be either AVATAR_DEFAULT, AVATAR_CUSTOM or AVATAR_UNDETERMINED.",
                    "readOnly": false
                },
                "restriction_chat": {
                    "type": "string",
                    "description": "The chat restriction. Possible values are ALLOW_INCOMING or BLOCK_INCOMING",
                    "readOnly": false
                }
            }
        },
        "NotificationFilter": {
            "type": "object",
            "properties": {
                "notification_delivery_method": {
                    "type": "string",
                    "description": "The delivery method via which notifications that match this notification filter will be delivered. Possible choices are PUSH for delivery via push notification and URL for delivery via URL callback.",
                    "readOnly": false
                },
                "notification_target": {
                    "type": "string",
                    "description": "The target of notifications that match this notification filter. For URL notification filters this is the URL to which the callback will be made. For PUSH notifications filters this should always be null.",
                    "readOnly": false
                },
                "category": {
                    "type": "string",
                    "description": "The notification category that will match this notification filter. Possible choices are BILLING, CARD_TRANSACTION_FAILED, CARD_TRANSACTION_SUCCESSFUL, CHAT, DRAFT_PAYMENT, IDEAL, SOFORT, MONETARY_ACCOUNT_PROFILE, MUTATION, PAYMENT, PROMOTION, REQUEST, SCHEDULE_RESULT, SCHEDULE_STATUS, SHARE, SUPPORT, TAB_RESULT, USER_APPROVAL.",
                    "readOnly": false
                }
            }
        },
        "Payment": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "object",
                    "description": "The Amount transferred by the Payment. Will be negative for outgoing Payments and positive for incoming Payments (relative to the MonetaryAccount indicated by monetary_account_id).",
                    "readOnly": false,
                    "$ref": "#/definitions/Amount"
                },
                "counterparty_alias": {
                    "type": "object",
                    "description": "The LabelMonetaryAccount containing the public information of the other (counterparty) side of the Payment.",
                    "readOnly": false,
                    "$ref": "#/definitions/LabelMonetaryAccount"
                },
                "description": {
                    "type": "string",
                    "description": "The description for the Payment. Maximum 140 characters for Payments to external IBANs, 9000 characters for Payments to only other bunq MonetaryAccounts.",
                    "readOnly": false
                },
                "attachment": {
                    "type": "array",
                    "description": "The Attachments attached to the Payment.",
                    "readOnly": false,
                    "items": {
                        "$ref": "#/definitions/AttachmentMonetaryAccountPayment"
                    }
                },
                "merchant_reference": {
                    "type": "string",
                    "description": "Optional data included with the Payment specific to the merchant.",
                    "readOnly": false
                },
                "id": {
                    "type": "integer",
                    "description": "The id of the created Payment.",
                    "readOnly": true
                },
                "created": {
                    "type": "string",
                    "description": "The timestamp when the Payment was done.",
                    "readOnly": true
                },
                "updated": {
                    "type": "string",
                    "description": "The timestamp when the Payment was last updated (will be updated when chat messages are received).",
                    "readOnly": true
                },
                "monetary_account_id": {
                    "type": "integer",
                    "description": "The id of the MonetaryAccount the Payment was made to or from (depending on whether this is an incoming or outgoing Payment).",
                    "readOnly": true
                },
                "alias": {
                    "type": "object",
                    "description": "The LabelMonetaryAccount containing the public information of 'this' (party) side of the Payment.",
                    "readOnly": true,
                    "$ref": "#/definitions/LabelMonetaryAccount"
                },
                "type": {
                    "type": "string",
                    "description": "The type of Payment, can be BUNQ, EBA_SCT, EBA_SDD, IDEAL, SWIFT or FIS (card).",
                    "readOnly": true
                },
                "sub_type": {
                    "type": "string",
                    "description": "The sub-type of the Payment, can be PAYMENT, WITHDRAWAL, REVERSAL, REQUEST, BILLING, SCT, SDD or NLO.",
                    "readOnly": true
                },
                "bunqto_status": {
                    "type": "string",
                    "description": "The status of the bunq.to payment.",
                    "readOnly": true
                },
                "bunqto_sub_status": {
                    "type": "string",
                    "description": "The sub status of the bunq.to payment.",
                    "readOnly": true
                },
                "bunqto_share_url": {
                    "type": "string",
                    "description": "The status of the bunq.to payment.",
                    "readOnly": true
                },
                "bunqto_expiry": {
                    "type": "string",
                    "description": "When bunq.to payment is about to expire.",
                    "readOnly": true
                },
                "bunqto_time_responded": {
                    "type": "string",
                    "description": "The timestamp of when the bunq.to payment was responded to.",
                    "readOnly": true
                },
                "batch_id": {
                    "type": "integer",
                    "description": "The id of the PaymentBatch if this Payment was part of one.",
                    "readOnly": true
                },
                "scheduled_id": {
                    "type": "integer",
                    "description": "The id of the JobScheduled if the Payment was scheduled.",
                    "readOnly": true
                },
                "address_shipping": {
                    "type": "object",
                    "description": "A shipping Address provided with the Payment, currently unused.",
                    "readOnly": true,
                    "$ref": "#/definitions/Address"
                },
                "address_billing": {
                    "type": "object",
                    "description": "A billing Address provided with the Payment, currently unused.",
                    "readOnly": true,
                    "$ref": "#/definitions/Address"
                },
                "geolocation": {
                    "type": "object",
                    "description": "The Geolocation where the Payment was done from.",
                    "readOnly": true,
                    "$ref": "#/definitions/Geolocation"
                },
                "allow_chat": {
                    "type": "boolean",
                    "description": "Whether or not chat messages are allowed.",
                    "readOnly": true
                },
                "request_reference_split_the_bill": {
                    "type": "array",
                    "description": "The reference to the object used for split the bill. Can be RequestInquiry or RequestInquiryBatch",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/RequestInquiryReference"
                    }
                }
            }
        },
        "PaymentBatch": {
            "type": "object",
            "properties": {
                "payments": {
                    "type": "array",
                    "description": "The list of mutations that were made.",
                    "readOnly": false,
                    "items": {
                        "$ref": "#/definitions/Payment"
                    }
                }
            }
        },
        "PaymentChat": {
            "type": "object",
            "properties": {
                "last_read_message_id": {
                    "type": "integer",
                    "description": "The id of the last read message.",
                    "readOnly": false
                },
                "id": {
                    "type": "integer",
                    "description": "The id of the chat conversation.",
                    "readOnly": true
                },
                "created": {
                    "type": "string",
                    "description": "The timestamp when the chat was created.",
                    "readOnly": true
                },
                "updated": {
                    "type": "string",
                    "description": "The timestamp when the chat was last updated.",
                    "readOnly": true
                },
                "unread_message_count": {
                    "type": "integer",
                    "description": "The total number of unread messages in this conversation.",
                    "readOnly": true
                }
            }
        },
        "PermittedDevice": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the device that may use the credential.",
                    "readOnly": true
                },
                "ip": {
                    "type": "string",
                    "description": "The IP address of the device that may use the credential.",
                    "readOnly": true
                }
            }
        },
        "PermittedIp": {
            "type": "object",
            "properties": {
                "ip": {
                    "type": "string",
                    "description": "The IP address.",
                    "readOnly": false
                },
                "status": {
                    "type": "string",
                    "description": "The status of the IP. May be \"ACTIVE\" or \"INACTIVE\". It is only possible to make requests from \"ACTIVE\" IP addresses. Only \"ACTIVE\" IPs will be billed.",
                    "readOnly": false
                }
            }
        },
        "Pointer": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "The alias type, can be: EMAIL|PHONE_NUMBER|IBAN.",
                    "readOnly": false
                },
                "value": {
                    "type": "string",
                    "description": "The alias value.",
                    "readOnly": false
                },
                "name": {
                    "type": "string",
                    "description": "The alias name.",
                    "readOnly": false
                }
            }
        },
        "PromotionDisplay": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "description": "The status of the promotion. (CREATED, CLAIMED, EXPIRED, DISCARDED)",
                    "readOnly": false
                },
                "id": {
                    "type": "integer",
                    "description": "The id of the promotion.",
                    "readOnly": true
                },
                "counterparty_alias": {
                    "type": "object",
                    "description": "The alias of the user you received the promotion from.",
                    "readOnly": true,
                    "$ref": "#/definitions/LabelMonetaryAccount"
                },
                "event_description": {
                    "type": "string",
                    "description": "The event description of the promotion appearing on time line.",
                    "readOnly": true
                }
            }
        },
        "RequestInquiry": {
            "type": "object",
            "properties": {
                "amount_inquired": {
                    "type": "object",
                    "description": "The requested amount.",
                    "readOnly": false,
                    "$ref": "#/definitions/Amount"
                },
                "counterparty_alias": {
                    "type": "object",
                    "description": "The LabelMonetaryAccount with the public information of the MonetaryAccount the money was requested from.",
                    "readOnly": false,
                    "$ref": "#/definitions/LabelMonetaryAccount"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the inquiry.",
                    "readOnly": false
                },
                "attachment": {
                    "type": "array",
                    "description": "The attachments attached to the payment.",
                    "readOnly": false,
                    "items": {
                        "$ref": "#/definitions/BunqId"
                    }
                },
                "merchant_reference": {
                    "type": "string",
                    "description": "The client's custom reference that was attached to the request and the mutation.",
                    "readOnly": false
                },
                "status": {
                    "type": "string",
                    "description": "The status of the request.",
                    "readOnly": false
                },
                "minimum_age": {
                    "type": "integer",
                    "description": "The minimum age the user accepting the RequestInquiry must have.",
                    "readOnly": false
                },
                "require_address": {
                    "type": "string",
                    "description": "Whether or not an address must be provided on accept.",
                    "readOnly": false
                },
                "want_tip": {
                    "type": "boolean",
                    "description": "[DEPRECATED] Whether or not the accepting user can give an extra tip on top of the requested Amount. Defaults to false.",
                    "readOnly": false
                },
                "allow_amount_lower": {
                    "type": "boolean",
                    "description": "[DEPRECATED] Whether or not the accepting user can choose to accept with a lower amount than requested. Defaults to false.",
                    "readOnly": false
                },
                "allow_amount_higher": {
                    "type": "boolean",
                    "description": "[DEPRECATED] Whether or not the accepting user can choose to accept with a higher amount than requested. Defaults to false.",
                    "readOnly": false
                },
                "allow_bunqme": {
                    "type": "boolean",
                    "description": "Whether or not sending a bunq.me request is allowed.",
                    "readOnly": false
                },
                "redirect_url": {
                    "type": "string",
                    "description": "The URL which the user is sent to after accepting or rejecting the Request.",
                    "readOnly": false
                },
                "event_id": {
                    "type": "integer",
                    "description": "The ID of the associated event if the request was made using 'split the bill'.",
                    "readOnly": false
                },
                "id": {
                    "type": "integer",
                    "description": "The id of the created RequestInquiry.",
                    "readOnly": true
                },
                "created": {
                    "type": "string",
                    "description": "The timestamp of the payment request's creation.",
                    "readOnly": true
                },
                "updated": {
                    "type": "string",
                    "description": "The timestamp of the payment request's last update.",
                    "readOnly": true
                },
                "time_responded": {
                    "type": "string",
                    "description": "The timestamp of when the payment request was responded to.",
                    "readOnly": true
                },
                "time_expiry": {
                    "type": "string",
                    "description": "The timestamp of when the payment request expired.",
                    "readOnly": true
                },
                "monetary_account_id": {
                    "type": "integer",
                    "description": "The id of the monetary account the request response applies to.",
                    "readOnly": true
                },
                "amount_responded": {
                    "type": "object",
                    "description": "The responded amount.",
                    "readOnly": true,
                    "$ref": "#/definitions/Amount"
                },
                "user_alias_created": {
                    "type": "object",
                    "description": "The label that's displayed to the counterparty with the mutation. Includes user.",
                    "readOnly": true,
                    "$ref": "#/definitions/LabelUser"
                },
                "user_alias_revoked": {
                    "type": "object",
                    "description": "The label that's displayed to the counterparty with the mutation. Includes user.",
                    "readOnly": true,
                    "$ref": "#/definitions/LabelUser"
                },
                "batch_id": {
                    "type": "integer",
                    "description": "The id of the batch if the request was part of a batch.",
                    "readOnly": true
                },
                "scheduled_id": {
                    "type": "integer",
                    "description": "The id of the scheduled job if the request was scheduled.",
                    "readOnly": true
                },
                "bunqme_share_url": {
                    "type": "string",
                    "description": "The url that points to the bunq.me request.",
                    "readOnly": true
                },
                "address_shipping": {
                    "type": "object",
                    "description": "The shipping address provided by the accepting user if an address was requested.",
                    "readOnly": true,
                    "$ref": "#/definitions/Address"
                },
                "address_billing": {
                    "type": "object",
                    "description": "The billing address provided by the accepting user if an address was requested.",
                    "readOnly": true,
                    "$ref": "#/definitions/Address"
                },
                "geolocation": {
                    "type": "object",
                    "description": "The geolocation where the payment was done.",
                    "readOnly": true,
                    "$ref": "#/definitions/Geolocation"
                },
                "allow_chat": {
                    "type": "boolean",
                    "description": "Whether or not chat messages are allowed.",
                    "readOnly": true
                },
                "reference_split_the_bill": {
                    "type": "object",
                    "description": "The reference to the object used for split the bill. Can be Payment, PaymentBatch, ScheduleInstance, RequestResponse and MasterCardAction",
                    "readOnly": true,
                    "$ref": "#/definitions/RequestReferenceSplitTheBillAnchorObject"
                }
            }
        },
        "RequestInquiryBatch": {
            "type": "object",
            "properties": {
                "request_inquiries": {
                    "type": "array",
                    "description": "The list of requests that were made.",
                    "readOnly": false,
                    "items": {
                        "$ref": "#/definitions/RequestInquiry"
                    }
                },
                "status": {
                    "type": "string",
                    "description": "The status of the request.",
                    "readOnly": false
                },
                "total_amount_inquired": {
                    "type": "object",
                    "description": "The total amount originally inquired for this batch.",
                    "readOnly": false,
                    "$ref": "#/definitions/Amount"
                },
                "event_id": {
                    "type": "integer",
                    "description": "The ID of the associated event if the request batch was made using 'split the bill'.",
                    "readOnly": false
                },
                "reference_split_the_bill": {
                    "type": "object",
                    "description": "The reference to the object used for split the bill. Can be Payment, PaymentBatch, ScheduleInstance, RequestResponse and MasterCardAction",
                    "readOnly": true,
                    "$ref": "#/definitions/RequestReferenceSplitTheBillAnchorObject"
                }
            }
        },
        "RequestInquiryChat": {
            "type": "object",
            "properties": {
                "last_read_message_id": {
                    "type": "integer",
                    "description": "The id of the last read message.",
                    "readOnly": false
                },
                "id": {
                    "type": "integer",
                    "description": "The id of the newly created chat conversation.",
                    "readOnly": true
                },
                "created": {
                    "type": "string",
                    "description": "The timestamp when the chat was created.",
                    "readOnly": true
                },
                "updated": {
                    "type": "string",
                    "description": "The timestamp when the chat was last updated.",
                    "readOnly": true
                },
                "unread_message_count": {
                    "type": "integer",
                    "description": "The total number of messages in this conversation.",
                    "readOnly": true
                }
            }
        },
        "RequestInquiryReference": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "The type of request inquiry. Can be RequestInquiry or RequestInquiryBatch.",
                    "readOnly": true
                },
                "id": {
                    "type": "integer",
                    "description": "The id of the request inquiry (batch).",
                    "readOnly": true
                }
            }
        },
        "RequestReferenceSplitTheBillAnchorObject": {
            "type": "object",
            "properties": {
                "BillingInvoice": {
                    "type": "object",
                    "description": "",
                    "readOnly": true,
                    "$ref": "#/definitions/Invoice"
                },
                "DraftPayment": {
                    "type": "object",
                    "description": "",
                    "readOnly": true,
                    "$ref": "#/definitions/DraftPayment"
                },
                "MasterCardAction": {
                    "type": "object",
                    "description": "",
                    "readOnly": true,
                    "$ref": "#/definitions/MasterCardAction"
                },
                "Payment": {
                    "type": "object",
                    "description": "",
                    "readOnly": true,
                    "$ref": "#/definitions/Payment"
                },
                "PaymentBatch": {
                    "type": "object",
                    "description": "",
                    "readOnly": true,
                    "$ref": "#/definitions/PaymentBatch"
                },
                "RequestResponse": {
                    "type": "object",
                    "description": "",
                    "readOnly": true,
                    "$ref": "#/definitions/RequestResponse"
                },
                "ScheduleInstance": {
                    "type": "object",
                    "description": "",
                    "readOnly": true,
                    "$ref": "#/definitions/ScheduleInstance"
                },
                "TabResultResponse": {
                    "type": "object",
                    "description": "",
                    "readOnly": true,
                    "$ref": "#/definitions/TabResultResponse"
                },
                "WhitelistResult": {
                    "type": "object",
                    "description": "",
                    "readOnly": true,
                    "$ref": "#/definitions/WhitelistResult"
                }
            }
        },
        "RequestResponse": {
            "type": "object",
            "properties": {
                "amount_responded": {
                    "type": "object",
                    "description": "The Amount the RequestResponse was accepted with.",
                    "readOnly": false,
                    "$ref": "#/definitions/Amount"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the RequestResponse. Can be ACCEPTED, PENDING, REJECTED or REVOKED.",
                    "readOnly": false
                },
                "address_shipping": {
                    "type": "object",
                    "description": "The shipping address provided by the accepting user if an address was requested.",
                    "readOnly": false,
                    "$ref": "#/definitions/Address"
                },
                "address_billing": {
                    "type": "object",
                    "description": "The billing address provided by the accepting user if an address was requested.",
                    "readOnly": false,
                    "$ref": "#/definitions/Address"
                },
                "id": {
                    "type": "integer",
                    "description": "The id of the Request Response.",
                    "readOnly": true
                },
                "created": {
                    "type": "string",
                    "description": "The timestamp when the Request Response was created.",
                    "readOnly": true
                },
                "updated": {
                    "type": "string",
                    "description": "The timestamp when the Request Response was last updated (will be updated when chat messages are received).",
                    "readOnly": true
                },
                "time_responded": {
                    "type": "string",
                    "description": "The timestamp of when the RequestResponse was responded to.",
                    "readOnly": true
                },
                "time_expiry": {
                    "type": "string",
                    "description": "The timestamp of when the RequestResponse expired or will expire.",
                    "readOnly": true
                },
                "monetary_account_id": {
                    "type": "integer",
                    "description": "The id of the MonetaryAccount the RequestResponse was received on.",
                    "readOnly": true
                },
                "amount_inquired": {
                    "type": "object",
                    "description": "The requested Amount.",
                    "readOnly": true,
                    "$ref": "#/definitions/Amount"
                },
                "description": {
                    "type": "string",
                    "description": "The description for the RequestResponse provided by the requesting party. Maximum 9000 characters.",
                    "readOnly": true
                },
                "alias": {
                    "type": "object",
                    "description": "The LabelMonetaryAccount with the public information of the MonetaryAccount this RequestResponse was received on.",
                    "readOnly": true,
                    "$ref": "#/definitions/LabelMonetaryAccount"
                },
                "counterparty_alias": {
                    "type": "object",
                    "description": "The LabelMonetaryAccount with the public information of the MonetaryAccount that is requesting money with this RequestResponse.",
                    "readOnly": true,
                    "$ref": "#/definitions/LabelMonetaryAccount"
                },
                "attachment": {
                    "type": "array",
                    "description": "The Attachments attached to the RequestResponse.",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Attachment"
                    }
                },
                "minimum_age": {
                    "type": "integer",
                    "description": "The minimum age the user accepting the RequestResponse must have.",
                    "readOnly": true
                },
                "require_address": {
                    "type": "string",
                    "description": "Whether or not an address must be provided on accept.",
                    "readOnly": true
                },
                "geolocation": {
                    "type": "object",
                    "description": "The Geolocation where the RequestResponse was created.",
                    "readOnly": true,
                    "$ref": "#/definitions/Geolocation"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the RequestInquiry. Can be DIRECT_DEBIT, DIRECT_DEBIT_B2B, IDEAL, SOFORT or INTERNAL.",
                    "readOnly": true
                },
                "sub_type": {
                    "type": "string",
                    "description": "The subtype of the RequestInquiry. Can be ONCE or RECURRING for DIRECT_DEBIT RequestInquiries and NONE for all other.",
                    "readOnly": true
                },
                "redirect_url": {
                    "type": "string",
                    "description": "The URL which the user is sent to after accepting or rejecting the Request.",
                    "readOnly": true
                },
                "allow_chat": {
                    "type": "boolean",
                    "description": "Whether or not chat messages are allowed.",
                    "readOnly": true
                },
                "credit_scheme_identifier": {
                    "type": "string",
                    "description": "The credit scheme id provided by the counterparty for DIRECT_DEBIT inquiries.",
                    "readOnly": true
                },
                "mandate_identifier": {
                    "type": "string",
                    "description": "The mandate id provided by the counterparty for DIRECT_DEBIT inquiries.",
                    "readOnly": true
                },
                "eligible_whitelist_id": {
                    "type": "integer",
                    "description": "The whitelist id for this action or null.",
                    "readOnly": true
                },
                "request_reference_split_the_bill": {
                    "type": "array",
                    "description": "The reference to the object used for split the bill. Can be RequestInquiry or RequestInquiryBatch",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/RequestInquiryReference"
                    }
                }
            }
        },
        "RequestResponseChat": {
            "type": "object",
            "properties": {
                "last_read_message_id": {
                    "type": "integer",
                    "description": "The id of the last read message.",
                    "readOnly": false
                },
                "id": {
                    "type": "integer",
                    "description": "The id of the newly created chat conversation.",
                    "readOnly": true
                },
                "created": {
                    "type": "string",
                    "description": "The timestamp when the chat was created.",
                    "readOnly": true
                },
                "updated": {
                    "type": "string",
                    "description": "The timestamp when the chat was last updated.",
                    "readOnly": true
                },
                "unread_message_count": {
                    "type": "integer",
                    "description": "The total number of messages in this conversation.",
                    "readOnly": true
                }
            }
        },
        "SandboxUser": {
            "type": "object",
            "properties": {
                "api_key": {
                    "type": "string",
                    "description": "The API key of the newly created sandbox user.",
                    "readOnly": true
                }
            }
        },
        "Schedule": {
            "type": "object",
            "properties": {
                "time_start": {
                    "type": "string",
                    "description": "The schedule start time (UTC).",
                    "readOnly": false
                },
                "time_end": {
                    "type": "string",
                    "description": "The schedule end time (UTC).",
                    "readOnly": false
                },
                "recurrence_unit": {
                    "type": "string",
                    "description": "The schedule recurrence unit, options: ONCE, HOURLY, DAILY, WEEKLY, MONTHLY, YEARLY",
                    "readOnly": false
                },
                "recurrence_size": {
                    "type": "integer",
                    "description": "The schedule recurrence size. For example size 4 and unit WEEKLY means the recurrence is every 4 weeks.",
                    "readOnly": false
                },
                "status": {
                    "type": "string",
                    "description": "The schedule status, options: ACTIVE, FINISHED, CANCELLED.",
                    "readOnly": true
                },
                "object": {
                    "type": "object",
                    "description": "The scheduled object. (Payment, PaymentBatch)",
                    "readOnly": true,
                    "$ref": "#/definitions/ScheduleAnchorObject"
                }
            }
        },
        "ScheduleAnchorObject": {
            "type": "object",
            "properties": {
                "Payment": {
                    "type": "object",
                    "description": "",
                    "readOnly": true,
                    "$ref": "#/definitions/Payment"
                },
                "PaymentBatch": {
                    "type": "object",
                    "description": "",
                    "readOnly": true,
                    "$ref": "#/definitions/PaymentBatch"
                }
            }
        },
        "ScheduleInstance": {
            "type": "object",
            "properties": {
                "state": {
                    "type": "string",
                    "description": "The state of the scheduleInstance. (FINISHED_SUCCESSFULLY, RETRY, FAILED_USER_ERROR)",
                    "readOnly": false
                },
                "time_start": {
                    "type": "string",
                    "description": "The schedule start time (UTC).",
                    "readOnly": true
                },
                "time_end": {
                    "type": "string",
                    "description": "The schedule end time (UTC).",
                    "readOnly": true
                },
                "error_message": {
                    "type": "array",
                    "description": "The message when the scheduled instance has run and failed due to user error.",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Error"
                    }
                },
                "scheduled_object": {
                    "type": "object",
                    "description": "The scheduled object. (Payment, PaymentBatch)",
                    "readOnly": true,
                    "$ref": "#/definitions/ScheduleAnchorObject"
                },
                "result_object": {
                    "type": "object",
                    "description": "The result object of this schedule instance. (Payment, PaymentBatch)",
                    "readOnly": true,
                    "$ref": "#/definitions/ScheduleInstanceAnchorObject"
                },
                "request_reference_split_the_bill": {
                    "type": "array",
                    "description": "The reference to the object used for split the bill. Can be RequestInquiry or RequestInquiryBatch",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/RequestInquiryReference"
                    }
                }
            }
        },
        "ScheduleInstanceAnchorObject": {
            "type": "object",
            "properties": {
                "Payment": {
                    "type": "object",
                    "description": "",
                    "readOnly": true,
                    "$ref": "#/definitions/Payment"
                },
                "PaymentBatch": {
                    "type": "object",
                    "description": "",
                    "readOnly": true,
                    "$ref": "#/definitions/PaymentBatch"
                }
            }
        },
        "SchedulePayment": {
            "type": "object",
            "properties": {
                "payment": {
                    "type": "object",
                    "description": "The payment details.",
                    "readOnly": false,
                    "$ref": "#/definitions/SchedulePaymentEntry"
                },
                "schedule": {
                    "type": "object",
                    "description": "The schedule details.",
                    "readOnly": false,
                    "$ref": "#/definitions/Schedule"
                }
            }
        },
        "SchedulePaymentBatch": {
            "type": "object",
            "properties": {
                "payments": {
                    "type": "array",
                    "description": "The payment details.",
                    "readOnly": false,
                    "items": {
                        "$ref": "#/definitions/SchedulePaymentEntry"
                    }
                },
                "schedule": {
                    "type": "object",
                    "description": "The schedule details.",
                    "readOnly": false,
                    "$ref": "#/definitions/Schedule"
                }
            }
        },
        "SchedulePaymentEntry": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "object",
                    "description": "The Amount transferred by the Payment. Will be negative for outgoing Payments and positive for incoming Payments (relative to the MonetaryAccount indicated by monetary_account_id).",
                    "readOnly": false,
                    "$ref": "#/definitions/Amount"
                },
                "counterparty_alias": {
                    "type": "object",
                    "description": "The LabelMonetaryAccount containing the public information of the other (counterparty) side of the Payment.",
                    "readOnly": false,
                    "$ref": "#/definitions/LabelMonetaryAccount"
                },
                "description": {
                    "type": "string",
                    "description": "The description for the Payment. Maximum 140 characters for Payments to external IBANs, 9000 characters for Payments to only other bunq MonetaryAccounts.",
                    "readOnly": false
                },
                "attachment": {
                    "type": "array",
                    "description": "The Attachments attached to the Payment.",
                    "readOnly": false,
                    "items": {
                        "$ref": "#/definitions/AttachmentMonetaryAccountPayment"
                    }
                },
                "merchant_reference": {
                    "type": "string",
                    "description": "Optional data included with the Payment specific to the merchant.",
                    "readOnly": false
                },
                "allow_bunqto": {
                    "type": "boolean",
                    "description": "Whether or not sending a bunq.to payment is allowed. Mandatory for publicApi.",
                    "readOnly": false
                },
                "alias": {
                    "type": "object",
                    "description": "The LabelMonetaryAccount containing the public information of 'this' (party) side of the Payment.",
                    "readOnly": true,
                    "$ref": "#/definitions/LabelMonetaryAccount"
                }
            }
        },
        "ScheduleUser": {
            "type": "object",
            "properties": {}
        },
        "Session": {
            "type": "object",
            "properties": {}
        },
        "ShareDetail": {
            "type": "object",
            "properties": {
                "payment": {
                    "type": "object",
                    "description": "The share details for a payment share. In the response 'payment' is replaced by 'ShareDetailPayment'.",
                    "readOnly": false,
                    "$ref": "#/definitions/ShareDetailPayment"
                },
                "read_only": {
                    "type": "object",
                    "description": "The share details for viewing a share. In the response 'read_only' is replaced by 'ShareDetailReadOnly'.",
                    "readOnly": false,
                    "$ref": "#/definitions/ShareDetailReadOnly"
                },
                "draft_payment": {
                    "type": "object",
                    "description": "The share details for a draft payment share. Remember to replace 'draft_payment' with 'ShareDetailDraftPayment' before sending a request.",
                    "readOnly": false,
                    "$ref": "#/definitions/ShareDetailDraftPayment"
                }
            }
        },
        "ShareDetailDraftPayment": {
            "type": "object",
            "properties": {
                "make_draft_payments": {
                    "type": "boolean",
                    "description": "If set to true, the invited user will be able to make draft payments from the shared account.",
                    "readOnly": false
                },
                "view_balance": {
                    "type": "boolean",
                    "description": "If set to true, the invited user will be able to view the account balance.",
                    "readOnly": false
                },
                "view_old_events": {
                    "type": "boolean",
                    "description": "If set to true, the invited user will be able to view events from before the share was active.",
                    "readOnly": false
                },
                "view_new_events": {
                    "type": "boolean",
                    "description": "If set to true, the invited user will be able to view events starting from the time the share became active.",
                    "readOnly": false
                }
            }
        },
        "ShareDetailPayment": {
            "type": "object",
            "properties": {
                "make_payments": {
                    "type": "boolean",
                    "description": "If set to true, the invited user will be able to make payments from the shared account.",
                    "readOnly": false
                },
                "make_draft_payments": {
                    "type": "boolean",
                    "description": "If set to true, the invited user will be able to make draft payments from the shared account.",
                    "readOnly": false
                },
                "view_balance": {
                    "type": "boolean",
                    "description": "If set to true, the invited user will be able to view the account balance.",
                    "readOnly": false
                },
                "view_old_events": {
                    "type": "boolean",
                    "description": "If set to true, the invited user will be able to view events from before the share was active.",
                    "readOnly": false
                },
                "view_new_events": {
                    "type": "boolean",
                    "description": "If set to true, the invited user will be able to view events starting from the time the share became active.",
                    "readOnly": false
                },
                "budget": {
                    "type": "object",
                    "description": "The budget restriction.",
                    "readOnly": false,
                    "$ref": "#/definitions/BudgetRestriction"
                }
            }
        },
        "ShareDetailReadOnly": {
            "type": "object",
            "properties": {
                "view_balance": {
                    "type": "boolean",
                    "description": "If set to true, the invited user will be able to view the account balance.",
                    "readOnly": false
                },
                "view_old_events": {
                    "type": "boolean",
                    "description": "If set to true, the invited user will be able to view events from before the share was active.",
                    "readOnly": false
                },
                "view_new_events": {
                    "type": "boolean",
                    "description": "If set to true, the invited user will be able to view events starting from the time the share became active.",
                    "readOnly": false
                }
            }
        },
        "ShareInviteBankAmountUsed": {
            "type": "object",
            "properties": {}
        },
        "ShareInviteBankInquiry": {
            "type": "object",
            "properties": {
                "counter_user_alias": {
                    "type": "object",
                    "description": "The label of the user to share with.",
                    "readOnly": false,
                    "$ref": "#/definitions/LabelUser"
                },
                "draft_share_invite_bank_id": {
                    "type": "integer",
                    "description": "The id of the draft share invite bank.",
                    "readOnly": false
                },
                "share_detail": {
                    "type": "object",
                    "description": "The share details. Only one of these objects is returned.",
                    "readOnly": false,
                    "$ref": "#/definitions/ShareDetail"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the share. Can be PENDING, REVOKED (the user deletes the share inquiry before it's accepted), ACCEPTED, CANCELLED (the user deletes an active share) or CANCELLATION_PENDING, CANCELLATION_ACCEPTED, CANCELLATION_REJECTED (for canceling mutual connects)",
                    "readOnly": false
                },
                "share_type": {
                    "type": "string",
                    "description": "The share type, either STANDARD or MUTUAL.",
                    "readOnly": false
                },
                "start_date": {
                    "type": "string",
                    "description": "The start date of this share.",
                    "readOnly": false
                },
                "end_date": {
                    "type": "string",
                    "description": "The expiration date of this share.",
                    "readOnly": false
                },
                "alias": {
                    "type": "object",
                    "description": "The label of the monetary account that's being shared.",
                    "readOnly": true,
                    "$ref": "#/definitions/LabelMonetaryAccount"
                },
                "user_alias_created": {
                    "type": "object",
                    "description": "The user who created the share.",
                    "readOnly": true,
                    "$ref": "#/definitions/LabelUser"
                },
                "user_alias_revoked": {
                    "type": "object",
                    "description": "The user who revoked the share.",
                    "readOnly": true,
                    "$ref": "#/definitions/LabelUser"
                },
                "monetary_account_id": {
                    "type": "integer",
                    "description": "The id of the monetary account the share applies to.",
                    "readOnly": true
                },
                "id": {
                    "type": "integer",
                    "description": "The id of the newly created share invite.",
                    "readOnly": true
                }
            }
        },
        "ShareInviteBankResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "description": "The status of the share. Can be PENDING, REVOKED (the user deletes the share inquiry before it's accepted), ACCEPTED, CANCELLED (the user deletes an active share) or CANCELLATION_PENDING, CANCELLATION_ACCEPTED, CANCELLATION_REJECTED (for canceling mutual connects)",
                    "readOnly": false
                },
                "counter_alias": {
                    "type": "object",
                    "description": "The monetary account and user who created the share.",
                    "readOnly": true,
                    "$ref": "#/definitions/LabelMonetaryAccount"
                },
                "user_alias_cancelled": {
                    "type": "object",
                    "description": "The user who cancelled the share if it has been revoked or rejected.",
                    "readOnly": true,
                    "$ref": "#/definitions/LabelUser"
                },
                "monetary_account_id": {
                    "type": "integer",
                    "description": "The id of the monetary account the ACCEPTED share applies to. null otherwise.",
                    "readOnly": true
                },
                "draft_share_invite_bank_id": {
                    "type": "integer",
                    "description": "The id of the draft share invite bank.",
                    "readOnly": true
                },
                "share_detail": {
                    "type": "object",
                    "description": "The share details.",
                    "readOnly": true,
                    "$ref": "#/definitions/ShareDetail"
                },
                "share_type": {
                    "type": "string",
                    "description": "The share type, either STANDARD or MUTUAL.",
                    "readOnly": true
                },
                "start_date": {
                    "type": "string",
                    "description": "The start date of this share.",
                    "readOnly": true
                },
                "end_date": {
                    "type": "string",
                    "description": "The expiration date of this share.",
                    "readOnly": true
                },
                "description": {
                    "type": "string",
                    "description": "The description of this share. It is basically the monetary account description.",
                    "readOnly": true
                }
            }
        },
        "Tab": {
            "type": "object",
            "properties": {
                "uuid": {
                    "type": "string",
                    "description": "The uuid of the tab.",
                    "readOnly": true
                },
                "alias": {
                    "type": "object",
                    "description": "The label of the party that owns this tab.",
                    "readOnly": true,
                    "$ref": "#/definitions/LabelMonetaryAccount"
                },
                "avatar": {
                    "type": "string",
                    "description": "The avatar of this tab.",
                    "readOnly": true
                },
                "reference": {
                    "type": "string",
                    "description": "The reference of the tab, as defined by the owner.",
                    "readOnly": true
                },
                "description": {
                    "type": "string",
                    "description": "The short description of the tab.",
                    "readOnly": true
                },
                "status": {
                    "type": "string",
                    "description": "The status of the tab.",
                    "readOnly": true
                },
                "expiration": {
                    "type": "string",
                    "description": "The moment when this tab expires.",
                    "readOnly": true
                },
                "amount_total": {
                    "type": "object",
                    "description": "The total amount of the tab.",
                    "readOnly": true,
                    "$ref": "#/definitions/Amount"
                }
            }
        },
        "TabAttachmentTab": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The id of the attachment.",
                    "readOnly": true
                },
                "created": {
                    "type": "string",
                    "description": "The timestamp of the attachment's creation.",
                    "readOnly": true
                },
                "updated": {
                    "type": "string",
                    "description": "The timestamp of the attachment's last update.",
                    "readOnly": true
                },
                "attachment": {
                    "type": "object",
                    "description": "The attachment.",
                    "readOnly": true,
                    "$ref": "#/definitions/Attachment"
                }
            }
        },
        "TabAttachmentTabContent": {
            "type": "object",
            "properties": {}
        },
        "TabItem": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The id of the tab item.",
                    "readOnly": true
                },
                "description": {
                    "type": "string",
                    "description": "The item's brief description.",
                    "readOnly": true
                },
                "ean_code": {
                    "type": "string",
                    "description": "The item's EAN code.",
                    "readOnly": true
                },
                "avatar_attachment": {
                    "type": "object",
                    "description": "A struct with an AttachmentPublic UUID that used as an avatar for the TabItem.",
                    "readOnly": true,
                    "$ref": "#/definitions/AttachmentPublic"
                },
                "tab_attachment": {
                    "type": "array",
                    "description": "A list of AttachmentTab attached to the TabItem.",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/AttachmentTab"
                    }
                },
                "quantity": {
                    "type": "string",
                    "description": "The quantity of the item. Formatted as a number containing up to 15 digits, up to 15 decimals and using a dot.",
                    "readOnly": true
                },
                "amount": {
                    "type": "object",
                    "description": "The money amount of the item.",
                    "readOnly": true,
                    "$ref": "#/definitions/Amount"
                }
            }
        },
        "TabItemShop": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The TabItem's brief description.",
                    "readOnly": false
                },
                "ean_code": {
                    "type": "string",
                    "description": "The TabItem's EAN code.",
                    "readOnly": false
                },
                "avatar_attachment_uuid": {
                    "type": "string",
                    "description": "An AttachmentPublic UUID that used as an avatar for the TabItem.",
                    "readOnly": false
                },
                "tab_attachment": {
                    "type": "array",
                    "description": "A list of AttachmentTab attached to the TabItem.",
                    "readOnly": false,
                    "items": {
                        "$ref": "#/definitions/AttachmentTab"
                    }
                },
                "quantity": {
                    "type": "integer",
                    "description": "The quantity of the TabItem.",
                    "readOnly": false
                },
                "amount": {
                    "type": "object",
                    "description": "The money amount of the TabItem.",
                    "readOnly": false,
                    "$ref": "#/definitions/Amount"
                },
                "id": {
                    "type": "integer",
                    "description": "The id of the created TabItem.",
                    "readOnly": true
                },
                "avatar_attachment": {
                    "type": "object",
                    "description": "A struct with an AttachmentPublic UUID that used as an avatar for the TabItem.",
                    "readOnly": true,
                    "$ref": "#/definitions/AttachmentPublic"
                }
            }
        },
        "TabItemShopBatch": {
            "type": "object",
            "properties": {
                "tab_items": {
                    "type": "array",
                    "description": "The list of tab items in the batch.",
                    "readOnly": false,
                    "items": {
                        "$ref": "#/definitions/TabItemShop"
                    }
                }
            }
        },
        "TabQrCodeContent": {
            "type": "object",
            "properties": {}
        },
        "TabResultInquiry": {
            "type": "object",
            "properties": {
                "tab": {
                    "type": "object",
                    "description": "The Tab details.",
                    "readOnly": true,
                    "$ref": "#/definitions/Tab"
                },
                "payment": {
                    "type": "object",
                    "description": "The payment made for the Tab.",
                    "readOnly": true,
                    "$ref": "#/definitions/Payment"
                }
            }
        },
        "TabResultResponse": {
            "type": "object",
            "properties": {
                "tab": {
                    "type": "object",
                    "description": "The Tab details.",
                    "readOnly": true,
                    "$ref": "#/definitions/Tab"
                },
                "payment": {
                    "type": "object",
                    "description": "The payment made for the Tab.",
                    "readOnly": true,
                    "$ref": "#/definitions/Payment"
                },
                "request_reference_split_the_bill": {
                    "type": "array",
                    "description": "The reference to the object used for split the bill. Can be RequestInquiry or RequestInquiryBatch",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/RequestInquiryReference"
                    }
                }
            }
        },
        "TabTextWaitingScreen": {
            "type": "object",
            "properties": {
                "language": {
                    "type": "string",
                    "description": "Language of tab text",
                    "readOnly": false
                },
                "description": {
                    "type": "string",
                    "description": "Tab text",
                    "readOnly": false
                }
            }
        },
        "TabUsageMultiple": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the TabUsageMultiple. Maximum 9000 characters.",
                    "readOnly": false
                },
                "status": {
                    "type": "string",
                    "description": "The status of the Tab. Can be OPEN, PAYABLE or CLOSED.",
                    "readOnly": false
                },
                "amount_total": {
                    "type": "object",
                    "description": "The total amount of the Tab.",
                    "readOnly": false,
                    "$ref": "#/definitions/Amount"
                },
                "allow_amount_higher": {
                    "type": "boolean",
                    "description": "[DEPRECATED] Whether or not a higher amount can be paid.",
                    "readOnly": false
                },
                "allow_amount_lower": {
                    "type": "boolean",
                    "description": "[DEPRECATED] Whether or not a lower amount can be paid.",
                    "readOnly": false
                },
                "want_tip": {
                    "type": "boolean",
                    "description": "[DEPRECATED] Whether or not the user paying the Tab should be asked if he wants to give a tip. When want_tip is set to true, allow_amount_higher must also be set to true and allow_amount_lower must be false.",
                    "readOnly": false
                },
                "minimum_age": {
                    "type": "boolean",
                    "description": "The minimum age of the user paying the Tab.",
                    "readOnly": false
                },
                "require_address": {
                    "type": "string",
                    "description": "Whether or not an billing and shipping address must be provided when paying the Tab.",
                    "readOnly": false
                },
                "redirect_url": {
                    "type": "string",
                    "description": "The URL which the user is sent to after paying the Tab.",
                    "readOnly": false
                },
                "visibility": {
                    "type": "object",
                    "description": "The visibility of a Tab. A Tab can be visible trough NearPay, the QR code of the CashRegister and its own QR code.",
                    "readOnly": false,
                    "$ref": "#/definitions/TabVisibility"
                },
                "expiration": {
                    "type": "string",
                    "description": "The moment when this Tab expires.",
                    "readOnly": false
                },
                "tab_attachment": {
                    "type": "array",
                    "description": "An array of attachments that describe the tab. Viewable through the GET /tab/{tabid}/attachment/{attachmentid}/content endpoint.",
                    "readOnly": false,
                    "items": {
                        "$ref": "#/definitions/BunqId"
                    }
                },
                "uuid": {
                    "type": "string",
                    "description": "The uuid of the created TabUsageMultiple.",
                    "readOnly": true
                },
                "created": {
                    "type": "string",
                    "description": "The timestamp of the Tab's creation.",
                    "readOnly": true
                },
                "updated": {
                    "type": "string",
                    "description": "The timestamp of the Tab's last update.",
                    "readOnly": true
                },
                "qr_code_token": {
                    "type": "string",
                    "description": "The token used to redirect mobile devices directly to the bunq app. Because they can't scan a QR code.",
                    "readOnly": true
                },
                "tab_url": {
                    "type": "string",
                    "description": "The URL redirecting user to the tab payment in the bunq app. Only works on mobile devices.",
                    "readOnly": true
                },
                "alias": {
                    "type": "object",
                    "description": "The alias of the party that owns this tab.",
                    "readOnly": true,
                    "$ref": "#/definitions/LabelMonetaryAccount"
                },
                "cash_register_location": {
                    "type": "object",
                    "description": "The location of the cash register that created this tab.",
                    "readOnly": true,
                    "$ref": "#/definitions/Geolocation"
                },
                "tab_item": {
                    "type": "array",
                    "description": "The tab items of this tab.",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/TabItem"
                    }
                }
            }
        },
        "TabUsageSingle": {
            "type": "object",
            "properties": {
                "merchant_reference": {
                    "type": "string",
                    "description": "The merchant reference of the Tab, as defined by the owner.",
                    "readOnly": false
                },
                "description": {
                    "type": "string",
                    "description": "The description of the TabUsageMultiple. Maximum 9000 characters.",
                    "readOnly": false
                },
                "status": {
                    "type": "string",
                    "description": "The status of the Tab. Can be OPEN, WAITING_FOR_PAYMENT, PAID or CANCELED.",
                    "readOnly": false
                },
                "amount_total": {
                    "type": "object",
                    "description": "The total amount of the Tab.",
                    "readOnly": false,
                    "$ref": "#/definitions/Amount"
                },
                "allow_amount_higher": {
                    "type": "boolean",
                    "description": "[DEPRECATED] Whether or not a higher amount can be paid.",
                    "readOnly": false
                },
                "allow_amount_lower": {
                    "type": "boolean",
                    "description": "[DEPRECATED] Whether or not a lower amount can be paid.",
                    "readOnly": false
                },
                "want_tip": {
                    "type": "boolean",
                    "description": "[DEPRECATED] Whether or not the user paying the Tab should be asked if he wants to give a tip. When want_tip is set to true, allow_amount_higher must also be set to true and allow_amount_lower must be false.",
                    "readOnly": false
                },
                "minimum_age": {
                    "type": "boolean",
                    "description": "The minimum age of the user paying the Tab.",
                    "readOnly": false
                },
                "require_address": {
                    "type": "string",
                    "description": "Whether or not an billing and shipping address must be provided when paying the Tab.",
                    "readOnly": false
                },
                "redirect_url": {
                    "type": "string",
                    "description": "The URL which the user is sent to after paying the Tab.",
                    "readOnly": false
                },
                "visibility": {
                    "type": "object",
                    "description": "The visibility of a Tab. A Tab can be visible trough NearPay, the QR code of the CashRegister and its own QR code.",
                    "readOnly": false,
                    "$ref": "#/definitions/TabVisibility"
                },
                "expiration": {
                    "type": "string",
                    "description": "The moment when this Tab expires.",
                    "readOnly": false
                },
                "tab_attachment": {
                    "type": "array",
                    "description": "An array of attachments that describe the tab. Uploaded through the POST /user/{userid}/attachment-tab endpoint.",
                    "readOnly": false,
                    "items": {
                        "$ref": "#/definitions/BunqId"
                    }
                },
                "uuid": {
                    "type": "string",
                    "description": "The uuid of the created TabUsageSingle.",
                    "readOnly": true
                },
                "created": {
                    "type": "string",
                    "description": "The timestamp of the Tab's creation.",
                    "readOnly": true
                },
                "updated": {
                    "type": "string",
                    "description": "The timestamp of the Tab's last update.",
                    "readOnly": true
                },
                "amount_paid": {
                    "type": "object",
                    "description": "The amount that has been paid for this Tab.",
                    "readOnly": true,
                    "$ref": "#/definitions/Amount"
                },
                "qr_code_token": {
                    "type": "string",
                    "description": "The token used to redirect mobile devices directly to the bunq app. Because they can't scan a QR code.",
                    "readOnly": true
                },
                "tab_url": {
                    "type": "string",
                    "description": "The URL redirecting user to the tab payment in the bunq app. Only works on mobile devices.",
                    "readOnly": true
                },
                "alias": {
                    "type": "object",
                    "description": "The alias of the party that owns this tab.",
                    "readOnly": true,
                    "$ref": "#/definitions/LabelMonetaryAccount"
                },
                "cash_register_location": {
                    "type": "object",
                    "description": "The location of the cash register that created this tab.",
                    "readOnly": true,
                    "$ref": "#/definitions/Geolocation"
                },
                "tab_item": {
                    "type": "array",
                    "description": "The tab items of this tab.",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/TabItem"
                    }
                }
            }
        },
        "TabVisibility": {
            "type": "object",
            "properties": {
                "cash_register_qr_code": {
                    "type": "boolean",
                    "description": "When true the tab will be linked to the ACTIVE cash registers QR code.",
                    "readOnly": false
                },
                "tab_qr_code": {
                    "type": "boolean",
                    "description": "When true the tab will be visible through its own QR code. Use ../tab/{tab-id}/qr-code-content to get the raw content of this QR code",
                    "readOnly": false
                },
                "location": {
                    "type": "object",
                    "description": "The location of the Tab in NearPay.",
                    "readOnly": false,
                    "$ref": "#/definitions/Geolocation"
                }
            }
        },
        "TaxResident": {
            "type": "object",
            "properties": {
                "country": {
                    "type": "string",
                    "description": "The country of the tax number.",
                    "readOnly": false
                },
                "tax_number": {
                    "type": "string",
                    "description": "The tax number.",
                    "readOnly": false
                }
            }
        },
        "TokenQrRequestIdeal": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "description": "The token passed from a site or read from a QR code.",
                    "readOnly": false
                },
                "id": {
                    "type": "integer",
                    "description": "The id of the RequestResponse.",
                    "readOnly": true
                },
                "time_responded": {
                    "type": "string",
                    "description": "The timestamp of when the RequestResponse was responded to.",
                    "readOnly": true
                },
                "time_expiry": {
                    "type": "string",
                    "description": "The timestamp of when the RequestResponse expired or will expire.",
                    "readOnly": true
                },
                "monetary_account_id": {
                    "type": "integer",
                    "description": "The id of the MonetaryAccount the RequestResponse was received on.",
                    "readOnly": true
                },
                "amount_inquired": {
                    "type": "object",
                    "description": "The requested Amount.",
                    "readOnly": true,
                    "$ref": "#/definitions/Amount"
                },
                "amount_responded": {
                    "type": "object",
                    "description": "The Amount the RequestResponse was accepted with.",
                    "readOnly": true,
                    "$ref": "#/definitions/Amount"
                },
                "alias": {
                    "type": "object",
                    "description": "The LabelMonetaryAccount with the public information of the MonetaryAccount this RequestResponse was received on.",
                    "readOnly": true,
                    "$ref": "#/definitions/LabelMonetaryAccount"
                },
                "counterparty_alias": {
                    "type": "object",
                    "description": "The LabelMonetaryAccount with the public information of the MonetaryAccount that is requesting money with this RequestResponse.",
                    "readOnly": true,
                    "$ref": "#/definitions/LabelMonetaryAccount"
                },
                "description": {
                    "type": "string",
                    "description": "The description for the RequestResponse provided by the requesting party. Maximum 9000 characters.",
                    "readOnly": true
                },
                "attachment": {
                    "type": "array",
                    "description": "The Attachments attached to the RequestResponse.",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Attachment"
                    }
                },
                "status": {
                    "type": "string",
                    "description": "The status of the created RequestResponse. Can only be PENDING.",
                    "readOnly": true
                },
                "minimum_age": {
                    "type": "integer",
                    "description": "The minimum age the user accepting the RequestResponse must have.",
                    "readOnly": true
                },
                "require_address": {
                    "type": "string",
                    "description": "Whether or not an address must be provided on accept.",
                    "readOnly": true
                },
                "address_shipping": {
                    "type": "object",
                    "description": "The shipping address provided by the accepting user if an address was requested.",
                    "readOnly": true,
                    "$ref": "#/definitions/Address"
                },
                "address_billing": {
                    "type": "object",
                    "description": "The billing address provided by the accepting user if an address was requested.",
                    "readOnly": true,
                    "$ref": "#/definitions/Address"
                },
                "geolocation": {
                    "type": "object",
                    "description": "The Geolocation where the RequestResponse was created.",
                    "readOnly": true,
                    "$ref": "#/definitions/Geolocation"
                },
                "redirect_url": {
                    "type": "string",
                    "description": "The URL which the user is sent to after accepting or rejecting the Request.",
                    "readOnly": true
                },
                "type": {
                    "type": "string",
                    "description": "The type of the RequestResponse. Can be only be IDEAL.",
                    "readOnly": true
                },
                "sub_type": {
                    "type": "string",
                    "description": "The subtype of the RequestResponse. Can be only be NONE.",
                    "readOnly": true
                },
                "allow_chat": {
                    "type": "boolean",
                    "description": "Whether or not chat messages are allowed.",
                    "readOnly": true
                },
                "eligible_whitelist_id": {
                    "type": "integer",
                    "description": "The whitelist id for this action or null.",
                    "readOnly": true
                }
            }
        },
        "TokenQrRequestSofort": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "description": "The token passed from a site or read from a QR code.",
                    "readOnly": false
                }
            }
        },
        "Ubo": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the ultimate beneficiary owner.",
                    "readOnly": false
                },
                "date_of_birth": {
                    "type": "string",
                    "description": "The date of birth of the ultimate beneficiary owner.",
                    "readOnly": false
                },
                "nationality": {
                    "type": "string",
                    "description": "The nationality of the ultimate beneficiary owner.",
                    "readOnly": false
                }
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "UserLight": {
                    "type": "object",
                    "description": "",
                    "readOnly": true,
                    "$ref": "#/definitions/UserLight"
                },
                "UserPerson": {
                    "type": "object",
                    "description": "",
                    "readOnly": true,
                    "$ref": "#/definitions/UserPerson"
                },
                "UserCompany": {
                    "type": "object",
                    "description": "",
                    "readOnly": true,
                    "$ref": "#/definitions/UserCompany"
                }
            }
        },
        "UserCompany": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The company name.",
                    "readOnly": false
                },
                "public_nick_name": {
                    "type": "string",
                    "description": "The company's public nick name.",
                    "readOnly": false
                },
                "avatar_uuid": {
                    "type": "string",
                    "description": "The public UUID of the company's avatar.",
                    "readOnly": false
                },
                "address_main": {
                    "type": "object",
                    "description": "The company's main address.",
                    "readOnly": false,
                    "$ref": "#/definitions/Address"
                },
                "address_postal": {
                    "type": "object",
                    "description": "The company's postal address.",
                    "readOnly": false,
                    "$ref": "#/definitions/Address"
                },
                "language": {
                    "type": "string",
                    "description": "The person's preferred language. Formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, seperated by an underscore.",
                    "readOnly": false
                },
                "region": {
                    "type": "string",
                    "description": "The person's preferred region. Formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, seperated by an underscore.",
                    "readOnly": false
                },
                "country": {
                    "type": "string",
                    "description": "The country as an ISO 3166-1 alpha-2 country code..",
                    "readOnly": false
                },
                "ubo": {
                    "type": "array",
                    "description": "The names of the company's ultimate beneficiary owners. Minimum zero, maximum four.",
                    "readOnly": false,
                    "items": {
                        "$ref": "#/definitions/Ubo"
                    }
                },
                "chamber_of_commerce_number": {
                    "type": "string",
                    "description": "The company's chamber of commerce number.",
                    "readOnly": false
                },
                "status": {
                    "type": "string",
                    "description": "The user status. Can be: ACTIVE, SIGNUP, RECOVERY.",
                    "readOnly": false
                },
                "sub_status": {
                    "type": "string",
                    "description": "The user sub-status. Can be: NONE, FACE_RESET, APPROVAL, APPROVAL_DIRECTOR, APPROVAL_PARENT, APPROVAL_SUPPORT, COUNTER_IBAN, IDEAL or SUBMIT.",
                    "readOnly": false
                },
                "session_timeout": {
                    "type": "integer",
                    "description": "The setting for the session timeout of the company in seconds.",
                    "readOnly": false
                },
                "daily_limit_without_confirmation_login": {
                    "type": "object",
                    "description": "The amount the company can pay in the session without asking for credentials.",
                    "readOnly": false,
                    "$ref": "#/definitions/Amount"
                },
                "notification_filters": {
                    "type": "array",
                    "description": "The types of notifications that will result in a push notification or URL callback for this UserCompany.",
                    "readOnly": false,
                    "items": {
                        "$ref": "#/definitions/NotificationFilter"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "The id of the modified company.",
                    "readOnly": true
                },
                "created": {
                    "type": "string",
                    "description": "The timestamp of the company object's creation.",
                    "readOnly": true
                },
                "updated": {
                    "type": "string",
                    "description": "The timestamp of the company object's last update.",
                    "readOnly": true
                },
                "public_uuid": {
                    "type": "string",
                    "description": "The company's public UUID.",
                    "readOnly": true
                },
                "display_name": {
                    "type": "string",
                    "description": "The company's display name.",
                    "readOnly": true
                },
                "alias": {
                    "type": "array",
                    "description": "The aliases of the account.",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Pointer"
                    }
                },
                "type_of_business_entity": {
                    "type": "string",
                    "description": "The type of business entity.",
                    "readOnly": true
                },
                "sector_of_industry": {
                    "type": "string",
                    "description": "The sector of industry.",
                    "readOnly": true
                },
                "counter_bank_iban": {
                    "type": "string",
                    "description": "The company's other bank account IBAN, through which we verify it.",
                    "readOnly": true
                },
                "avatar": {
                    "type": "object",
                    "description": "The company's avatar.",
                    "readOnly": true,
                    "$ref": "#/definitions/Avatar"
                },
                "version_terms_of_service": {
                    "type": "string",
                    "description": "The version of the terms of service accepted by the user.",
                    "readOnly": true
                },
                "director_alias": {
                    "type": "object",
                    "description": "The existing bunq user alias for the company's director.",
                    "readOnly": true,
                    "$ref": "#/definitions/LabelUser"
                },
                "card_ids": {
                    "type": "array",
                    "description": "Card ids used for centralized card limits.",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/BunqId"
                    }
                },
                "card_limits": {
                    "type": "array",
                    "description": "The centralized limits for user's cards.",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/CardLimit"
                    }
                },
                "customer": {
                    "type": "object",
                    "description": "The customer profile of the company.",
                    "readOnly": true,
                    "$ref": "#/definitions/Customer"
                },
                "customer_limit": {
                    "type": "object",
                    "description": "The customer limits of the company.",
                    "readOnly": true,
                    "$ref": "#/definitions/CustomerLimit"
                },
                "billing_contract": {
                    "type": "array",
                    "description": "The subscription of the company.",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/BillingContractSubscription"
                    }
                }
            }
        },
        "UserCredentialPasswordIp": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The id of the credential.",
                    "readOnly": true
                },
                "created": {
                    "type": "string",
                    "description": "The timestamp of the credential object's creation.",
                    "readOnly": true
                },
                "updated": {
                    "type": "string",
                    "description": "The timestamp of the credential object's last update.",
                    "readOnly": true
                },
                "status": {
                    "type": "string",
                    "description": "The status of the credential.",
                    "readOnly": true
                },
                "expiry_time": {
                    "type": "string",
                    "description": "When the status is PENDING_FIRST_USE: when the credential expires.",
                    "readOnly": true
                },
                "token_value": {
                    "type": "string",
                    "description": "When the status is PENDING_FIRST_USE: the value of the token.",
                    "readOnly": true
                },
                "permitted_device": {
                    "type": "object",
                    "description": "When the status is ACTIVE: the details of the device that may use the credential.",
                    "readOnly": true,
                    "$ref": "#/definitions/PermittedDevice"
                }
            }
        },
        "UserLight": {
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "string",
                    "description": "The user's first name.",
                    "readOnly": false
                },
                "middle_name": {
                    "type": "string",
                    "description": "The user's middle name.",
                    "readOnly": false
                },
                "last_name": {
                    "type": "string",
                    "description": "The user's last name.",
                    "readOnly": false
                },
                "public_nick_name": {
                    "type": "string",
                    "description": "The public nick name for the user.",
                    "readOnly": false
                },
                "address_main": {
                    "type": "object",
                    "description": "The user's main address.",
                    "readOnly": false,
                    "$ref": "#/definitions/Address"
                },
                "address_postal": {
                    "type": "object",
                    "description": "The user's postal address.",
                    "readOnly": false,
                    "$ref": "#/definitions/Address"
                },
                "avatar_uuid": {
                    "type": "string",
                    "description": "The public UUID of the user's avatar.",
                    "readOnly": false
                },
                "social_security_number": {
                    "type": "string",
                    "description": "The user's social security number.",
                    "readOnly": false
                },
                "tax_resident": {
                    "type": "array",
                    "description": "The user's tax residence numbers for different countries.",
                    "readOnly": false,
                    "items": {
                        "$ref": "#/definitions/TaxResident"
                    }
                },
                "document_type": {
                    "type": "string",
                    "description": "The type of identification document the user registered with.",
                    "readOnly": false
                },
                "document_number": {
                    "type": "string",
                    "description": "The identification document number the user registered with.",
                    "readOnly": false
                },
                "document_country_of_issuance": {
                    "type": "string",
                    "description": "The country which issued the identification document the user registered with.",
                    "readOnly": false
                },
                "document_front_attachment_id": {
                    "type": "integer",
                    "description": "The reference to the uploaded picture/scan of the front side of the identification document.",
                    "readOnly": false
                },
                "document_back_attachment_id": {
                    "type": "integer",
                    "description": "The reference to the uploaded picture/scan of the back side of the identification document.",
                    "readOnly": false
                },
                "date_of_birth": {
                    "type": "string",
                    "description": "The user's date of birth. Accepts ISO8601 date formats.",
                    "readOnly": false
                },
                "place_of_birth": {
                    "type": "string",
                    "description": "The user's place of birth.",
                    "readOnly": false
                },
                "country_of_birth": {
                    "type": "string",
                    "description": "The user's country of birth. Formatted as a SO 3166-1 alpha-2 country code.",
                    "readOnly": false
                },
                "nationality": {
                    "type": "string",
                    "description": "The user's nationality. Formatted as a SO 3166-1 alpha-2 country code.",
                    "readOnly": false
                },
                "language": {
                    "type": "string",
                    "description": "The user's preferred language. Formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, seperated by an underscore.",
                    "readOnly": false
                },
                "region": {
                    "type": "string",
                    "description": "The user's preferred region. Formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, seperated by an underscore.",
                    "readOnly": false
                },
                "gender": {
                    "type": "string",
                    "description": "The user's gender. Can be MALE, FEMALE or UNKNOWN.",
                    "readOnly": false
                },
                "status": {
                    "type": "string",
                    "description": "The user status. The user status. Can be: ACTIVE, BLOCKED, SIGNUP, DENIED or ABORTED.",
                    "readOnly": false
                },
                "sub_status": {
                    "type": "string",
                    "description": "The user sub-status. Can be: NONE, FACE_RESET, APPROVAL, APPROVAL_PARENT, AWAITING_PARENT, APPROVAL_SUPPORT, COUNTER_IBAN, IDEAL or SUBMIT.",
                    "readOnly": false
                },
                "legal_guardian_alias": {
                    "type": "object",
                    "description": "The legal guardian of the user. Required for minors.",
                    "readOnly": false,
                    "$ref": "#/definitions/Pointer"
                },
                "session_timeout": {
                    "type": "integer",
                    "description": "The setting for the session timeout of the user in seconds.",
                    "readOnly": false
                },
                "daily_limit_without_confirmation_login": {
                    "type": "object",
                    "description": "The amount the user can pay in the session without asking for credentials.",
                    "readOnly": false,
                    "$ref": "#/definitions/Amount"
                },
                "notification_filters": {
                    "type": "array",
                    "description": "The types of notifications that will result in a push notification or URL callback for this UserLight.",
                    "readOnly": false,
                    "items": {
                        "$ref": "#/definitions/NotificationFilter"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "The id of the user.",
                    "readOnly": true
                },
                "created": {
                    "type": "string",
                    "description": "The timestamp of the user object's creation.",
                    "readOnly": true
                },
                "updated": {
                    "type": "string",
                    "description": "The timestamp of the user object's last update.",
                    "readOnly": true
                },
                "public_uuid": {
                    "type": "string",
                    "description": "The user's public UUID.",
                    "readOnly": true
                },
                "legal_name": {
                    "type": "string",
                    "description": "The user's legal name.",
                    "readOnly": true
                },
                "display_name": {
                    "type": "string",
                    "description": "The display name for the user.",
                    "readOnly": true
                },
                "alias": {
                    "type": "array",
                    "description": "The aliases of the user.",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Pointer"
                    }
                },
                "avatar": {
                    "type": "object",
                    "description": "The user's avatar.",
                    "readOnly": true,
                    "$ref": "#/definitions/Avatar"
                },
                "version_terms_of_service": {
                    "type": "string",
                    "description": "The version of the terms of service accepted by the user.",
                    "readOnly": true
                }
            }
        },
        "UserPerson": {
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "string",
                    "description": "The person's first name.",
                    "readOnly": false
                },
                "middle_name": {
                    "type": "string",
                    "description": "The person's middle name.",
                    "readOnly": false
                },
                "last_name": {
                    "type": "string",
                    "description": "The person's last name.",
                    "readOnly": false
                },
                "public_nick_name": {
                    "type": "string",
                    "description": "The public nick name for the person.",
                    "readOnly": false
                },
                "address_main": {
                    "type": "object",
                    "description": "The person's main address.",
                    "readOnly": false,
                    "$ref": "#/definitions/Address"
                },
                "address_postal": {
                    "type": "object",
                    "description": "The person's postal address.",
                    "readOnly": false,
                    "$ref": "#/definitions/Address"
                },
                "avatar_uuid": {
                    "type": "string",
                    "description": "The public UUID of the user's avatar.",
                    "readOnly": false
                },
                "tax_resident": {
                    "type": "array",
                    "description": "The user's tax residence numbers for different countries.",
                    "readOnly": false,
                    "items": {
                        "$ref": "#/definitions/TaxResident"
                    }
                },
                "document_type": {
                    "type": "string",
                    "description": "The type of identification document the person registered with.",
                    "readOnly": false
                },
                "document_number": {
                    "type": "string",
                    "description": "The identification document number the person registered with.",
                    "readOnly": false
                },
                "document_country_of_issuance": {
                    "type": "string",
                    "description": "The country which issued the identification document the person registered with.",
                    "readOnly": false
                },
                "document_front_attachment_id": {
                    "type": "integer",
                    "description": "The reference to the uploaded picture/scan of the front side of the identification document.",
                    "readOnly": false
                },
                "document_back_attachment_id": {
                    "type": "integer",
                    "description": "The reference to the uploaded picture/scan of the back side of the identification document.",
                    "readOnly": false
                },
                "date_of_birth": {
                    "type": "string",
                    "description": "The person's date of birth. Accepts ISO8601 date formats.",
                    "readOnly": false
                },
                "place_of_birth": {
                    "type": "string",
                    "description": "The person's place of birth.",
                    "readOnly": false
                },
                "country_of_birth": {
                    "type": "string",
                    "description": "The person's country of birth. Formatted as a SO 3166-1 alpha-2 country code.",
                    "readOnly": false
                },
                "nationality": {
                    "type": "string",
                    "description": "The person's nationality. Formatted as a SO 3166-1 alpha-2 country code.",
                    "readOnly": false
                },
                "language": {
                    "type": "string",
                    "description": "The person's preferred language. Formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, seperated by an underscore.",
                    "readOnly": false
                },
                "region": {
                    "type": "string",
                    "description": "The person's preferred region. Formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, seperated by an underscore.",
                    "readOnly": false
                },
                "gender": {
                    "type": "string",
                    "description": "The person's gender. Can be MALE, FEMALE or UNKNOWN.",
                    "readOnly": false
                },
                "status": {
                    "type": "string",
                    "description": "The user status. The user status. Can be: ACTIVE, BLOCKED, SIGNUP, RECOVERY, DENIED or ABORTED.",
                    "readOnly": false
                },
                "sub_status": {
                    "type": "string",
                    "description": "The user sub-status. Can be: NONE, FACE_RESET, APPROVAL, APPROVAL_DIRECTOR, APPROVAL_PARENT, APPROVAL_SUPPORT, COUNTER_IBAN, IDEAL or SUBMIT.",
                    "readOnly": false
                },
                "legal_guardian_alias": {
                    "type": "object",
                    "description": "The legal guardian of the user. Required for minors.",
                    "readOnly": false,
                    "$ref": "#/definitions/Pointer"
                },
                "session_timeout": {
                    "type": "integer",
                    "description": "The setting for the session timeout of the user in seconds.",
                    "readOnly": false
                },
                "card_ids": {
                    "type": "array",
                    "description": "Card ids used for centralized card limits.",
                    "readOnly": false,
                    "items": {
                        "$ref": "#/definitions/BunqId"
                    }
                },
                "card_limits": {
                    "type": "array",
                    "description": "The centralized limits for user's cards.",
                    "readOnly": false,
                    "items": {
                        "$ref": "#/definitions/CardLimit"
                    }
                },
                "daily_limit_without_confirmation_login": {
                    "type": "object",
                    "description": "The amount the user can pay in the session without asking for credentials.",
                    "readOnly": false,
                    "$ref": "#/definitions/Amount"
                },
                "notification_filters": {
                    "type": "array",
                    "description": "The types of notifications that will result in a push notification or URL callback for this UserPerson.",
                    "readOnly": false,
                    "items": {
                        "$ref": "#/definitions/NotificationFilter"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "The id of the modified person object.",
                    "readOnly": true
                },
                "created": {
                    "type": "string",
                    "description": "The timestamp of the person object's creation.",
                    "readOnly": true
                },
                "updated": {
                    "type": "string",
                    "description": "The timestamp of the person object's last update.",
                    "readOnly": true
                },
                "public_uuid": {
                    "type": "string",
                    "description": "The person's public UUID.",
                    "readOnly": true
                },
                "legal_name": {
                    "type": "string",
                    "description": "The person's legal name.",
                    "readOnly": true
                },
                "display_name": {
                    "type": "string",
                    "description": "The display name for the person.",
                    "readOnly": true
                },
                "alias": {
                    "type": "array",
                    "description": "The aliases of the user.",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Pointer"
                    }
                },
                "avatar": {
                    "type": "object",
                    "description": "The user's avatar.",
                    "readOnly": true,
                    "$ref": "#/definitions/Avatar"
                },
                "version_terms_of_service": {
                    "type": "string",
                    "description": "The version of the terms of service accepted by the user.",
                    "readOnly": true
                }
            }
        },
        "Whitelist": {
            "type": "object",
            "properties": {}
        },
        "WhitelistResult": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the whitelist entry.",
                    "readOnly": true
                },
                "monetary_account_paying_id": {
                    "type": "integer",
                    "description": "The account from which payments will be deducted when a transaction is matched with this whitelist.",
                    "readOnly": true
                },
                "status": {
                    "type": "string",
                    "description": "The status of the WhitelistResult.",
                    "readOnly": true
                },
                "error_message": {
                    "type": "array",
                    "description": "The message when the whitelist result has failed due to user error.",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Error"
                    }
                },
                "whitelist": {
                    "type": "object",
                    "description": "The corresponding whitelist.",
                    "readOnly": true,
                    "$ref": "#/definitions/Whitelist"
                },
                "object": {
                    "type": "object",
                    "description": "The details of the external object the event was created for.",
                    "readOnly": true,
                    "$ref": "#/definitions/WhitelistResultViewAnchoredObject"
                },
                "request_reference_split_the_bill": {
                    "type": "array",
                    "description": "The reference to the object used for split the bill. Can be RequestInquiry or RequestInquiryBatch",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/RequestInquiryReference"
                    }
                }
            }
        },
        "WhitelistResultViewAnchoredObject": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the whitelist entry.",
                    "readOnly": true
                },
                "requestResponse": {
                    "type": "object",
                    "description": "The RequestResponse object",
                    "readOnly": true,
                    "$ref": "#/definitions/RequestResponse"
                },
                "draftPayment": {
                    "type": "object",
                    "description": "The DraftPayment object",
                    "readOnly": true,
                    "$ref": "#/definitions/DraftPayment"
                }
            }
        }
    },
    "tags": [
        {
            "name": "amount-used",
            "description": ""
        },
        {
            "name": "attachment",
            "description": ""
        },
        {
            "name": "attachment-public",
            "description": ""
        },
        {
            "name": "attachment-tab",
            "description": ""
        },
        {
            "name": "avatar",
            "description": ""
        },
        {
            "name": "bunqme-tab",
            "description": ""
        },
        {
            "name": "card",
            "description": ""
        },
        {
            "name": "card-debit",
            "description": ""
        },
        {
            "name": "card-name",
            "description": ""
        },
        {
            "name": "cash-register",
            "description": ""
        },
        {
            "name": "certificate-pinned",
            "description": ""
        },
        {
            "name": "chat",
            "description": ""
        },
        {
            "name": "chat-conversation",
            "description": ""
        },
        {
            "name": "content",
            "description": ""
        },
        {
            "name": "credential-password-ip",
            "description": ""
        },
        {
            "name": "customer-statement",
            "description": ""
        },
        {
            "name": "device",
            "description": ""
        },
        {
            "name": "device-server",
            "description": ""
        },
        {
            "name": "draft-payment",
            "description": ""
        },
        {
            "name": "draft-share-invite-api-key",
            "description": ""
        },
        {
            "name": "draft-share-invite-bank",
            "description": ""
        },
        {
            "name": "export-annual-overview",
            "description": ""
        },
        {
            "name": "generated-cvc2",
            "description": ""
        },
        {
            "name": "invoice",
            "description": ""
        },
        {
            "name": "ip",
            "description": ""
        },
        {
            "name": "message",
            "description": ""
        },
        {
            "name": "message-attachment",
            "description": ""
        },
        {
            "name": "message-text",
            "description": ""
        },
        {
            "name": "monetary-account",
            "description": ""
        },
        {
            "name": "monetary-account-bank",
            "description": ""
        },
        {
            "name": "payment",
            "description": ""
        },
        {
            "name": "payment-batch",
            "description": ""
        },
        {
            "name": "qr-code",
            "description": ""
        },
        {
            "name": "qr-code-content",
            "description": ""
        },
        {
            "name": "replace",
            "description": ""
        },
        {
            "name": "request-inquiry",
            "description": ""
        },
        {
            "name": "request-inquiry-batch",
            "description": ""
        },
        {
            "name": "request-response",
            "description": ""
        },
        {
            "name": "sandbox-user",
            "description": ""
        },
        {
            "name": "schedule",
            "description": ""
        },
        {
            "name": "schedule-instance",
            "description": ""
        },
        {
            "name": "schedule-payment",
            "description": ""
        },
        {
            "name": "schedule-payment-batch",
            "description": ""
        },
        {
            "name": "server-public-key",
            "description": ""
        },
        {
            "name": "session",
            "description": ""
        },
        {
            "name": "share-invite-bank-inquiry",
            "description": ""
        },
        {
            "name": "share-invite-bank-response",
            "description": ""
        },
        {
            "name": "tab",
            "description": ""
        },
        {
            "name": "tab-item",
            "description": ""
        },
        {
            "name": "tab-item-batch",
            "description": ""
        },
        {
            "name": "tab-result-inquiry",
            "description": ""
        },
        {
            "name": "tab-result-response",
            "description": ""
        },
        {
            "name": "tab-usage-multiple",
            "description": ""
        },
        {
            "name": "tab-usage-single",
            "description": ""
        },
        {
            "name": "token-qr-request-ideal",
            "description": ""
        },
        {
            "name": "token-qr-request-sofort",
            "description": ""
        },
        {
            "name": "user",
            "description": ""
        },
        {
            "name": "user-company",
            "description": ""
        },
        {
            "name": "user-person",
            "description": ""
        }
    ]
}